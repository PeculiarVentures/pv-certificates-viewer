/*!
 * Â© Peculiar Ventures https://peculiarventures.com/ - MIT License
 */
import{A as t,v as s,K as i,C as e,N as r,L as n,G as a,y as h,x as o,z as u,B as c,R as f,M as l,O as g,P as m,Q as b,S as p,F as E,H as w,J as C,D as N}from"./p-63baaa17.js";
/**
 * @license
 * Copyright (c) Peculiar Ventures, LLC.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */class A extends t{constructor(t){super(s(t),i);this.thumbprints={};this.type="X.509 Certificate";this.tag="CERTIFICATE";const{tbsCertificate:a}=this.asn;this.serialNumber=e.ToHex(a.serialNumber);this.subject=new r(a.subject).toJSON();this.issuer=new r(a.issuer).toJSON();this.version=a.version+1;const h=a.validity.notBefore.utcTime||a.validity.notBefore.generalTime;if(!h){throw new Error("Cannot get 'notBefore' value")}this.notBefore=h;const o=a.validity.notAfter.utcTime||a.validity.notAfter.generalTime;if(!o){throw new Error("Cannot get 'notAfter' value")}this.notAfter=o;this.validity=n(this.notBefore,this.notAfter)}parseExtensions(){const{tbsCertificate:t}=this.asn;if(t.extensions){this.extensions=t.extensions.map((t=>new a(h.serialize(t))))}}getPublicKeyInfo(t){const{subjectPublicKey:s,algorithm:i}=t;let e;if(i.algorithm===o&&i.parameters){e=h.parse(i.parameters,u)}if(i.algorithm===c){e=h.parse(s,f)}if(i.algorithm===l){e=h.parse(s,g);e=e.map((t=>this.getPublicKeyInfo(t)))}const r=h.serialize(t);return{params:e,value:r,algorithm:i.algorithm}}get publicKey(){return this.getPublicKeyInfo(this.asn.tbsCertificate.subjectPublicKeyInfo)}get signature(){const{signatureValue:t,signatureAlgorithm:s}=this.asn;let i;if(s.algorithm===m){const e=h.parse(t,b);const r=h.parse(s.parameters,p);i=r.map(((t,s)=>Object.assign(Object.assign({},t),{value:e[s]})))}return{params:i,value:t,algorithm:s.algorithm}}async getThumbprint(t="SHA-1"){try{const s=await E(t,this.raw);if(s){this.thumbprints[t]=e.ToHex(s)}}catch(t){console.error("Error thumbprint get:",t)}}get commonName(){if(!this.subject){return""}for(let t=0;t<this.subject.length;t+=1){const s=this.subject[t];if(s.shortName==="CN"||s.shortName==="E"||s.shortName==="O"){return s.value}}return""}get issuerCommonName(){if(!this.issuer){return""}for(let t=0;t<this.issuer.length;t+=1){const s=this.issuer[t];if(s.shortName==="CN"){return s.value}if(s.shortName==="E"){return s.value}}return""}get isRoot(){return JSON.stringify(this.issuer)===JSON.stringify(this.subject)}subjectToString(){if(!this.subject){return""}return this.subject.map((t=>`${t.shortName}=${t.value}`)).join(", ")}issuerToString(){if(!this.issuer){return""}return this.issuer.map((t=>`${t.shortName}=${t.value}`)).join(", ")}toString(t="pem"){switch(t){case"hex":return C(e.ToHex(this.raw));case"pem":return`-----BEGIN ${this.tag}-----\n${w(this.toString("base64"))}\n-----END ${this.tag}-----`;default:return e.ToBase64(this.raw)}}downloadAsPEM(t){N.cert.asPEM(this.toString("pem"),t||this.commonName)}downloadAsDER(t){N.cert.asDER(this.toString("hex"),t||this.commonName)}}export{A as X};
//# sourceMappingURL=p-c39e53c6.js.map