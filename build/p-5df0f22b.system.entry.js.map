{"version":3,"names":["BasicAttribute","props","children","attribute","h","RowValue","name","value","getStringByOID","asn","type","colSpan","class","NamePart","map","relativeDistinguishedName","attributeTypeAndValue","OIDs","toString","NameAttribute","ActivityDescriptionAttribute","camelCaseToWords","TableRowTable","GeneralNamePart","generalName","codeAuthority","getDNSNameLink","getIPAddressLink","codeId","shortName","shortDescription","WebGdprAttribute","assessmentAuthority","assessmentLocation","assessmentRef","dataStorageTerritory","description","InsuranceValueAttribute","concat","base","degree","location","TypeRelationshipAttribute","Object","keys","keyName","toNumber","l10n","getString","getValueRank","ratio","ValuationRankingAttribute","values","AsStringAttribute","monospace","UnstructuredNameAttribute","utf8String","ChallengePasswordAttribute","ExtensionRequestAttribute","extensions","e","Extension","AsnConvert","serialize","Extensions","getLEILink","PrivateKeyPossessionStatementAttribute","certificateRaw","cert","Convert","ToHex","signer","serialNumber","issuer","certificate","ToBase64","Attributes","attributes","length","RowTitle","Name","ExtensionRequest","ActivityDescription","WebGDPR","InsuranceValue","TypeRelationship","ValuationRanking","UnstructuredName","ChallengePassword","PrivateKeyPossessionStatement","_a","console","error","RevokedCertificates","revokedCertificates","userCertificate","dateShort","revocationDate","getTime","crlEntryExtensions","extension","CRLReason","extnID","toJSON","reason","InvalidityDate","CertificateIssuer","gn","extnValue","Holder","holder","baseCertificateID","objectDigestInfo","item","serial","digestAlgorithm","algorithm","objectDigest","digestedObjectType","Issuer","certificateViewerCss","AttributeCertificateViewer","exports","class_1","hostRef","_this","this","mobileMediaQueryString","mobileScreenView","isDecodeInProcess","getAuthKeyIdParentLink","authKeyIdParentLink","replace","getAuthKeyIdSiblingsLink","authKeyIdSiblingsLink","getSubjectKeyIdChildrenLink","subjectKeyIdChildrenLink","getSubjectKeyIdSiblingsLink","subjectKeyIdSiblingsLink","prototype","handleMediaQueryChange","event","matches","componentWillLoad","decodeCertificate","mobileMediaQuery","window","matchMedia","addEventListener","bind","disconnectedCallback","removeEventListener","X509AttributeCertificate","certificateDecoded","parseExtensions","parseAttributes","getThumbprint","_b","sent","certificateDecodeError","error_1","watchCertificateAndDecode","newValue","oldValue","renderErrorState","Typography","renderEmptyState","render","Host","String","BasicInformation","assign","Signature","signature","Thumbprints","thumbprints","download","Miscellaneous","certificateChainViewerCss","CertificateChainViewer","class_2","selectedCertificateIndex","certificates","role","Array","from","index","onClick","commonName","CrlViewer","class_3","X509Crl","error_2","getIssuerDnLink","issuerDnLink","IssuerName","CsrViewer","class_4","Pkcs10CertificateRequest","error_3","SubjectName","subject","PublicKey","publicKey","SshBasicInformation","validity","notBefore","notAfter","keyId","principals","criticalOptions","undefined","join","SshPublicKey","key","thumbprint","collapse","SshSignatureKey","SshCertificateViewer","class_5","SshCertificate","parsePublicKey","parseSignatureKey","error_4","signatureKey"],"sources":["src/components/certificate-details-parts/attributes/basic_attribute.tsx","src/components/certificate-details-parts/attributes/name_part.tsx","src/components/certificate-details-parts/attributes/name_attribute.tsx","src/components/certificate-details-parts/attributes/activity_description_attribute.tsx","src/components/certificate-details-parts/attributes/web_gdpr_attribute.tsx","src/components/certificate-details-parts/attributes/insurance_value_attribute.tsx","src/components/certificate-details-parts/attributes/type_relationship_attribute.tsx","src/components/certificate-details-parts/attributes/valuation_ranking_attribute.tsx","src/components/certificate-details-parts/attributes/as_string_attribute.tsx","src/components/certificate-details-parts/attributes/unstructured_name_attribute.tsx","src/components/certificate-details-parts/attributes/challenge_password_attribute.tsx","src/components/certificate-details-parts/attributes/extension_request_attribute.tsx","src/components/certificate-details-parts/attributes/private_key_possession_statement_attribute.tsx","src/components/certificate-details-parts/attributes/index.tsx","src/components/certificate-details-parts/revoked_certificates.tsx","src/components/certificate-details-parts/holder.tsx","src/components/certificate-details-parts/issuer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-attribute-certificate-viewer&encapsulation=shadow","src/components/attribute-certificate-viewer/attribute-certificate-viewer.tsx","src/components/certificate-chain-viewer/certificate-chain-viewer.scss?tag=peculiar-certificate-chain-viewer&encapsulation=shadow","src/components/certificate-chain-viewer/certificate-chain-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-crl-viewer&encapsulation=shadow","src/components/crl-viewer/crl-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-csr-viewer&encapsulation=shadow","src/components/csr-viewer/csr-viewer.tsx","src/components/ssh-certificate-viewer/-components/basic_information.tsx","src/components/ssh-certificate-viewer/-components/public_key.tsx","src/components/ssh-certificate-viewer/-components/signature_key.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-ssh-certificate-viewer&encapsulation=shadow","src/components/ssh-certificate-viewer/ssh-certificate-viewer.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { getStringByOID } from '../../../utils';\nimport { RowValue } from '../row';\n\ninterface IBasicAttributeProps {\n  attribute: Attribute<TAttributeValue>;\n}\n\nexport const BasicAttribute: FunctionalComponent<IBasicAttributeProps> = (props, children) => {\n  const { attribute } = props;\n\n  return ([\n    <RowValue\n      name=\"Name\"\n      value={getStringByOID(attribute.asn.type)}\n    />,\n    children,\n    <tr>\n      <td colSpan={2} class=\"divider\">\n        <span />\n      </td>\n    </tr>,\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\nimport { OIDs } from '../../../constants/oids';\nimport { RowValue } from '../row';\n\ninterface INamePartProps {\n  name: Name;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const NamePart: FunctionalComponent<INamePartProps> = (props): any[] => {\n  const { name } = props;\n\n  if (!name) {\n    return null;\n  }\n\n  return name.map((relativeDistinguishedName) => (\n    relativeDistinguishedName.map((attributeTypeAndValue) => (\n      <RowValue\n        name={OIDs[attributeTypeAndValue.type] || attributeTypeAndValue.type}\n        value={attributeTypeAndValue.value.toString()}\n      />\n    ))\n  ));\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { NamePart } from './name_part';\n\ninterface INameAttributeProps {\n  attribute: Attribute<Name>;\n}\n\nexport const NameAttribute:\nFunctionalComponent<INameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <NamePart\n        name={attribute.value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ActivityDescription } from '@peculiar/asn1-ntqwac';\nimport { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IActivityDescriptionAttributeProps {\n  attribute: Attribute<ActivityDescription>;\n}\n\nexport const ActivityDescriptionAttribute:\nFunctionalComponent<IActivityDescriptionAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('codeAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('codeId')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeId}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('shortName')}\n        value={attribute.value.shortName}\n      />\n      <RowValue\n        name={camelCaseToWords('shortDescription')}\n        value={attribute.value.shortDescription}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { WebGDPR } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IWebGdprAttributeProps {\n  attribute: Attribute<WebGDPR>;\n}\n\nexport const WebGdprAttribute:\nFunctionalComponent<IWebGdprAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('assessmentAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentLocation')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentLocation}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentRef')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentRef}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('dataStorageTerritory')}\n        value={attribute.value.dataStorageTerritory}\n      />\n      <RowValue\n        name={camelCaseToWords('description')}\n        value={attribute.value.description}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { InsuranceValue } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IInsuranceValueAttributeProps {\n  attribute: Attribute<InsuranceValue>;\n}\n\nexport const InsuranceValueAttribute:\nFunctionalComponent<IInsuranceValueAttributeProps> = (props) => {\n  const { attribute } = props;\n  const value = `${attribute.value.base} * 10^${attribute.value.degree} ${attribute.value.location}`;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { TypeRelationship } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { l10n } from '../../../utils';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface ITypeRelationshipAttributeProps {\n  attribute: Attribute<TypeRelationship>;\n}\n\nexport const TypeRelationshipAttribute:\nFunctionalComponent<ITypeRelationshipAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      {Object.keys(attribute.value).map((keyName) => (\n        <RowValue\n          name={keyName}\n          value={attribute.value[keyName].toNumber() ? l10n.getString('yes') : l10n.getString('no')}\n        />\n      ))}\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ValuationRanking } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IValuationRankingAttributeProps {\n  attribute: Attribute<ValuationRanking>;\n}\n\nconst getValueRank = (value: number): string => {\n  let ratio = 1;\n\n  if (value / 100 > 1) {\n    ratio = 100;\n  } else if (value / 10 > 1) {\n    ratio = 10;\n  }\n\n  return `${value}/${5 * ratio}`;\n};\n\nexport const ValuationRankingAttribute:\nFunctionalComponent<IValuationRankingAttributeProps> = (props) => {\n  const { attribute } = props;\n  const values = Object.keys(attribute.value).map((keyName) => ([\n    getValueRank(attribute.value[keyName]),\n    <br />,\n  ]));\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={values as unknown as string[]}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IAsStringAttributeProps {\n  attribute: Attribute<string>;\n}\n\nexport const AsStringAttribute:\nFunctionalComponent<IAsStringAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value}\n        monospace\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { UnstructuredName } from '@peculiar/asn1-pkcs9';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IUnstructuredNameAttributeProps {\n  attribute: Attribute<UnstructuredName>;\n}\n\nexport const UnstructuredNameAttribute:\nFunctionalComponent<IUnstructuredNameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.utf8String}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ChallengePassword } from '@peculiar/asn1-pkcs9';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IChallengePasswordAttributeProps {\n  attribute: Attribute<ChallengePassword>;\n}\n\nexport const ChallengePasswordAttribute:\nFunctionalComponent<IChallengePasswordAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.toString()}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { ExtensionRequest } from '@peculiar/asn1-pkcs9';\nimport { AsnConvert } from '@peculiar/asn1-schema';\nimport { Extension, TExtensionValue } from '../../../crypto/extension';\nimport { Attribute } from '../../../crypto/attribute';\nimport { Extensions } from '../../certificate-details-parts';\nimport { TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IExtensionRequestAttributeProps {\n  attribute: Attribute<ExtensionRequest>;\n}\n\nexport const ExtensionRequestAttribute:\nFunctionalComponent<IExtensionRequestAttributeProps> = (props) => {\n  const { attribute } = props;\n  let extensions: Extension<TExtensionValue>[];\n\n  if (attribute.value) {\n    extensions = attribute.value.map((e) => new Extension(AsnConvert.serialize(e)));\n  }\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <TableRowTable>\n        <Extensions\n          extensions={extensions}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n          getLEILink={() => ''}\n        />\n      </TableRowTable>\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { AsnConvert } from '@peculiar/asn1-schema';\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { PrivateKeyPossessionStatement } from '@peculiar/asn1-private-key-stmt';\nimport { Convert } from 'pvtsutils';\nimport { Attribute } from '../../../crypto/attribute';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\nimport { NamePart } from './name_part';\n\ninterface IPrivateKeyPossessionStatementAttributeProps {\n  attribute: Attribute<PrivateKeyPossessionStatement>;\n}\n\nexport const PrivateKeyPossessionStatementAttribute:\nFunctionalComponent<IPrivateKeyPossessionStatementAttributeProps> = (props) => {\n  const { attribute } = props;\n  const certificateRaw = attribute.value.cert\n    ? AsnConvert.serialize(attribute.value.cert)\n    : null;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Serial Number\"\n        value={Convert.ToHex(attribute.value.signer.serialNumber)}\n        monospace\n      />\n      <RowValue\n        name=\"Issuer\"\n        value=\"\"\n      />\n      <TableRowTable>\n        <NamePart\n          name={attribute.value.signer.issuer}\n        />\n      </TableRowTable>\n      {certificateRaw && [\n        <RowValue\n          name=\"Certificate\"\n          value=\"\"\n        />,\n        <TableRowTable>\n          <peculiar-certificate-viewer\n            certificate={Convert.ToBase64(certificateRaw)}\n          />\n        </TableRowTable>,\n      ]}\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Name } from '@peculiar/asn1-x509';\nimport {\n  TypeRelationship,\n  ActivityDescription,\n  WebGDPR,\n  InsuranceValue,\n  ValuationRanking,\n} from '@peculiar/asn1-ntqwac';\nimport {\n  UnstructuredName,\n  ChallengePassword,\n  ExtensionRequest,\n} from '@peculiar/asn1-pkcs9';\nimport { PrivateKeyPossessionStatement } from '@peculiar/asn1-private-key-stmt';\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { RowTitle } from '../row';\nimport { NameAttribute } from './name_attribute';\nimport { ActivityDescriptionAttribute } from './activity_description_attribute';\nimport { WebGdprAttribute } from './web_gdpr_attribute';\nimport { InsuranceValueAttribute } from './insurance_value_attribute';\nimport { TypeRelationshipAttribute } from './type_relationship_attribute';\nimport { ValuationRankingAttribute } from './valuation_ranking_attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { AsStringAttribute } from './as_string_attribute';\nimport { UnstructuredNameAttribute } from './unstructured_name_attribute';\nimport { ChallengePasswordAttribute } from './challenge_password_attribute';\nimport { ExtensionRequestAttribute } from './extension_request_attribute';\nimport { PrivateKeyPossessionStatementAttribute } from './private_key_possession_statement_attribute';\n\ninterface IAttributesPtops extends\n  IGeneralNameOptions,\n  ILeiOptions,\n  IAuthorityKeyIdentifierOptions,\n  ISubjectKeyIdentifierOptions {\n  attributes: Attribute<TAttributeValue>[];\n}\n\nexport const Attributes: FunctionalComponent<IAttributesPtops> = (props) => {\n  const { attributes } = props;\n\n  if (!attributes || !attributes.length) {\n    return null;\n  }\n\n  return ([\n    <RowTitle\n      value=\"Attributes\"\n    />,\n    attributes.map((attribute) => {\n      try {\n        if (attribute.value instanceof Name) {\n          return (\n            <NameAttribute\n              attribute={attribute as unknown as Attribute<Name>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ExtensionRequest) {\n          return (\n            <ExtensionRequestAttribute\n              attribute={attribute as unknown as Attribute<ExtensionRequest>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ActivityDescription) {\n          return (\n            <ActivityDescriptionAttribute\n              attribute={attribute as unknown as Attribute<ActivityDescription>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof WebGDPR) {\n          return (\n            <WebGdprAttribute\n              attribute={attribute as unknown as Attribute<WebGDPR>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof InsuranceValue) {\n          return (\n            <InsuranceValueAttribute\n              attribute={attribute as unknown as Attribute<InsuranceValue>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof TypeRelationship) {\n          return (\n            <TypeRelationshipAttribute\n              attribute={attribute as unknown as Attribute<TypeRelationship>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ValuationRanking) {\n          return (\n            <ValuationRankingAttribute\n              attribute={attribute as unknown as Attribute<ValuationRanking>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof UnstructuredName) {\n          return (\n            <UnstructuredNameAttribute\n              attribute={attribute as unknown as Attribute<UnstructuredName>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ChallengePassword) {\n          return (\n            <ChallengePasswordAttribute\n              attribute={attribute as unknown as Attribute<ChallengePassword>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof PrivateKeyPossessionStatement) {\n          return (\n            <PrivateKeyPossessionStatementAttribute\n              attribute={attribute as unknown as Attribute<PrivateKeyPossessionStatement>}\n            />\n          );\n        }\n\n        if (typeof attribute.value === 'string') {\n          return (\n            <AsStringAttribute\n              attribute={attribute as unknown as Attribute<string>}\n            />\n          );\n        }\n\n        return (\n          <BasicAttribute\n            attribute={attribute}\n          />\n        );\n      } catch {\n        console.error('Error render attribute:', attribute.asn.type);\n\n        return null;\n      }\n    }),\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport {\n  CRLReason, InvalidityDate, CertificateIssuer,\n} from '@peculiar/asn1-x509';\nimport { Convert } from 'pvtsutils';\nimport {\n  dateShort, l10n, getStringByOID,\n} from '../../utils';\nimport { IRevokedCertificate } from '../../crypto';\nimport { GeneralNamePart } from './extensions/general_name_part';\nimport {\n  RowTitle, RowValue, TableRowTable,\n} from './row';\n\ninterface IRevokedCertificatesProps extends IGeneralNameOptions {\n  revokedCertificates: IRevokedCertificate[];\n}\n\nexport const RevokedCertificates: FunctionalComponent<IRevokedCertificatesProps> = (props) => {\n  const {\n    revokedCertificates,\n    getDNSNameLink,\n    getIPAddressLink,\n  } = props;\n\n  if (!revokedCertificates || !revokedCertificates.length) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('revokedCertificates')}\n    />,\n    revokedCertificates.map((certificate) => ([\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(certificate.userCertificate)}\n        monospace\n      />,\n      <RowValue\n        name={l10n.getString('revocationDate')}\n        value={dateShort(certificate.revocationDate.getTime())}\n      />,\n      (certificate.crlEntryExtensions && certificate.crlEntryExtensions.length && ([\n        <RowValue\n          name={`${l10n.getString('crlEntryExtensions')}:`}\n          value=\"\"\n        />,\n        <TableRowTable>\n          {\n            certificate.crlEntryExtensions.map((extension) => {\n              if (extension.value instanceof CRLReason) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.toJSON() || extension.value.reason}\n                  />\n                );\n              }\n\n              if (extension.value instanceof InvalidityDate) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.value.getTime()}\n                  />\n                );\n              }\n\n              if (extension.value instanceof CertificateIssuer && extension.value.length) {\n                return ([\n                  <RowValue\n                    name={`${getStringByOID(extension.asn.extnID)}:`}\n                    value=\"\"\n                  />,\n                  extension.value.map((gn) => (\n                    <TableRowTable>\n                      <GeneralNamePart\n                        generalName={gn}\n                        getDNSNameLink={getDNSNameLink}\n                        getIPAddressLink={getIPAddressLink}\n                      />\n                    </TableRowTable>\n                  )),\n                ]);\n              }\n\n              return (\n                <RowValue\n                  name={getStringByOID(extension.asn.extnID)}\n                  value={Convert.ToHex(extension.asn.extnValue)}\n                  monospace\n                />\n              );\n            })\n          }\n        </TableRowTable>,\n      ])),\n      <tr>\n        <td colSpan={2} class=\"divider\">\n          <span />\n        </td>\n      </tr>,\n    ])),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Convert } from 'pvtsutils';\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n, getStringByOID } from '../../utils';\nimport {\n  RowTitle, RowValue, TableRowTable,\n} from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IHolderProps {\n  holder: X509AttributeCertificate['holder'];\n}\n\nexport const Holder: FunctionalComponent<IHolderProps> = (props) => {\n  const { holder } = props;\n\n  if (!holder) {\n    return null;\n  }\n\n  const { baseCertificateID, objectDigestInfo } = holder;\n\n  return [\n    <RowTitle\n      value={l10n.getString('holder')}\n    />,\n    baseCertificateID && ([\n      baseCertificateID.issuer.map((item) => (\n        <GeneralNamePart\n          generalName={item}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      )),\n      <tr>\n        <td />\n        <td />\n      </tr>,\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(baseCertificateID.serial)}\n        monospace\n      />,\n      <tr>\n        <td />\n        <td />\n      </tr>,\n    ]),\n    objectDigestInfo && ([\n      <RowValue\n        name={l10n.getString('digestInfo')}\n        value=\"\"\n      />,\n      <TableRowTable>\n        <RowValue\n          name={l10n.getString('algorithm')}\n          value={getStringByOID(objectDigestInfo.digestAlgorithm.algorithm)}\n        />\n        <RowValue\n          name={l10n.getString('value')}\n          value={Convert.ToHex(objectDigestInfo.objectDigest)}\n          monospace\n        />\n        <RowValue\n          name={l10n.getString('type')}\n          value={objectDigestInfo.digestedObjectType}\n        />\n      </TableRowTable>,\n    ]),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n } from '../../utils';\nimport { RowTitle } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IIssuerProps {\n  issuer: X509AttributeCertificate['issuer'];\n}\n\nexport const Issuer: FunctionalComponent<IIssuerProps> = (props) => {\n  const { issuer } = props;\n\n  if (!issuer) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('issuer')}\n    />,\n    issuer.map((item) => (\n      <GeneralNamePart\n        generalName={item}\n        getDNSNameLink={() => ''}\n        getIPAddressLink={() => ''}\n      />\n    )),\n  ];\n};\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  tr:last-child {\n    .divider {\n      display: none;\n    }\n  }\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\nimport { X509AttributeCertificate } from '../../crypto';\nimport {\n  getDNSNameLink, getIPAddressLink, getLEILink,\n} from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  Attributes,\n  Holder,\n  Issuer,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type TAttributeCertificateProp = string | X509AttributeCertificate;\n\n@Component({\n  tag: 'peculiar-attribute-certificate-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class AttributeCertificateViewer {\n  private certificateDecoded: X509AttributeCertificate;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop() certificate: TAttributeCertificateProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView = false;\n\n  @State() isDecodeInProcess = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: TAttributeCertificateProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509AttributeCertificate) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509AttributeCertificate(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: TAttributeCertificateProp,\n    oldValue: TAttributeCertificateProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509AttributeCertificate\n      && oldValue instanceof X509AttributeCertificate\n    ) {\n      if (newValue.serialNumber !== oldValue.serialNumber) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this attribute certificate.\n        </Typography>\n      </div>\n    );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no attribute certificate available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <Issuer\n            issuer={this.certificateDecoded.issuer}\n          />\n\n          <Holder\n            holder={this.certificateDecoded.holder}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n@import '../certificate-viewer/certificate-viewer.scss';\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n.tabs {\n  white-space: nowrap;\n  overflow-x: auto;\n  border-bottom: 1px solid var(--pv-color-gray-4);\n  padding: 0 var(--pv-size-base-4);\n  margin-bottom: var(--pv-size-base-6);\n}\n\n.tab {\n  font-family: inherit;\n  outline: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 3px solid transparent;\n  min-height: var(--pv-size-base-12);\n  height: 100%;\n  padding: 0 var(--pv-size-base-3);\n  background-color: transparent;\n  transition: background-color 200ms, color 200ms, border-color 200ms;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-weight: var(--pv-text-s2-weight);\n  font-size: var(--pv-text-s2-size);\n  line-height: var(--pv-text-s2-height);\n  letter-spacing: var(--pv-text-s2-spacing);\n  color: var(--pv-color-gray-10);\n\n  &:hover {\n    background-color: var(--pv-color-secondary-tint-5);\n  }\n\n  &[aria-selected=\"true\"] {\n    color: var(--pv-color-black);\n    border-color: var(--pv-color-secondary);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  h,\n  Prop,\n  State,\n  Host,\n} from '@stencil/core';\nimport { X509Certificates } from '../../crypto';\nimport { Typography } from '../typography';\nimport { Miscellaneous } from '../certificate-details-parts';\n\n@Component({\n  tag: 'peculiar-certificate-chain-viewer',\n  styleUrl: 'certificate-chain-viewer.scss',\n  shadow: true,\n})\nexport class CertificateChainViewer {\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificates: X509Certificates;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop({ reflect: true }) download?: boolean;\n\n  @State() selectedCertificateIndex = 0;\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificates available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (!this.certificates) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host>\n        <div\n          role=\"tablist\"\n          class=\"tabs\"\n        >\n          {Array.from(this.certificates).map((certificate, index) => (\n            <button\n              type=\"button\"\n              role=\"tab\"\n              class=\"tab\"\n              aria-selected={index === this.selectedCertificateIndex ? 'true' : 'false'}\n              onClick={() => {\n                this.selectedCertificateIndex = index;\n              }}\n            >\n              {certificate.commonName}\n            </button>\n          ))}\n        </div>\n        {Array.from(this.certificates).map((certificate, index) => {\n          if (index === this.selectedCertificateIndex) {\n            return (\n              <peculiar-certificate-viewer\n                certificate={certificate}\n                download={false}\n              />\n            );\n          }\n\n          return null;\n        })}\n\n        <table>\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificates}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  tr:last-child {\n    .divider {\n      display: none;\n    }\n  }\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\nimport { X509Crl } from '../../crypto';\nimport {\n  getDNSNameLink, getIPAddressLink, getLEILink,\n} from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  IssuerName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  RevokedCertificates,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type TCrlProp = string | X509Crl;\n\n@Component({\n  tag: 'peculiar-crl-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CrlViewer {\n  private certificateDecoded: X509Crl;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: TCrlProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Issuer DN link.\n   * **NOTE**: HTML component attribute must be `issuer-dn-link`.\n   */\n  @Prop({ reflect: true }) issuerDnLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView = false;\n\n  @State() isDecodeInProcess = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: TCrlProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509Crl) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509Crl(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getIssuerDnLink() {\n    return this.issuerDnLink;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: TCrlProp,\n    oldValue: TCrlProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509Crl\n      && oldValue instanceof X509Crl\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate revocation list.\n        </Typography>\n      </div>\n    );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate revocation list available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <IssuerName\n            name={this.certificateDecoded.issuer}\n            issuerDnLink={this.getIssuerDnLink()}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n          />\n\n          <RevokedCertificates\n            revokedCertificates={this.certificateDecoded.revokedCertificates}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  tr:last-child {\n    .divider {\n      display: none;\n    }\n  }\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\nimport { Pkcs10CertificateRequest } from '../../crypto';\nimport {\n  getDNSNameLink, getIPAddressLink, getLEILink,\n} from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  SubjectName,\n  Signature,\n  Thumbprints,\n  Miscellaneous,\n  PublicKey,\n  Attributes,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type TCsrProp = string | Pkcs10CertificateRequest;\n\n@Component({\n  tag: 'peculiar-csr-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CsrViewer {\n  private certificateDecoded: Pkcs10CertificateRequest;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: TCsrProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView = false;\n\n  @State() isDecodeInProcess = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: TCsrProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof Pkcs10CertificateRequest) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new Pkcs10CertificateRequest(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: TCsrProp,\n    oldValue: TCsrProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof Pkcs10CertificateRequest\n      && oldValue instanceof Pkcs10CertificateRequest\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => value;\n\n  private getAuthKeyIdSiblingsLink = (value: string) => value;\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate request.\n        </Typography>\n      </div>\n    );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate request available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <SubjectName\n            name={this.certificateDecoded.subject}\n          />\n\n          <PublicKey\n            publicKey={this.certificateDecoded.publicKey}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { RowTitle, RowValue } from '../../certificate-details-parts/row';\nimport { dateShort, l10n } from '../../../utils';\n\ninterface ISshBasicInformationProps {\n  serialNumber: string;\n  validity: string;\n  notBefore: Date;\n  notAfter: Date;\n  type: string;\n  keyId: string;\n  principals: string[];\n  extensions: Record<string, string>;\n  criticalOptions: Record<string, string>;\n}\n\nexport const SshBasicInformation: FunctionalComponent<ISshBasicInformationProps> = (props) => {\n  const {\n    serialNumber,\n    validity,\n    notBefore,\n    notAfter,\n    type,\n    keyId,\n    principals,\n    extensions,\n    criticalOptions,\n  } = props;\n\n  return [\n    <RowTitle\n      value={l10n.getString('basicInformation')}\n    />,\n    <RowValue\n      name={l10n.getString('type')}\n      value={type}\n    />,\n    <RowValue\n      name={l10n.getString('serialNumber')}\n      value={serialNumber}\n      monospace\n    />,\n    <RowValue\n      name={l10n.getString('validity')}\n      value={validity}\n    />,\n    <RowValue\n      name={l10n.getString('issued')}\n      value={notBefore ? dateShort(notBefore) : undefined}\n    />,\n    <RowValue\n      name={l10n.getString('expired')}\n      value={notAfter ? dateShort(notAfter) : undefined}\n    />,\n    <RowValue\n      name={l10n.getString('keyId')}\n      value={keyId}\n    />,\n    <RowValue\n      name={l10n.getString('principals')}\n      value={principals.join(', ')}\n    />,\n    <RowValue\n      name={l10n.getString('criticalOptions')}\n      value={Object.keys(criticalOptions).join(', ')}\n    />,\n    <RowValue\n      name={l10n.getString('extensions')}\n      value={Object.keys(extensions).join(', ')}\n    />,\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { SshCertificate } from '../../../crypto';\nimport { l10n, getStringByOID } from '../../../utils';\nimport {\n  RowTitle,\n  RowValue,\n} from '../../certificate-details-parts/row';\n\ninterface ISshPublicKeyProps {\n  key: SshCertificate['publicKey'];\n}\n\nexport const SshPublicKey: FunctionalComponent<ISshPublicKeyProps> = (props) => {\n  const { key } = props;\n\n  if (!key) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('publicKeyInfo')}\n    />,\n    <RowValue\n      name={l10n.getString('algorithm')}\n      value={getStringByOID(key.algorithm)}\n    />,\n    <RowValue\n      name=\"Thumbprint (SHA-256)\"\n      value={key.thumbprint}\n      monospace\n    />,\n    <RowValue\n      name={l10n.getString('value')}\n      value={key.value}\n      monospace\n      collapse\n    />,\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { SshCertificate } from '../../../crypto';\nimport { l10n, getStringByOID } from '../../../utils';\nimport {\n  RowTitle,\n  RowValue,\n} from '../../certificate-details-parts/row';\n\ninterface ISshSignatureKeyProps {\n  key: SshCertificate['signatureKey'];\n}\n\nexport const SshSignatureKey: FunctionalComponent<ISshSignatureKeyProps> = (props) => {\n  const { key } = props;\n\n  if (!key) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('signingCA')}\n    />,\n    <RowValue\n      name={l10n.getString('algorithm')}\n      value={getStringByOID(key.algorithm)}\n    />,\n    <RowValue\n      name=\"Thumbprint (SHA-256)\"\n      value={key.thumbprint}\n      monospace\n    />,\n    <RowValue\n      name={l10n.getString('value')}\n      value={key.value}\n      monospace\n      collapse\n    />,\n  ];\n};\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  tr:last-child {\n    .divider {\n      display: none;\n    }\n  }\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  h,\n  Prop,\n  State,\n  Watch,\n  Host,\n  Build,\n} from '@stencil/core';\nimport { SshCertificate } from '../../crypto';\nimport { Typography } from '../typography';\nimport { SshBasicInformation } from './-components/basic_information';\nimport { SshPublicKey } from './-components/public_key';\nimport { SshSignatureKey } from './-components/signature_key';\n\nexport type TSshCertificateProp = string | SshCertificate;\n\n@Component({\n  tag: 'peculiar-ssh-certificate-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class SshCertificateViewer {\n  private certificateDecoded: SshCertificate;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: TSshCertificateProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop({ reflect: true }) download?: boolean;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView = false;\n\n  @State() isDecodeInProcess = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: TSshCertificateProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof SshCertificate) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new SshCertificate(certificate);\n      } else {\n        return;\n      }\n\n      // this.certificateDecoded.parseExtensions();\n      await this.certificateDecoded.parsePublicKey();\n      await this.certificateDecoded.parseSignatureKey();\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(newValue: TSshCertificateProp, oldValue: TSshCertificateProp) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (newValue instanceof SshCertificate && oldValue instanceof SshCertificate) {\n      if (newValue.serialNumber !== oldValue.serialNumber) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate.\n        </Typography>\n      </div>\n    );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <SshBasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <SshPublicKey\n            key={this.certificateDecoded.publicKey}\n          />\n\n          <SshSignatureKey\n            key={this.certificateDecoded.signatureKey}\n          />\n        </table>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;AAiBO,IAAMA,EAA4D,SAACC,EAAOC,GACvE,IAAAC,EAAcF,EAAKE,UAE3B,OACEC,EAACC,EACC,CAAAC,KAAK,OACLC,MAAOC,EAAeL,EAAUM,IAAIC,QAEtCR,EACAE,EAAA,UACEA,EAAA,MAAIO,QAAS,EAAGC,MAAM,WACpBR,EAAA,eAIR;;;;;;;eCdO,IAAMS,EAAgD,SAACZ,GACpD,IAAAK,EAASL,EAAKK,KAEtB,IAAKA,EAAM,CACT,OAAO,I,CAGT,OAAOA,EAAKQ,KAAI,SAACC,GAAyB,OACxCA,EAA0BD,KAAI,SAACE,GAAqB,OAClDZ,EAACC,EACC,CAAAC,KAAMW,EAAKD,EAAsBN,OAASM,EAAsBN,KAChEH,MAAOS,EAAsBT,MAAMW,YAHa,GADZ,GAQ5C;;;;;;;eCfO,IAAMC,EAC8B,SAAClB,GAClC,IAAAE,EAAcF,EAAKE,UAE3B,OACEC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACS,EACC,CAAAP,KAAMH,EAAUI,QAIxB;;;;;;;eCXO,IAAMa,EAC6C,SAACnB,GACjD,IAAAE,EAAcF,EAAKE,UAE3B,OACEC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAMe,EAAiB,iBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAMkB,cAC7BC,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,aAI5BvB,EAACC,EAAQ,CACPC,KAAMe,EAAiB,UACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAMqB,OAC7BF,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,aAI5BvB,EAACC,EACC,CAAAC,KAAMe,EAAiB,aACvBd,MAAOJ,EAAUI,MAAMsB,YAEzBzB,EAACC,EACC,CAAAC,KAAMe,EAAiB,oBACvBd,MAAOJ,EAAUI,MAAMuB,mBAI/B;;;;;;;eC1CO,IAAMC,EACiC,SAAC9B,GACrC,IAAAE,EAAcF,EAAKE,UAE3B,OACEC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAMe,EAAiB,uBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAMyB,oBAC7BN,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,aAI5BvB,EAACC,EAAQ,CACPC,KAAMe,EAAiB,sBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAM0B,mBAC7BP,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,aAI5BvB,EAACC,EAAQ,CACPC,KAAMe,EAAiB,iBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAM2B,cAC7BR,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,aAI5BvB,EAACC,EACC,CAAAC,KAAMe,EAAiB,wBACvBd,MAAOJ,EAAUI,MAAM4B,uBAEzB/B,EAACC,EACC,CAAAC,KAAMe,EAAiB,eACvBd,MAAOJ,EAAUI,MAAM6B,cAI/B;;;;;;;eCxDO,IAAMC,EACwC,SAACpC,GAC5C,IAAAE,EAAcF,EAAKE,UAC3B,IAAMI,EAAQ,GAAA+B,OAAGnC,EAAUI,MAAMgC,KAAI,UAAAD,OAASnC,EAAUI,MAAMiC,OAAM,KAAAF,OAAInC,EAAUI,MAAMkC,UAExF,OACErC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAK,QACLC,MAAOA,IAIf;;;;;;;eCdO,IAAMmC,EAC0C,SAACzC,GAC9C,IAAAE,EAAcF,EAAKE,UAE3B,OACEC,EAACJ,EAAc,CACbG,UAAWA,GAEVwC,OAAOC,KAAKzC,EAAUI,OAAOO,KAAI,SAAC+B,GAAO,OACxCzC,EAACC,EAAQ,CACPC,KAAMuC,EACNtC,MAAOJ,EAAUI,MAAMsC,GAASC,WAAaC,EAAKC,UAAU,OAASD,EAAKC,UAAU,OAH9C,IAQhD;;;;;;;eCjBA,IAAMC,EAAe,SAAC1C,GACpB,IAAI2C,EAAQ,EAEZ,GAAI3C,EAAQ,IAAM,EAAG,CACnB2C,EAAQ,G,MACH,GAAI3C,EAAQ,GAAK,EAAG,CACzB2C,EAAQ,E,CAGV,MAAO,GAAAZ,OAAG/B,EAAK,KAAA+B,OAAI,EAAIY,EACzB,EAEO,IAAMC,EAC0C,SAAClD,GAC9C,IAAAE,EAAcF,EAAKE,UAC3B,IAAMiD,EAAST,OAAOC,KAAKzC,EAAUI,OAAOO,KAAI,SAAC+B,GAAO,OACtDI,EAAa9C,EAAUI,MAAMsC,IAC7BzC,EAAM,WAFgD,IAKxD,OACEA,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAK,QACLC,MAAO6C,IAIf;;;;;;;eC/BO,IAAMC,GACkC,SAACpD,GACtC,IAAAE,EAAcF,EAAKE,UAE3B,OACEC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EACC,CAAAC,KAAK,QACLC,MAAOJ,EAAUI,MACjB+C,UACA,OAGR;;;;;;;eCdO,IAAMC,GAC0C,SAACtD,GAC9C,IAAAE,EAAcF,EAAKE,UAE3B,OACEC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EACC,CAAAC,KAAK,QACLC,MAAOJ,EAAUI,MAAMiD,aAI/B;;;;;;;eCdO,IAAMC,GAC2C,SAACxD,GAC/C,IAAAE,EAAcF,EAAKE,UAE3B,OACEC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EACC,CAAAC,KAAK,QACLC,MAAOJ,EAAUI,MAAMW,aAI/B;;;;;;;eCXO,IAAMwC,GAC0C,SAACzD,GAC9C,IAAAE,EAAcF,EAAKE,UAC3B,IAAIwD,EAEJ,GAAIxD,EAAUI,MAAO,CACnBoD,EAAaxD,EAAUI,MAAMO,KAAI,SAAC8C,GAAM,WAAIC,EAAUC,EAAWC,UAAUH,GAAnC,G,CAG1C,OACExD,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACkB,EAAa,KACZlB,EAAC4D,EAAU,CACTL,WAAYA,EACZjC,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,UACxBsC,WAAY,WAAM,aAK5B;;;;;;;eCvBO,IAAMC,GACuD,SAACjE,GAC3D,IAAAE,EAAcF,EAAKE,UAC3B,IAAMgE,EAAiBhE,EAAUI,MAAM6D,KACnCN,EAAWC,UAAU5D,EAAUI,MAAM6D,MACrC,KAEJ,OACEhE,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAK,gBACLC,MAAO8D,UAAQC,MAAMnE,EAAUI,MAAMgE,OAAOC,cAC5ClB,UACA,OACFlD,EAACC,EAAQ,CACPC,KAAK,SACLC,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACS,EAAQ,CACPP,KAAMH,EAAUI,MAAMgE,OAAOE,UAGhCN,GAAkB,CACjB/D,EAACC,EAAQ,CACPC,KAAK,cACLC,MAAM,KAERH,EAACkB,EAAa,KACZlB,EACE,+BAAAsE,YAAaL,UAAQM,SAASR,OAM1C;;;;;;;eCbO,IAAMS,GAAoD,SAAC3E,GACxD,IAAA4E,EAAe5E,EAAK4E,WAE5B,IAAKA,IAAeA,EAAWC,OAAQ,CACrC,OAAO,I,CAGT,OACE1E,EAAC2E,EAAQ,CACPxE,MAAM,eAERsE,EAAW/D,KAAI,SAACX,GACd,IACE,GAAIA,EAAUI,iBAAiByE,EAAM,CACnC,OACE5E,EAACe,EAAa,CACZhB,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB0E,EAAkB,CAC/C,OACE7E,EAACsD,GAAyB,CACxBvD,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB2E,EAAqB,CAClD,OACE9E,EAACgB,EAA4B,CAC3BjB,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB4E,EAAS,CACtC,OACE/E,EAAC2B,EAAgB,CACf5B,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB6E,EAAgB,CAC7C,OACEhF,EAACiC,EAAuB,CACtBlC,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB8E,EAAkB,CAC/C,OACEjF,EAACsC,EAAyB,CACxBvC,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB+E,EAAkB,CAC/C,OACElF,EAAC+C,EAAyB,CACxBhD,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiBgF,EAAkB,CAC/C,OACEnF,EAACmD,GAAyB,CACxBpD,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiBiF,EAAmB,CAChD,OACEpF,EAACqD,GAA0B,CACzBtD,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiBkF,EAA+B,CAC5D,OACErF,EAAC8D,GAAsC,CACrC/D,UAAWA,G,CAKjB,UAAWA,EAAUI,QAAU,SAAU,CACvC,OACEH,EAACiD,GAAiB,CAChBlD,UAAWA,G,CAKjB,OACEC,EAACJ,EAAc,CACbG,UAAWA,G,CAGf,MAAAuF,GACAC,QAAQC,MAAM,0BAA2BzF,EAAUM,IAAIC,MAEvD,OAAO,I,CAEX,IAEJ;;;;;;;eCrIO,IAAMmF,GAAsE,SAAC5F,GAEhF,IAAA6F,EAGE7F,EAAK6F,oBAFPpE,EAEEzB,EAAKyB,eADPC,EACE1B,EAAK0B,iBAET,IAAKmE,IAAwBA,EAAoBhB,OAAQ,CACvD,OAAO,I,CAGT,MAAO,CACL1E,EAAC2E,EACC,CAAAxE,MAAOwC,EAAKC,UAAU,yBAExB8C,EAAoBhF,KAAI,SAAC4D,GAAW,OAClCtE,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,gBACrBzC,MAAO8D,UAAQC,MAAMI,EAAYqB,iBACjCzC,UACA,OACFlD,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,kBACrBzC,MAAOyF,EAAUtB,EAAYuB,eAAeC,aAE7CxB,EAAYyB,oBAAsBzB,EAAYyB,mBAAmBrB,QAAM,CACtE1E,EAACC,EACC,CAAAC,KAAM,GAAAgC,OAAGS,EAAKC,UAAU,sBAAqB,KAC7CzC,MAAM,KAERH,EAACkB,EAEG,KAAAoD,EAAYyB,mBAAmBrF,KAAI,SAACsF,GAClC,GAAIA,EAAU7F,iBAAiB8F,EAAW,CACxC,OACEjG,EAACC,EAAQ,CACPC,KAAME,EAAe4F,EAAU3F,IAAI6F,QACnC/F,MAAO6F,EAAU7F,MAAMgG,UAAYH,EAAU7F,MAAMiG,Q,CAKzD,GAAIJ,EAAU7F,iBAAiBkG,EAAgB,CAC7C,OACErG,EAACC,EACC,CAAAC,KAAME,EAAe4F,EAAU3F,IAAI6F,QACnC/F,MAAO6F,EAAU7F,MAAMA,MAAM2F,W,CAKnC,GAAIE,EAAU7F,iBAAiBmG,GAAqBN,EAAU7F,MAAMuE,OAAQ,CAC1E,OACE1E,EAACC,EACC,CAAAC,KAAM,GAAAgC,OAAG9B,EAAe4F,EAAU3F,IAAI6F,QAAO,KAC7C/F,MAAM,KAER6F,EAAU7F,MAAMO,KAAI,SAAC6F,GAAE,OACrBvG,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAamF,EACbjF,eAAgBA,EAChBC,iBAAkBA,IALD,I,CAY3B,OACEvB,EAACC,EAAQ,CACPC,KAAME,EAAe4F,EAAU3F,IAAI6F,QACnC/F,MAAO8D,UAAQC,MAAM8B,EAAU3F,IAAImG,WACnCtD,UAAS,MAGf,MAINlD,EAAA,UACEA,EAAA,MAAIO,QAAS,EAAGC,MAAM,WACpBR,EAAA,eAnE8B,IAwExC;;;;;;;eC5FO,IAAMyG,GAA4C,SAAC5G,GAChD,IAAA6G,EAAW7G,EAAK6G,OAExB,IAAKA,EAAQ,CACX,OAAO,I,CAGD,IAAAC,EAAwCD,EAAMC,kBAA3BC,EAAqBF,EAAME,iBAEtD,MAAO,CACL5G,EAAC2E,EACC,CAAAxE,MAAOwC,EAAKC,UAAU,YAExB+D,GAAiB,CACfA,EAAkBtC,OAAO3D,KAAI,SAACmG,GAAI,OAChC7G,EAACmB,EAAe,CACdC,YAAayF,EACbvF,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,WAJM,IAOlCvB,EAAA,UACEA,EAAM,WACNA,EAAA,YAEFA,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,gBACrBzC,MAAO8D,UAAQC,MAAMyC,EAAkBG,QACvC5D,UACA,OACFlD,EAAA,UACEA,EAAM,WACNA,EAAA,aAGJ4G,GAAgB,CACd5G,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,cACrBzC,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,aACrBzC,MAAOC,EAAewG,EAAiBG,gBAAgBC,aAEzDhH,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,SACrBzC,MAAO8D,UAAQC,MAAM0C,EAAiBK,cACtC/D,UACA,OACFlD,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,QACrBzC,MAAOyG,EAAiBM,uBAKlC;;;;;;;eC5DO,IAAMC,GAA4C,SAACtH,GAChD,IAAAwE,EAAWxE,EAAKwE,OAExB,IAAKA,EAAQ,CACX,OAAO,I,CAGT,MAAO,CACLrE,EAAC2E,EACC,CAAAxE,MAAOwC,EAAKC,UAAU,YAExByB,EAAO3D,KAAI,SAACmG,GAAI,OACd7G,EAACmB,EAAe,CACdC,YAAayF,EACbvF,eAAgB,WAAM,UACtBC,iBAAkB,WAAM,WAJZ,IAQpB,ECrCA,IAAM6F,GAAuB,6jS,ICwChBC,GAA0BC,EAAA,mDALvC,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,K,UAiE4BA,KAAsBC,uBAAY,qBAEnDD,KAAgBE,iBAAG,MAEnBF,KAAiBG,kBAAG,KAuErBH,KAAAI,uBAAyB,SAAC3H,G,MAAkB,OAAAmF,EAAAmC,EAAKM,uBAAmB,MAAAzC,SAAA,SAAAA,EACxE0C,QAAQ,gBAAiB7H,E,EAErBuH,KAAAO,yBAA2B,SAAC9H,G,MAAkB,OAAAmF,EAAAmC,EAAKS,yBAAqB,MAAA5C,SAAA,SAAAA,EAC5E0C,QAAQ,gBAAiB7H,E,EAErBuH,KAAAS,4BAA8B,SAAChI,G,MAAkB,OAAAmF,EAAAmC,EAAKW,4BAAwB,MAAA9C,SAAA,SAAAA,EAClF0C,QAAQ,mBAAoB7H,E,EAExBuH,KAAAW,4BAA8B,SAAClI,G,MAAkB,OAAAmF,EAAAmC,EAAKa,4BAAwB,MAAAhD,SAAA,SAAAA,EAClF0C,QAAQ,mBAAoB7H,E,CAuFjC,CAtKSoH,EAAAgB,UAAAC,uBAAA,SAAuBC,GAC7Bf,KAAKE,iBAAmBa,EAAMC,O,EAGhCnB,EAAAgB,UAAAI,kBAAA,WACEjB,KAAKkB,kBAAkBlB,KAAKpD,aAEP,CACnBoD,KAAKmB,iBAAmBC,OAAOC,WAAWrB,KAAKC,wBAC/CD,KAAKmB,iBAAiBG,iBAAiB,SAAUtB,KAAKc,uBAAuBS,KAAKvB,OAClFA,KAAKE,iBAAmBF,KAAKmB,iBAAiBH,O,GAIlDnB,EAAAgB,UAAAW,qBAAA,WACExB,KAAKmB,iBAAiBM,oBAAoB,SAAUzB,KAAKc,uBAAuBS,KAAKvB,M,EAGzEH,EAAAgB,UAAAK,kBAAN,SAAwBtE,G,kHAC9BoD,KAAKG,kBAAoB,K,uCAGvB,GAAIvD,aAAuB8E,EAA0B,CACnD1B,KAAK2B,mBAAqB/E,C,MACrB,UAAWA,IAAgB,SAAU,CAC1CoD,KAAK2B,mBAAqB,IAAID,EAAyB9E,E,KAClD,CACL,S,CAGFoD,KAAK2B,mBAAmBC,kBACxB5B,KAAK2B,mBAAmBE,kBACxB,SAAM7B,KAAK2B,mBAAmBG,cAAc,U,OAA5CC,EAAAC,OACA,SAAMhC,KAAK2B,mBAAmBG,cAAc,Y,OAA5CC,EAAAC,O,8BAEAhC,KAAKiC,uBAAyBC,EAE9BrE,QAAQC,MAAM,2BAA4BoE,G,mBAG5ClC,KAAKG,kBAAoB,M,kBAO3BN,EAAAgB,UAAAsB,0BAAA,SACEC,EACAC,GAEA,UAAWD,IAAa,iBAAmBC,IAAa,SAAU,CAChE,GAAID,IAAaC,EAAU,CACzBrC,KAAKkB,kBAAkBkB,E,CAGzB,M,CAGF,GACEA,aAAoBV,GACjBW,aAAoBX,EACvB,CACA,GAAIU,EAAS1F,eAAiB2F,EAAS3F,aAAc,CACnDsD,KAAKkB,kBAAkBkB,E,IAiBrBvC,EAAAgB,UAAAyB,iBAAA,WACN,OACEhK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,gE,EAOT1C,EAAAgB,UAAA2B,iBAAA,WACN,OACElK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,qD,EAOjB1C,EAAAgB,UAAA4B,OAAA,WACE,GAAIzC,KAAKiC,uBAAwB,CAC/B,OAAOjC,KAAKsC,kB,CAGd,IAAKtC,KAAK2B,mBAAoB,CAC5B,OAAO3B,KAAKwC,kB,CAGd,OACElK,EAACoK,EAAI,2BACsBC,OAAO3C,KAAKE,mBAErC5H,EAAA,aACEA,EAACsK,EAAgB/H,OAAAgI,OAAA,GACX7C,KAAK2B,qBAGXrJ,EAACmH,GAAM,CACL9C,OAAQqD,KAAK2B,mBAAmBhF,SAGlCrE,EAACyG,GAAM,CACLC,OAAQgB,KAAK2B,mBAAmB3C,SAGlC1G,EAACwK,EAAS,CACRC,UAAW/C,KAAK2B,mBAAmBoB,YAGrCzK,EAAC0K,EAAW,CACVC,YAAajD,KAAK2B,mBAAmBsB,cAGvC3K,EAACwE,GAAU,CACTC,WAAYiD,KAAK2B,mBAAmB5E,WACpCZ,WAAYA,EACZvC,eAAgBA,EAChBC,iBAAkBA,EAClBuG,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,yBAC/BE,4BAA6BT,KAAKS,4BAClCE,4BAA6BX,KAAKW,8BAGpCrI,EAAC4D,EAAU,CACTL,WAAYmE,KAAK2B,mBAAmB9F,WACpCM,WAAYA,EACZvC,eAAgBA,EAChBC,iBAAkBA,EAClBuG,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,yBAC/BE,4BAA6BT,KAAKS,4BAClCE,4BAA6BX,KAAKW,8BAGnCX,KAAKkD,UACJ5K,EAAC6K,EACC,CAAAvG,YAAaoD,KAAK2B,sB,sJAjOO,I,YCxCvC,IAAMyB,GAA4B,q5jB,ICwBrBC,GAAsBzD,EAAA,+CALnC,SAAA0D,EAAAxD,G,UAgBWE,KAAwBuD,yBAAG,CA4DrC,CA1DSD,EAAAzC,UAAA2B,iBAAA,WACN,OACElK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,4C,EAOjBe,EAAAzC,UAAA4B,OAAA,eAAA1C,EAAAC,KACE,IAAKA,KAAKwD,aAAc,CACtB,OAAOxD,KAAKwC,kB,CAGd,OACElK,EAACoK,EAAI,KACHpK,EACE,OAAAmL,KAAK,UACL3K,MAAM,QAEL4K,MAAMC,KAAK3D,KAAKwD,cAAcxK,KAAI,SAAC4D,EAAagH,GAAK,OACpDtL,EAAA,UACEM,KAAK,SACL6K,KAAK,MACL3K,MAAM,MACS,gBAAA8K,IAAU7D,EAAKwD,yBAA2B,OAAS,QAClEM,QAAS,WACP9D,EAAKwD,yBAA2BK,C,GAGjChH,EAAYkH,WAVqC,KAcvDJ,MAAMC,KAAK3D,KAAKwD,cAAcxK,KAAI,SAAC4D,EAAagH,GAC/C,GAAIA,IAAU7D,EAAKwD,yBAA0B,CAC3C,OACEjL,EACE,+BAAAsE,YAAaA,EACbsG,SAAU,O,CAKhB,OAAO,IACT,IAEA5K,EAAA,aACG0H,KAAKkD,UACJ5K,EAAC6K,EACC,CAAAvG,YAAaoD,KAAKwD,gB,WAhEG,I,YCxBnC,IAAM9D,GAAuB,6jS,ICuChBqE,GAASnE,EAAA,iCALtB,SAAAoE,EAAAlE,GAAA,IAAAC,EAAAC,K,UAqD4BA,KAAsBC,uBAAY,qBAEnDD,KAAgBE,iBAAG,MAEnBF,KAAiBG,kBAAG,KA4CrBH,KAAAI,uBAAyB,SAAC3H,G,MAAkB,OAAAmF,EAAAmC,EAAKM,uBAAmB,MAAAzC,SAAA,SAAAA,EACxE0C,QAAQ,gBAAiB7H,E,EAErBuH,KAAAO,yBAA2B,SAAC9H,G,MAAkB,OAAAmF,EAAAmC,EAAKS,yBAAqB,MAAA5C,SAAA,SAAAA,EAC5E0C,QAAQ,gBAAiB7H,E,CA2G9B,CAzJSuL,EAAAnD,UAAAC,uBAAA,SAAuBC,GAC7Bf,KAAKE,iBAAmBa,EAAMC,O,EAGhCgD,EAAAnD,UAAAI,kBAAA,WACEjB,KAAKkB,kBAAkBlB,KAAKpD,aAEP,CACnBoD,KAAKmB,iBAAmBC,OAAOC,WAAWrB,KAAKC,wBAC/CD,KAAKmB,iBAAiBG,iBAAiB,SAAUtB,KAAKc,uBAAuBS,KAAKvB,OAClFA,KAAKE,iBAAmBF,KAAKmB,iBAAiBH,O,GAIlDgD,EAAAnD,UAAAW,qBAAA,WACExB,KAAKmB,iBAAiBM,oBAAoB,SAAUzB,KAAKc,uBAAuBS,KAAKvB,M,EAGzEgE,EAAAnD,UAAAK,kBAAN,SAAwBtE,G,kHAC9BoD,KAAKG,kBAAoB,K,uCAGvB,GAAIvD,aAAuBqH,EAAS,CAClCjE,KAAK2B,mBAAqB/E,C,MACrB,UAAWA,IAAgB,SAAU,CAC1CoD,KAAK2B,mBAAqB,IAAIsC,EAAQrH,E,KACjC,CACL,S,CAGFoD,KAAK2B,mBAAmBC,kBACxB,SAAM5B,KAAK2B,mBAAmBG,cAAc,U,OAA5CC,EAAAC,OACA,SAAMhC,KAAK2B,mBAAmBG,cAAc,Y,OAA5CC,EAAAC,O,8BAEAhC,KAAKiC,uBAAyBiC,EAE9BrG,QAAQC,MAAM,2BAA4BoG,G,mBAG5ClE,KAAKG,kBAAoB,M,kBASnB6D,EAAAnD,UAAAsD,gBAAA,WACN,OAAOnE,KAAKoE,Y,EAOdJ,EAAAnD,UAAAsB,0BAAA,SACEC,EACAC,GAEA,UAAWD,IAAa,iBAAmBC,IAAa,SAAU,CAChE,GAAID,IAAaC,EAAU,CACzBrC,KAAKkB,kBAAkBkB,E,CAGzB,M,CAGF,GACEA,aAAoB6B,GACjB5B,aAAoB4B,EACvB,CACA,GAAI7B,EAAS0B,aAAezB,EAASyB,WAAY,CAC/C9D,KAAKkB,kBAAkBkB,E,IAKrB4B,EAAAnD,UAAAyB,iBAAA,WACN,OACEhK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,sE,EAOTyB,EAAAnD,UAAA2B,iBAAA,WACN,OACElK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,2D,EAOjByB,EAAAnD,UAAA4B,OAAA,WACE,GAAIzC,KAAKiC,uBAAwB,CAC/B,OAAOjC,KAAKsC,kB,CAGd,IAAKtC,KAAK2B,mBAAoB,CAC5B,OAAO3B,KAAKwC,kB,CAGd,OACElK,EAACoK,EAAI,2BACsBC,OAAO3C,KAAKE,mBAErC5H,EAAA,aACEA,EAACsK,EAAgB/H,OAAAgI,OAAA,GACX7C,KAAK2B,qBAGXrJ,EAAC+L,EACC,CAAA7L,KAAMwH,KAAK2B,mBAAmBhF,OAC9ByH,aAAcpE,KAAKmE,oBAGrB7L,EAACwK,EAAS,CACRC,UAAW/C,KAAK2B,mBAAmBoB,YAGrCzK,EAAC0K,EAAW,CACVC,YAAajD,KAAK2B,mBAAmBsB,cAGvC3K,EAAC4D,EAAU,CACTL,WAAYmE,KAAK2B,mBAAmB9F,WACpCM,WAAYA,EACZvC,eAAgBA,EAChBC,iBAAkBA,EAClBuG,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,2BAGjCjI,EAACyF,GACC,CAAAC,oBAAqBgC,KAAK2B,mBAAmB3D,oBAC7CpE,eAAgBA,EAChBC,iBAAkBA,IAGnBmG,KAAKkD,UACJ5K,EAAC6K,EACC,CAAAvG,YAAaoD,KAAK2B,sB,sJAxMV,I,YCvCtB,IAAMjC,GAAuB,6jS,ICuChB4E,GAAS1E,EAAA,iCALtB,SAAA2E,EAAAzE,GAAA,IAAAC,EAAAC,K,UA+C4BA,KAAsBC,uBAAY,qBAEnDD,KAAgBE,iBAAG,MAEnBF,KAAiBG,kBAAG,KAsErBH,KAAAI,uBAAyB,SAAC3H,GAAkB,OAAAA,CAAA,EAE5CuH,KAAAO,yBAA2B,SAAC9H,GAAkB,OAAAA,CAAA,EAE9CuH,KAAAS,4BAA8B,SAAChI,G,MAAkB,OAAAmF,EAAAmC,EAAKW,4BAAwB,MAAA9C,SAAA,SAAAA,EAClF0C,QAAQ,mBAAoB7H,E,EAExBuH,KAAAW,4BAA8B,SAAClI,G,MAAkB,OAAAmF,EAAAmC,EAAKa,4BAAwB,MAAAhD,SAAA,SAAAA,EAClF0C,QAAQ,mBAAoB7H,E,CA4EjC,CAxJS8L,EAAA1D,UAAAC,uBAAA,SAAuBC,GAC7Bf,KAAKE,iBAAmBa,EAAMC,O,EAGhCuD,EAAA1D,UAAAI,kBAAA,WACEjB,KAAKkB,kBAAkBlB,KAAKpD,aAEP,CACnBoD,KAAKmB,iBAAmBC,OAAOC,WAAWrB,KAAKC,wBAC/CD,KAAKmB,iBAAiBG,iBAAiB,SAAUtB,KAAKc,uBAAuBS,KAAKvB,OAClFA,KAAKE,iBAAmBF,KAAKmB,iBAAiBH,O,GAIlDuD,EAAA1D,UAAAW,qBAAA,WACExB,KAAKmB,iBAAiBM,oBAAoB,SAAUzB,KAAKc,uBAAuBS,KAAKvB,M,EAGzEuE,EAAA1D,UAAAK,kBAAN,SAAwBtE,G,kHAC9BoD,KAAKG,kBAAoB,K,uCAGvB,GAAIvD,aAAuB4H,EAA0B,CACnDxE,KAAK2B,mBAAqB/E,C,MACrB,UAAWA,IAAgB,SAAU,CAC1CoD,KAAK2B,mBAAqB,IAAI6C,EAAyB5H,E,KAClD,CACL,S,CAGFoD,KAAK2B,mBAAmBE,kBACxB,SAAM7B,KAAK2B,mBAAmBG,cAAc,U,OAA5CC,EAAAC,OACA,SAAMhC,KAAK2B,mBAAmBG,cAAc,Y,OAA5CC,EAAAC,O,8BAEAhC,KAAKiC,uBAAyBwC,EAE9B5G,QAAQC,MAAM,2BAA4B2G,G,mBAG5CzE,KAAKG,kBAAoB,M,kBAO3BoE,EAAA1D,UAAAsB,0BAAA,SACEC,EACAC,GAEA,UAAWD,IAAa,iBAAmBC,IAAa,SAAU,CAChE,GAAID,IAAaC,EAAU,CACzBrC,KAAKkB,kBAAkBkB,E,CAGzB,M,CAGF,GACEA,aAAoBoC,GACjBnC,aAAoBmC,EACvB,CACA,GAAIpC,EAAS0B,aAAezB,EAASyB,WAAY,CAC/C9D,KAAKkB,kBAAkBkB,E,IAerBmC,EAAA1D,UAAAyB,iBAAA,WACN,OACEhK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,8D,EAOTgC,EAAA1D,UAAA2B,iBAAA,WACN,OACElK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,mD,EAOjBgC,EAAA1D,UAAA4B,OAAA,WACE,GAAIzC,KAAKiC,uBAAwB,CAC/B,OAAOjC,KAAKsC,kB,CAGd,IAAKtC,KAAK2B,mBAAoB,CAC5B,OAAO3B,KAAKwC,kB,CAGd,OACElK,EAACoK,EAAI,2BACsBC,OAAO3C,KAAKE,mBAErC5H,EAAA,aACEA,EAACsK,EAAgB/H,OAAAgI,OAAA,GACX7C,KAAK2B,qBAGXrJ,EAACoM,EAAW,CACVlM,KAAMwH,KAAK2B,mBAAmBgD,UAGhCrM,EAACsM,EAAS,CACRC,UAAW7E,KAAK2B,mBAAmBkD,YAGrCvM,EAACwK,EAAS,CACRC,UAAW/C,KAAK2B,mBAAmBoB,YAGrCzK,EAAC0K,EAAW,CACVC,YAAajD,KAAK2B,mBAAmBsB,cAGvC3K,EAACwE,GAAU,CACTC,WAAYiD,KAAK2B,mBAAmB5E,WACpCZ,WAAYA,EACZvC,eAAgBA,EAChBC,iBAAkBA,EAClBuG,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,yBAC/BE,4BAA6BT,KAAKS,4BAClCE,4BAA6BX,KAAKW,8BAGnCX,KAAKkD,UACJ5K,EAAC6K,EACC,CAAAvG,YAAaoD,KAAK2B,sB,sJAjMV,I;;;;;;;eCff,IAAMmD,GAAsE,SAAC3M,GAEhF,IAAAuE,EASEvE,EAAKuE,aARPqI,EAQE5M,EAAK4M,SAPPC,EAOE7M,EAAK6M,UANPC,EAME9M,EAAK8M,SALPrM,EAKET,EAAKS,KAJPsM,EAIE/M,EAAK+M,MAHPC,EAGEhN,EAAKgN,WAFPtJ,EAEE1D,EAAK0D,WADPuJ,EACEjN,EAAKiN,gBAET,MAAO,CACL9M,EAAC2E,EACC,CAAAxE,MAAOwC,EAAKC,UAAU,sBAExB5C,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,QACrBzC,MAAOG,IAETN,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,gBACrBzC,MAAOiE,EACPlB,UACA,OACFlD,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,YACrBzC,MAAOsM,IAETzM,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,UACrBzC,MAAOuM,EAAY9G,EAAU8G,GAAaK,YAE5C/M,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,WACrBzC,MAAOwM,EAAW/G,EAAU+G,GAAYI,YAE1C/M,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,SACrBzC,MAAOyM,IAET5M,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,cACrBzC,MAAO0M,EAAWG,KAAK,QAEzBhN,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,mBACrBzC,MAAOoC,OAAOC,KAAKsK,GAAiBE,KAAK,QAE3ChN,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,cACrBzC,MAAOoC,OAAOC,KAAKe,GAAYyJ,KAAK,QAG1C;;;;;;;eC3DO,IAAMC,GAAwD,SAACpN,GAC5D,IAAAqN,EAAQrN,EAAKqN,IAErB,IAAKA,EAAK,CACR,OAAO,I,CAGT,MAAO,CACLlN,EAAC2E,EACC,CAAAxE,MAAOwC,EAAKC,UAAU,mBAExB5C,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,aACrBzC,MAAOC,EAAe8M,EAAIlG,aAE5BhH,EAACC,EAAQ,CACPC,KAAK,uBACLC,MAAO+M,EAAIC,WACXjK,UACA,OACFlD,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,SACrBzC,MAAO+M,EAAI/M,MACX+C,UAAS,KACTkK,SACA,OAEN;;;;;;;eC3BO,IAAMC,GAA8D,SAACxN,GAClE,IAAAqN,EAAQrN,EAAKqN,IAErB,IAAKA,EAAK,CACR,OAAO,I,CAGT,MAAO,CACLlN,EAAC2E,EACC,CAAAxE,MAAOwC,EAAKC,UAAU,eAExB5C,EAACC,EACC,CAAAC,KAAMyC,EAAKC,UAAU,aACrBzC,MAAOC,EAAe8M,EAAIlG,aAE5BhH,EAACC,EAAQ,CACPC,KAAK,uBACLC,MAAO+M,EAAIC,WACXjK,UACA,OACFlD,EAACC,EAAQ,CACPC,KAAMyC,EAAKC,UAAU,SACrBzC,MAAO+M,EAAI/M,MACX+C,UAAS,KACTkK,SACA,OAEN,EC/CA,IAAMhG,GAAuB,6jS,IC8BhBkG,GAAoBhG,EAAA,6CALjC,SAAAiG,EAAA/F,G,UA6B4BE,KAAsBC,uBAAY,qBAEnDD,KAAgBE,iBAAG,MAEnBF,KAAiBG,kBAAG,IAiH9B,CA/GS0F,EAAAhF,UAAAC,uBAAA,SAAuBC,GAC7Bf,KAAKE,iBAAmBa,EAAMC,O,EAGhC6E,EAAAhF,UAAAI,kBAAA,WACEjB,KAAKkB,kBAAkBlB,KAAKpD,aAEP,CACnBoD,KAAKmB,iBAAmBC,OAAOC,WAAWrB,KAAKC,wBAC/CD,KAAKmB,iBAAiBG,iBAAiB,SAAUtB,KAAKc,uBAAuBS,KAAKvB,OAClFA,KAAKE,iBAAmBF,KAAKmB,iBAAiBH,O,GAIlD6E,EAAAhF,UAAAW,qBAAA,WACExB,KAAKmB,iBAAiBM,oBAAoB,SAAUzB,KAAKc,uBAAuBS,KAAKvB,M,EAGzE6F,EAAAhF,UAAAK,kBAAN,SAAwBtE,G,kHAC9BoD,KAAKG,kBAAoB,K,uCAGvB,GAAIvD,aAAuBkJ,EAAgB,CACzC9F,KAAK2B,mBAAqB/E,C,MACrB,UAAWA,IAAgB,SAAU,CAC1CoD,KAAK2B,mBAAqB,IAAImE,EAAelJ,E,KACxC,CACL,S,CAIF,SAAMoD,KAAK2B,mBAAmBoE,kB,OAA9BhE,EAAAC,OACA,SAAMhC,KAAK2B,mBAAmBqE,qB,OAA9BjE,EAAAC,O,8BAEAhC,KAAKiC,uBAAyBgE,EAE9BpI,QAAQC,MAAM,2BAA4BmI,G,mBAG5CjG,KAAKG,kBAAoB,M,kBAO3B0F,EAAAhF,UAAAsB,0BAAA,SAA0BC,EAA+BC,GACvD,UAAWD,IAAa,iBAAmBC,IAAa,SAAU,CAChE,GAAID,IAAaC,EAAU,CACzBrC,KAAKkB,kBAAkBkB,E,CAGzB,M,CAGF,GAAIA,aAAoB0D,GAAkBzD,aAAoByD,EAAgB,CAC5E,GAAI1D,EAAS1F,eAAiB2F,EAAS3F,aAAc,CACnDsD,KAAKkB,kBAAkBkB,E,IAKrByD,EAAAhF,UAAAyB,iBAAA,WACN,OACEhK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,sD,EAOTsD,EAAAhF,UAAA2B,iBAAA,WACN,OACElK,EAAA,OAAKQ,MAAM,kBACTR,EAACiK,EAAU,2C,EAOjBsD,EAAAhF,UAAA4B,OAAA,WACE,GAAIzC,KAAKiC,uBAAwB,CAC/B,OAAOjC,KAAKsC,kB,CAGd,IAAKtC,KAAK2B,mBAAoB,CAC5B,OAAO3B,KAAKwC,kB,CAGd,OACElK,EAACoK,EAAI,2BACsBC,OAAO3C,KAAKE,mBAErC5H,EAAA,aACEA,EAACwM,GAAmBjK,OAAAgI,OAAA,GACd7C,KAAK2B,qBAGXrJ,EAACiN,GAAY,CACXC,IAAKxF,KAAK2B,mBAAmBkD,YAG/BvM,EAACqN,GAAe,CACdH,IAAKxF,KAAK2B,mBAAmBuE,gB,sJAvIR,I","ignoreList":[]}