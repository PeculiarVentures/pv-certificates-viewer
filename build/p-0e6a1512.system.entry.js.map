{"version":3,"names":["certificateDecoderCss","PeculiarCertificateDecoderStyle0","CertificateDecoder","exports","this","handleClickDecode","value","_this","inputPaste","decode","handleClickClear","clearValue","handleChangeInputFile","event","__awaiter","element","target","files","readAsBinaryString","file","_b","sent","handleChangeExample","handleDropFile","stopPropagation","preventDefault","dataTransfer","class_1","prototype","componentDidLoad","defaultCertificate","setTimeout","certificateDecoded","clearCertificate","emit","setValue","toString","successParse","certificate","Promise","resolve","X509Certificate","catch","X509AttributeCertificate","Pkcs10CertificateRequest","X509Crl","then","res","err","console","log","alert","render","h","Host","key","placeholder","class","ref","el","onDrop","Typography","variant","color","type","accept","onChange","_a","certificateExamples","length","map","example","title","Button","onClick","download"],"sources":["src/components/certificate-decoder/certificate-decoder.scss?tag=peculiar-certificate-decoder&encapsulation=shadow","src/components/certificate-decoder/certificate-decoder.tsx"],"sourcesContent":["@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n.textarea {\n  min-height: 300px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid var(--pv-color-gray-5);;\n  padding: 14px;\n  font-family: monospace;\n  resize: vertical;\n}\n\n.viewer {\n  margin-top: var(--pv-size-base-12);\n}\n\n.controls {\n  margin-top: var(--pv-size-base-2);\n  display: flex;\n  flex-direction: column;\n  gap: var(--pv-size-base-2);\n}\n\n.control_row {\n  display: flex;\n  align-items: center;\n  gap: var(--pv-size-base);\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  State,\n  Prop,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\n\nimport { readAsBinaryString } from '../../utils';\nimport {\n  X509Certificate,\n  X509AttributeCertificate,\n  Pkcs10CertificateRequest,\n  X509Crl,\n} from '../../crypto';\nimport { Button } from '../button';\nimport { Typography } from '../typography';\n\n@Component({\n  tag: 'peculiar-certificate-decoder',\n  styleUrl: 'certificate-decoder.scss',\n  shadow: true,\n})\nexport class CertificateDecoder {\n  private inputPaste?: HTMLTextAreaElement;\n\n  /**\n   * The example certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop() certificateExamples?: {\n    title: string;\n    value: string;\n  }[];\n\n  /**\n   * The default certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop() defaultCertificate?: string;\n\n  @State() certificateDecoded: X509Certificate\n  | X509AttributeCertificate\n  | Pkcs10CertificateRequest\n  | X509Crl;\n\n  /**\n   * Emitted when the certificate has been successfully parsed.\n   */\n  @Event() successParse!: EventEmitter<string>;\n\n  /**\n   * Emitted when the certificate has been removed.\n   */\n  @Event() clearCertificate!: EventEmitter<void>;\n\n  componentDidLoad() {\n    if (this.defaultCertificate) {\n      /**\n       * Prevent Stencil warning about re-render\n       */\n      setTimeout(() => this.decode(this.defaultCertificate), 100);\n    }\n  }\n\n  private handleClickDecode = () => {\n    const { value } = this.inputPaste;\n\n    if (value) {\n      this.decode(value);\n    }\n  };\n\n  private handleClickClear = () => {\n    this.clearValue();\n  };\n\n  private handleChangeInputFile = async (event: any) => {\n    const element = event.target;\n\n    if (element.files) {\n      const file = await readAsBinaryString(element.files[0]);\n\n      if (typeof file.value === 'string') {\n        this.decode(file.value);\n      }\n\n      element.value = '';\n    }\n  };\n\n  private handleChangeExample = (event: any) => {\n    if (event.target.value) {\n      this.decode(event.target.value);\n    } else {\n      this.clearValue();\n    }\n  };\n\n  private handleDropFile = async (event: any) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const element = event.dataTransfer;\n\n    if (element.files) {\n      const file = await readAsBinaryString(element.files[0]);\n\n      if (typeof file.value === 'string') {\n        this.decode(file.value);\n      }\n    }\n  };\n\n  clearValue() {\n    this.inputPaste.value = '';\n    this.certificateDecoded = null;\n    this.clearCertificate.emit();\n  }\n\n  setValue(value: typeof this.certificateDecoded) {\n    this.certificateDecoded = value;\n    this.inputPaste.value = value.toString('pem');\n    this.successParse.emit(value.toString('base64url'));\n  }\n\n  decode(certificate: string) {\n    new Promise((resolve) => {\n      resolve(new X509Certificate(certificate));\n    })\n      .catch(() => new X509AttributeCertificate(certificate))\n      .catch(() => new Pkcs10CertificateRequest(certificate))\n      .catch(() => new X509Crl(certificate))\n      .then((res: typeof this.certificateDecoded) => this.setValue(res))\n      .catch((err) => {\n        this.clearValue();\n\n        console.log(err);\n        alert('Error decoding file. Please try to use Certificate/AttributeCertificate/CertificateRequest/CRL.');\n      });\n  }\n\n  render() {\n    return (\n      <Host>\n        <textarea\n          placeholder=\"Certificate DER or PEM\"\n          class=\"textarea t-b2 c-black\"\n          ref={(el) => { this.inputPaste = el; }}\n          onDrop={this.handleDropFile}\n        />\n        <div class=\"controls\">\n          <div class=\"control_row\">\n            <Typography\n              variant=\"b3\"\n              color=\"secondary-tint-2\"\n            >\n              Drag or load file:\n            </Typography>\n            <input\n              type=\"file\"\n              accept=\"application/pkix-cert,application/x-x509-ca-cert,application/x-x509-user-cert,application/pkcs10,application/pkix-crl,.csr,.req,.crl\"\n              onChange={this.handleChangeInputFile}\n              value=\"\"\n            />\n          </div>\n          {this.certificateExamples?.length && (\n            <div class=\"control_row\">\n              <Typography\n                variant=\"b3\"\n                color=\"secondary-tint-2\"\n              >\n                Load examples:\n              </Typography>\n              <select onChange={this.handleChangeExample}>\n                <option value=\"\">None</option>\n                {this.certificateExamples.map((example) => (\n                  <option value={example.value}>\n                    {example.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n          <div class=\"control_row\">\n            <Button\n              onClick={this.handleClickDecode}\n            >\n              Decode\n            </Button>\n            <Button\n              onClick={this.handleClickClear}\n            >\n              Clear\n            </Button>\n          </div>\n        </div>\n        {this.certificateDecoded instanceof X509Certificate && (\n          <peculiar-certificate-viewer\n            certificate={this.certificateDecoded}\n            class=\"viewer\"\n            download\n          />\n        )}\n        {this.certificateDecoded instanceof X509AttributeCertificate && (\n          <peculiar-attribute-certificate-viewer\n            certificate={this.certificateDecoded}\n            class=\"viewer\"\n            download\n          />\n        )}\n        {this.certificateDecoded instanceof Pkcs10CertificateRequest && (\n          <peculiar-csr-viewer\n            certificate={this.certificateDecoded}\n            class=\"viewer\"\n            download\n          />\n        )}\n        {this.certificateDecoded instanceof X509Crl && (\n          <peculiar-crl-viewer\n            certificate={this.certificateDecoded}\n            class=\"viewer\"\n            download\n          />\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}