/*!
 * Â© Peculiar Ventures https://peculiarventures.com/ - MIT License
 */
import{a_ as t,ad as s,D as r}from"./p-5b9ad1b8.js";import{A as e,e as i,N as n,f as a,E as o,g as h,h as u,j as c,k as f,R as l,l as m,C as g,m as b,n as p,o as E,p as C,q as A,r as w}from"./p-b37f6bb8.js";
/**
 * @license
 * Copyright (c) Peculiar Ventures, LLC.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */class d extends e{constructor(r){super(i(r),t);this.thumbprints={};this.type="X.509 Certificate";const{tbsCertificate:e}=this.asn;this.serialNumber=s.ToHex(e.serialNumber);this.subject=new n(e.subject).toJSON();this.issuer=new n(e.issuer).toJSON();this.version=e.version+1;const o=e.validity.notBefore.utcTime||e.validity.notBefore.generalTime;if(!o){throw new Error("Cannot get 'notBefore' value")}this.notBefore=o;const h=e.validity.notAfter.utcTime||e.validity.notAfter.generalTime;if(!h){throw new Error("Cannot get 'notAfter' value")}this.notAfter=h;this.validity=a(this.notBefore,this.notAfter)}parseExtensions(){const{tbsCertificate:t}=this.asn;if(t.extensions){this.extensions=t.extensions.map((t=>new o(h.serialize(t))))}}getPublicKeyInfo(t){const{subjectPublicKey:s,algorithm:r}=t;let e;if(r.algorithm===u&&r.parameters){e=h.parse(r.parameters,c)}if(r.algorithm===f){e=h.parse(s,l)}if(r.algorithm===m){e=h.parse(s,g);e=e.map((t=>this.getPublicKeyInfo(t)))}const i=h.serialize(t);return{params:e,value:i,algorithm:r.algorithm}}get publicKey(){return this.getPublicKeyInfo(this.asn.tbsCertificate.subjectPublicKeyInfo)}get signature(){const{signatureValue:t,signatureAlgorithm:s}=this.asn;let r;if(s.algorithm===b){const e=h.parse(t,p);const i=h.parse(s.parameters,E);r=i.map(((t,s)=>Object.assign(Object.assign({},t),{value:e[s]})))}return{params:r,value:t,algorithm:s.algorithm}}exportAsBase64(){return s.ToBase64(this.raw)}exportAsHexFormatted(){return C(s.ToHex(this.raw))}exportAsPemFormatted(){return`-----BEGIN CERTIFICATE-----\n${A(this.exportAsBase64())}\n-----END CERTIFICATE-----`}async getThumbprint(t="SHA-1"){try{const r=await w(t,this.raw);if(r){this.thumbprints[t]=s.ToHex(r)}}catch(t){console.error("Error thumbprint get:",t)}}get commonName(){if(!this.subject){return""}for(let t=0;t<this.subject.length;t+=1){const s=this.subject[t];if(s.shortName==="CN"||s.shortName==="E"||s.shortName==="O"){return s.value}}return""}get issuerCommonName(){if(!this.issuer){return""}for(let t=0;t<this.issuer.length;t+=1){const s=this.issuer[t];if(s.shortName==="CN"){return s.value}if(s.shortName==="E"){return s.value}}return""}get isRoot(){return JSON.stringify(this.issuer)===JSON.stringify(this.subject)}subjectToString(){if(!this.subject){return""}return this.subject.map((t=>`${t.shortName}=${t.value}`)).join(", ")}issuerToString(){if(!this.issuer){return""}return this.issuer.map((t=>`${t.shortName}=${t.value}`)).join(", ")}downloadAsPEM(t){r.cert.asPEM(this.exportAsPemFormatted(),t||this.commonName)}downloadAsDER(t){r.cert.asDER(this.exportAsHexFormatted(),t||this.commonName)}}export{d as X};
//# sourceMappingURL=p-955bccdc.js.map