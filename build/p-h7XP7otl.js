/*!
 * Â© Peculiar Ventures https://peculiarventures.com/ - MIT License
 */
import{A as t,c as s,C as i,P as e,b as r,N as n,a,e as h,i as o,E as u,f as c,R as f,g as l,h as m,j as g,k as p,l as b,m as w,D as C}from"./p-PCn0WXhQ.js";import{E}from"./p-BwlcJAh0.js";
/**
 * @license
 * Copyright (c) Peculiar Ventures, LLC.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */class j extends t{constructor(t){super(s(t),i);this.thumbprints={};this.type="X.509 Certificate";this.tag=e.CertificateTag;const{tbsCertificate:h}=this.asn;this.serialNumber=r.Convert.ToHex(h.serialNumber);this.subject=new n(h.subject).toJSON();this.issuer=new n(h.issuer).toJSON();this.version=h.version+1;const o=h.validity.notBefore.utcTime||h.validity.notBefore.generalTime;if(!o){throw new Error("Cannot get 'notBefore' value")}this.notBefore=o;const u=h.validity.notAfter.utcTime||h.validity.notAfter.generalTime;if(!u){throw new Error("Cannot get 'notAfter' value")}this.notAfter=u;this.validity=a(this.notBefore,this.notAfter)}parseExtensions(){const{tbsCertificate:t}=this.asn;if(t.extensions){this.extensions=t.extensions.map((t=>new E(h.serialize(t))))}}getPublicKeyInfo(t){const{subjectPublicKey:s,algorithm:i}=t;let e;if(i.algorithm===o&&i.parameters){e=h.parse(i.parameters,u)}if(i.algorithm===c){e=h.parse(s,f)}if(i.algorithm===l){e=h.parse(s,m);e=e.map((t=>this.getPublicKeyInfo(t)))}const r=h.serialize(t);return{params:e,value:r,algorithm:i.algorithm}}get publicKey(){return this.getPublicKeyInfo(this.asn.tbsCertificate.subjectPublicKeyInfo)}get signature(){const{signatureValue:t,signatureAlgorithm:s}=this.asn;let i;if(s.algorithm===g){const e=h.parse(t,p);const r=h.parse(s.parameters,b);i=r.map(((t,s)=>Object.assign(Object.assign({},t),{value:e[s]})))}return{params:i,value:t,algorithm:s.algorithm}}async getThumbprint(t="SHA-1"){try{const s=await w(t,this.raw);if(s){this.thumbprints[t]=r.Convert.ToHex(s)}}catch(t){console.error("Error thumbprint get:",t)}}get commonName(){if(!this.subject){return""}for(let t=0;t<this.subject.length;t+=1){const s=this.subject[t];if(s.shortName==="CN"||s.shortName==="E"||s.shortName==="O"){return s.value}}return""}get issuerCommonName(){if(!this.issuer){return""}for(let t=0;t<this.issuer.length;t+=1){const s=this.issuer[t];if(s.shortName==="CN"||s.shortName==="E"||s.shortName==="O"){return s.value}}return""}get isRoot(){return JSON.stringify(this.issuer)===JSON.stringify(this.subject)}subjectToString(){if(!this.subject){return""}return this.subject.map((t=>`${t.shortName}=${t.value}`)).join(", ")}issuerToString(){if(!this.issuer){return""}return this.issuer.map((t=>`${t.shortName}=${t.value}`)).join(", ")}toString(t="pem"){switch(t){case"pem":return e.encode(this.raw,this.tag);case"base64url":return r.Convert.ToBase64Url(this.raw);default:return r.Convert.ToBase64(this.raw)}}downloadAsPEM(t){C.cert.asPEM(this.toString("pem"),t||this.commonName)}downloadAsDER(t){C.cert.asDER(this.raw,t||this.commonName)}}export{j as X};
//# sourceMappingURL=p-h7XP7otl.js.map