{"version":3,"file":"p-D2QB-8Q6.system.js","sources":["src/utils/read_file.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type TFileValue = string | ArrayBuffer | null;\nexport interface IFileData extends Blob {\n  name?: string;\n  mimeType?: string;\n  lastModified?: number;\n}\nexport interface IReadFileResult {\n  value: TFileValue;\n  fileName: string | undefined;\n  fileSize: number | undefined;\n  sourceMime: string | undefined;\n}\n\n/**\n * Read file as Binary string\n *\n * @example\n * ```js\n *    const file = new File(['file'], 'file.pdf', { type: 'text/plain' });\n *    readAsBinaryString(file)\n *      .then(result => console.log('Readed success', result))\n *      .catch(err => console.log('An error occured when reading file', err));\n * ```\n */\n\nexport function readAsBinaryString(file: IFileData): Promise<IReadFileResult> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => resolve({\n      value: reader.result,\n      fileName: file.name,\n      fileSize: file.size,\n      sourceMime: file.type,\n    });\n\n    reader.onerror = () => reject(reader.error);\n\n    reader.readAsBinaryString(file);\n  });\n}\n\n/**\n * Read file as ArrayBuffer\n *\n * @example\n * ```js\n *    const file = new File(['file'], 'file.pdf', { type: 'text/plain' });\n *    readAsArrayBuffer(file)\n *      .then(result => console.log('Readed success', result))\n *      .catch(err => console.log('An error occured when reading file', err));\n * ```\n */\n\nexport function readAsArrayBuffer(file: IFileData): Promise<IReadFileResult> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => resolve({\n      value: reader.result,\n      fileName: file.name,\n      fileSize: file.size,\n      sourceMime: file.type,\n    });\n\n    reader.onerror = () => reject(reader.error);\n\n    reader.readAsArrayBuffer(file);\n  });\n}\n\n/**\n * Read file as Data URL\n *\n * @example\n * ```js\n *    const file = new File(['file'], 'file.pdf', { type: 'text/plain' });\n *    readAsDataUrl(file)\n *      .then(result => console.log('Readed success', result))\n *      .catch(err => console.log('An error occured when reading file', err));\n * ```\n */\n\nexport function readAsDataUrl(file: IFileData): Promise<IReadFileResult> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => resolve({\n      value: reader.result,\n      fileName: file.name,\n      fileSize: file.size,\n      sourceMime: file.type,\n    });\n\n    reader.onerror = () => reject(reader.error);\n\n    reader.readAsDataURL(file);\n  });\n}\n\n/**\n * Read file as Text\n *\n * @example\n * ```js\n *    const file = new File(['file'], 'file.pdf', { type: 'text/plain' });\n *    readAsText(file)\n *      .then(result => console.log('Readed success', result))\n *      .catch(err => console.log('An error occured when reading file', err));\n * ```\n */\n\nexport function readAsText(file: IFileData, options?: string): Promise<IReadFileResult> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => resolve({\n      value: reader.result,\n      fileName: file.name,\n      fileSize: file.size,\n      sourceMime: file.type,\n    });\n\n    reader.onerror = () => reject(reader.error);\n\n    reader.readAsText(file, options);\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;YAAA;;;;;;YAMG;YAeH;;;;;;;;;;YAUG;YAEG,SAAU,kBAAkB,CAAC,IAAe,EAAA;gBAChD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,QAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;YAE/B,QAAA,MAAM,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC;wBAC5B,KAAK,EAAE,MAAM,CAAC,MAAM;wBACpB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,UAAU,EAAE,IAAI,CAAC,IAAI;YACtB,SAAA,CAAC;YAEF,QAAA,MAAM,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YAE3C,QAAA,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC;YACjC,KAAC,CAAC;YACJ;YAEA;;;;;;;;;;YAUG;YAEG,SAAU,iBAAiB,CAAC,IAAe,EAAA;gBAC/C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,QAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;YAE/B,QAAA,MAAM,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC;wBAC5B,KAAK,EAAE,MAAM,CAAC,MAAM;wBACpB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,UAAU,EAAE,IAAI,CAAC,IAAI;YACtB,SAAA,CAAC;YAEF,QAAA,MAAM,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YAE3C,QAAA,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC;YAChC,KAAC,CAAC;YACJ;YAEA;;;;;;;;;;YAUG;YAEG,SAAU,aAAa,CAAC,IAAe,EAAA;gBAC3C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,QAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;YAE/B,QAAA,MAAM,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC;wBAC5B,KAAK,EAAE,MAAM,CAAC,MAAM;wBACpB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,UAAU,EAAE,IAAI,CAAC,IAAI;YACtB,SAAA,CAAC;YAEF,QAAA,MAAM,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YAE3C,QAAA,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;YAC5B,KAAC,CAAC;YACJ;YAEA;;;;;;;;;;YAUG;YAEa,SAAA,UAAU,CAAC,IAAe,EAAE,OAAgB,EAAA;gBAC1D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,QAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;YAE/B,QAAA,MAAM,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC;wBAC5B,KAAK,EAAE,MAAM,CAAC,MAAM;wBACpB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,UAAU,EAAE,IAAI,CAAC,IAAI;YACtB,SAAA,CAAC;YAEF,QAAA,MAAM,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YAE3C,QAAA,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC;YAClC,KAAC,CAAC;YACJ;;;;;;;;"}