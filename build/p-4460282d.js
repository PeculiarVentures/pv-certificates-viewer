import{A as t,a as e,C as s,N as r,d as i,v as n,E as a,b as o,c,i as u,R as h,e as m}from"./p-25d7ff48.js";class l extends t{constructor(t){super(l.rawClarify(t),e),this.thumbprints={};const{tbsCertificate:n}=this.asn;this.serialNumber=s.ToHex(n.serialNumber),this.subject=new r(n.subject).toJSON(),this.issuer=new r(n.issuer).toJSON(),this.version=n.version+1;const a=n.validity.notBefore.utcTime||n.validity.notBefore.generalTime;if(!a)throw new Error("Cannot get 'notBefore' value");this.notBefore=a;const o=n.validity.notAfter.utcTime||n.validity.notAfter.generalTime;if(!o)throw new Error("Cannot get 'notAfter' value");this.notAfter=o,this.validity=i(this.notBefore,this.notAfter)}static base64Clear(t){return t.replace(/.*base64,/,"").replace(/-----.+-----/g,"").replace(/[\s\r\n]/g,"")}static rawClarify(t){const e=l.base64Clear(t);let r;return r=n.isHex(e)?s.FromHex(e):n.isBase64(e)||n.isPem(e)?s.FromBase64(e):s.FromBinary(t),r}parseExtensions(){const{tbsCertificate:t}=this.asn;t.extensions&&(this.extensions=t.extensions.map(t=>new a(o.serialize(t))))}get publicKey(){const{subjectPublicKey:t,algorithm:e}=this.asn.tbsCertificate.subjectPublicKeyInfo;let s;return"1.2.840.10045.2.1"===e.algorithm&&e.parameters&&(s=o.parse(e.parameters,c)),e.algorithm===u&&(s=o.parse(t,h)),{params:s,value:o.serialize(this.asn.tbsCertificate.subjectPublicKeyInfo),algorithm:e.algorithm}}get signature(){const{signatureValue:t,signatureAlgorithm:e}=this.asn;return{value:t,algorithm:e.algorithm}}export(t){return"base64"===t?s.ToBase64(this.raw):"hex"===t?l.stringToHex(s.ToHex(this.raw)):"pem"===t?l.base64ToPem(s.ToBase64(this.raw)):""}static base64ToPem(t){return`-----BEGIN CERTIFICATE-----\n${t.replace(/(.{64})/g,"$1\n")}\n-----END CERTIFICATE-----`}static stringToHex(t){return t.replace(/(.{32})/g,"$1\n").replace(/(.{4})/g,"$1 ").trim()}async getThumbprint(t="SHA-1"){try{const e=m.get(),r=await e.subtle.digest(t,this.raw);this.thumbprints[t.name||t]=s.ToHex(r)}catch(e){console.error("Error thumbprint get:",e)}}get commonName(){if(!this.subject)return"";for(let t=0;t<this.subject.length;t+=1){const e=this.subject[t];if("CN"===e.name||"E"===e.name||"O"===e.name)return e.value}return""}get issuerCommonName(){if(!this.issuer)return"";for(let t=0;t<this.issuer.length;t+=1){const e=this.issuer[t];if("CN"===e.name)return e.value;if("E"===e.name)return e.value}return""}get isRoot(){return JSON.stringify(this.issuer)===JSON.stringify(this.subject)}}function p(t,e="application/octet-stream",s,r){const i=new Blob([t],{type:e});if(navigator.msSaveBlob)return navigator.msSaveBlob(i,`${s}.${r}`),new Promise(t=>setTimeout(t,100));const n=window.URL.createObjectURL(i),a=document.createElement("a"),o=document.createElement("iframe");return a.style.display="none",o.style.display="none",o.name=n,document.body.appendChild(o),a.href=n,a.target=n,a.download=`${s}.${r}`,document.body.appendChild(a),a.dispatchEvent(new MouseEvent("click")),document.body.removeChild(a),new Promise(t=>setTimeout(()=>{document.body.removeChild(o),t()},100))}class g{}g.certificate={asPEM:(t,e)=>{p(s.FromString(t),"application/pkix-cert",e,"cer")},asDER:(t,e)=>{p(s.FromString(t),"application/pkix-cert",e,"cer")}},g.certificateRequest={asPEM:(t,e)=>{p(s.FromString(t),"application/pkcs10",e,"csr")},asDER:(t,e)=>{p(s.FromString(t),"application/pkcs10",e,"csr")}};export{g as D,l as X}