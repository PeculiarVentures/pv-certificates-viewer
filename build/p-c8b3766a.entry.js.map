{"version":3,"names":["BasicAttribute","props","children","attribute","h","RowValue","name","value","getStringByOID","asn","type","colSpan","class","NamePart","map","relativeDistinguishedName","attributeTypeAndValue","OIDs","toString","NameAttribute","ActivityDescriptionAttribute","camelCaseToWords","TableRowTable","GeneralNamePart","generalName","codeAuthority","getDNSNameLink","getIPAddressLink","codeId","shortName","shortDescription","WebGdprAttribute","assessmentAuthority","assessmentLocation","assessmentRef","dataStorageTerritory","description","InsuranceValueAttribute","base","degree","location","TypeRelationshipAttribute","Object","keys","keyName","toNumber","l10n","getString","getValueRank","ratio","ValuationRankingAttribute","values","AsStringAttribute","monospace","UnstructuredNameAttribute","utf8String","ChallengePasswordAttribute","Attributes","attributes","length","RowTitle","Name","ActivityDescription","WebGDPR","InsuranceValue","TypeRelationship","ValuationRanking","UnstructuredName","ChallengePassword","_a","console","error","RevokedCertificates","revokedCertificates","certificate","Convert","ToHex","userCertificate","dateShort","revocationDate","getTime","crlEntryExtensions","extension","CRLReason","extnID","toJSON","reason","InvalidityDate","CertificateIssuer","gn","extnValue","Holder","holder","baseCertificateID","objectDigestInfo","issuer","item","serial","digestAlgorithm","algorithm","objectDigest","digestedObjectType","Issuer","certificateViewerCss","AttributeCertificateViewer","constructor","hostRef","this","mobileMediaQueryString","mobileScreenView","isDecodeInProcess","getAuthKeyIdParentLink","authKeyIdParentLink","replace","getAuthKeyIdSiblingsLink","authKeyIdSiblingsLink","getSubjectKeyIdChildrenLink","subjectKeyIdChildrenLink","getSubjectKeyIdSiblingsLink","subjectKeyIdSiblingsLink","handleMediaQueryChange","event","matches","componentWillLoad","decodeCertificate","mobileMediaQuery","window","matchMedia","addEventListener","bind","disconnectedCallback","removeEventListener","X509AttributeCertificate","certificateDecoded","parseExtensions","parseAttributes","getThumbprint","certificateDecodeError","watchCertificateAndDecode","newValue","oldValue","serialNumber","renderErrorState","Typography","renderEmptyState","render","Host","String","BasicInformation","assign","Signature","signature","Thumbprints","thumbprints","getLEILink","Extensions","extensions","download","Miscellaneous","certificateChainViewerCss","CertificateChainViewer","selectedCertificateIndex","certificates","role","Array","from","index","onClick","commonName","CrlViewer","X509Crl","getIssuerDnLink","issuerDnLink","IssuerName","CsrViewer","Pkcs10CertificateRequest","SubjectName","subject","PublicKey","publicKey","title"],"sources":["src/components/certificate-details-parts/attributes/basic_attribute.tsx","src/components/certificate-details-parts/attributes/name_part.tsx","src/components/certificate-details-parts/attributes/name_attribute.tsx","src/components/certificate-details-parts/attributes/activity_description_attribute.tsx","src/components/certificate-details-parts/attributes/web_gdpr_attribute.tsx","src/components/certificate-details-parts/attributes/insurance_value_attribute.tsx","src/components/certificate-details-parts/attributes/type_relationship_attribute.tsx","src/components/certificate-details-parts/attributes/valuation_ranking_attribute.tsx","src/components/certificate-details-parts/attributes/as_string_attribute.tsx","src/components/certificate-details-parts/attributes/unstructured_name_attribute.tsx","src/components/certificate-details-parts/attributes/challenge_password_attribute.tsx","src/components/certificate-details-parts/attributes/index.tsx","src/components/certificate-details-parts/revoked_certificates.tsx","src/components/certificate-details-parts/holder.tsx","src/components/certificate-details-parts/issuer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-attribute-certificate-viewer&encapsulation=shadow","src/components/attribute-certificate-viewer/attribute-certificate-viewer.tsx","src/components/certificate-chain-viewer/certificate-chain-viewer.scss?tag=peculiar-certificate-chain-viewer&encapsulation=shadow","src/components/certificate-chain-viewer/certificate-chain-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-crl-viewer&encapsulation=shadow","src/components/crl-viewer/crl-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-csr-viewer&encapsulation=shadow","src/components/csr-viewer/csr-viewer.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { getStringByOID } from '../../../utils';\nimport { RowValue } from '../row';\n\ninterface IBasicAttributeProps {\n  attribute: Attribute<TAttributeValue>;\n}\n\nexport const BasicAttribute: FunctionalComponent<IBasicAttributeProps> = (props, children) => {\n  const { attribute } = props;\n\n  return ([\n    <RowValue\n      name=\"Name\"\n      value={getStringByOID(attribute.asn.type)}\n    />,\n    children,\n    <tr>\n      <td colSpan={2} class=\"divider\">\n        <span />\n      </td>\n    </tr>,\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\nimport { OIDs } from '../../../constants/oids';\nimport { RowValue } from '../row';\n\ninterface INamePartProps {\n  name: Name;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const NamePart: FunctionalComponent<INamePartProps> = (props): any[] => {\n  const { name } = props;\n\n  if (!name) {\n    return null;\n  }\n\n  return name.map((relativeDistinguishedName) => (\n    relativeDistinguishedName.map((attributeTypeAndValue) => (\n      <RowValue\n        name={OIDs[attributeTypeAndValue.type] || attributeTypeAndValue.type}\n        value={attributeTypeAndValue.value.toString()}\n      />\n    ))\n  ));\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { NamePart } from './name_part';\n\ninterface INameAttributeProps {\n  attribute: Attribute<Name>;\n}\n\nexport const NameAttribute:\nFunctionalComponent<INameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <NamePart\n        name={attribute.value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ActivityDescription } from '@peculiar/asn1-ntqwac';\nimport { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IActivityDescriptionAttributeProps {\n  attribute: Attribute<ActivityDescription>;\n}\n\nexport const ActivityDescriptionAttribute:\nFunctionalComponent<IActivityDescriptionAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('codeAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('codeId')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeId}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('shortName')}\n        value={attribute.value.shortName}\n      />\n      <RowValue\n        name={camelCaseToWords('shortDescription')}\n        value={attribute.value.shortDescription}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { WebGDPR } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IWebGdprAttributeProps {\n  attribute: Attribute<WebGDPR>;\n}\n\nexport const WebGdprAttribute:\nFunctionalComponent<IWebGdprAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('assessmentAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentLocation')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentLocation}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentRef')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentRef}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('dataStorageTerritory')}\n        value={attribute.value.dataStorageTerritory}\n      />\n      <RowValue\n        name={camelCaseToWords('description')}\n        value={attribute.value.description}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { InsuranceValue } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IInsuranceValueAttributeProps {\n  attribute: Attribute<InsuranceValue>;\n}\n\nexport const InsuranceValueAttribute:\nFunctionalComponent<IInsuranceValueAttributeProps> = (props) => {\n  const { attribute } = props;\n  const value = `${attribute.value.base} * 10^${attribute.value.degree} ${attribute.value.location}`;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { TypeRelationship } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { l10n } from '../../../utils';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface ITypeRelationshipAttributeProps {\n  attribute: Attribute<TypeRelationship>;\n}\n\nexport const TypeRelationshipAttribute:\nFunctionalComponent<ITypeRelationshipAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      {Object.keys(attribute.value).map((keyName) => (\n        <RowValue\n          name={keyName}\n          value={attribute.value[keyName].toNumber() ? l10n.getString('yes') : l10n.getString('no')}\n        />\n      ))}\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ValuationRanking } from '@peculiar/asn1-ntqwac';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IValuationRankingAttributeProps {\n  attribute: Attribute<ValuationRanking>;\n}\n\nconst getValueRank = (value: number): string => {\n  let ratio = 1;\n\n  if (value / 100 > 1) {\n    ratio = 100;\n  } else if (value / 10 > 1) {\n    ratio = 10;\n  }\n\n  return `${value}/${5 * ratio}`;\n};\n\nexport const ValuationRankingAttribute:\nFunctionalComponent<IValuationRankingAttributeProps> = (props) => {\n  const { attribute } = props;\n  const values = Object.keys(attribute.value).map((keyName) => ([\n    getValueRank(attribute.value[keyName]),\n    <br />,\n  ]));\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={values as unknown as string[]}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IAsStringAttributeProps {\n  attribute: Attribute<string>;\n}\n\nexport const AsStringAttribute:\nFunctionalComponent<IAsStringAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value}\n        monospace\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { UnstructuredName } from '@peculiar/asn1-pkcs9';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IUnstructuredNameAttributeProps {\n  attribute: Attribute<UnstructuredName>;\n}\n\nexport const UnstructuredNameAttribute:\nFunctionalComponent<IUnstructuredNameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.utf8String}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ChallengePassword } from '@peculiar/asn1-pkcs9';\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IChallengePasswordAttributeProps {\n  attribute: Attribute<ChallengePassword>;\n}\n\nexport const ChallengePasswordAttribute:\nFunctionalComponent<IChallengePasswordAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.toString()}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Name } from '@peculiar/asn1-x509';\nimport {\n  TypeRelationship,\n  ActivityDescription,\n  WebGDPR,\n  InsuranceValue,\n  ValuationRanking,\n} from '@peculiar/asn1-ntqwac';\nimport {\n  UnstructuredName,\n  ChallengePassword,\n} from '@peculiar/asn1-pkcs9';\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { RowTitle } from '../row';\nimport { NameAttribute } from './name_attribute';\nimport { ActivityDescriptionAttribute } from './activity_description_attribute';\nimport { WebGdprAttribute } from './web_gdpr_attribute';\nimport { InsuranceValueAttribute } from './insurance_value_attribute';\nimport { TypeRelationshipAttribute } from './type_relationship_attribute';\nimport { ValuationRankingAttribute } from './valuation_ranking_attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { AsStringAttribute } from './as_string_attribute';\nimport { UnstructuredNameAttribute } from './unstructured_name_attribute';\nimport { ChallengePasswordAttribute } from './challenge_password_attribute';\n\ninterface IAttributesPtops extends\n  IGeneralNameOptions,\n  ILeiOptions,\n  IAuthorityKeyIdentifierOptions,\n  ISubjectKeyIdentifierOptions {\n  attributes: Attribute<TAttributeValue>[];\n}\n\nexport const Attributes: FunctionalComponent<IAttributesPtops> = (props) => {\n  const { attributes } = props;\n\n  if (!attributes || !attributes.length) {\n    return null;\n  }\n\n  return ([\n    <RowTitle\n      value=\"Attributes\"\n    />,\n    attributes.map((attribute) => {\n      try {\n        if (attribute.value instanceof Name) {\n          return (\n            <NameAttribute\n              attribute={attribute as unknown as Attribute<Name>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ActivityDescription) {\n          return (\n            <ActivityDescriptionAttribute\n              attribute={attribute as unknown as Attribute<ActivityDescription>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof WebGDPR) {\n          return (\n            <WebGdprAttribute\n              attribute={attribute as unknown as Attribute<WebGDPR>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof InsuranceValue) {\n          return (\n            <InsuranceValueAttribute\n              attribute={attribute as unknown as Attribute<InsuranceValue>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof TypeRelationship) {\n          return (\n            <TypeRelationshipAttribute\n              attribute={attribute as unknown as Attribute<TypeRelationship>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ValuationRanking) {\n          return (\n            <ValuationRankingAttribute\n              attribute={attribute as unknown as Attribute<ValuationRanking>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof UnstructuredName) {\n          return (\n            <UnstructuredNameAttribute\n              attribute={attribute as unknown as Attribute<UnstructuredName>}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ChallengePassword) {\n          return (\n            <ChallengePasswordAttribute\n              attribute={attribute as unknown as Attribute<ChallengePassword>}\n            />\n          );\n        }\n\n        if (typeof attribute.value === 'string') {\n          return (\n            <AsStringAttribute\n              attribute={attribute as unknown as Attribute<string>}\n            />\n          );\n        }\n\n        return (\n          <BasicAttribute\n            attribute={attribute}\n          />\n        );\n      } catch {\n        console.error('Error render attribute:', attribute.asn.type);\n\n        return null;\n      }\n    }),\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport {\n  CRLReason, InvalidityDate, CertificateIssuer,\n} from '@peculiar/asn1-x509';\nimport { Convert } from 'pvtsutils';\nimport {\n  dateShort, l10n, getStringByOID,\n} from '../../utils';\nimport { IRevokedCertificate } from '../../crypto';\nimport { GeneralNamePart } from './extensions/general_name_part';\nimport {\n  RowTitle, RowValue, TableRowTable,\n} from './row';\n\ninterface IRevokedCertificatesProps extends IGeneralNameOptions {\n  revokedCertificates: IRevokedCertificate[];\n}\n\nexport const RevokedCertificates: FunctionalComponent<IRevokedCertificatesProps> = (props) => {\n  const {\n    revokedCertificates,\n    getDNSNameLink,\n    getIPAddressLink,\n  } = props;\n\n  if (!revokedCertificates || !revokedCertificates.length) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('revokedCertificates')}\n    />,\n    revokedCertificates.map((certificate) => ([\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(certificate.userCertificate)}\n        monospace\n      />,\n      <RowValue\n        name={l10n.getString('revocationDate')}\n        value={dateShort(certificate.revocationDate.getTime())}\n      />,\n      (certificate.crlEntryExtensions && certificate.crlEntryExtensions.length && ([\n        <RowValue\n          name={`${l10n.getString('crlEntryExtensions')}:`}\n          value=\"\"\n        />,\n        <TableRowTable>\n          {\n            certificate.crlEntryExtensions.map((extension) => {\n              if (extension.value instanceof CRLReason) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.toJSON() || extension.value.reason}\n                  />\n                );\n              }\n\n              if (extension.value instanceof InvalidityDate) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.value.getTime()}\n                  />\n                );\n              }\n\n              if (extension.value instanceof CertificateIssuer && extension.value.length) {\n                return ([\n                  <RowValue\n                    name={`${getStringByOID(extension.asn.extnID)}:`}\n                    value=\"\"\n                  />,\n                  extension.value.map((gn) => (\n                    <TableRowTable>\n                      <GeneralNamePart\n                        generalName={gn}\n                        getDNSNameLink={getDNSNameLink}\n                        getIPAddressLink={getIPAddressLink}\n                      />\n                    </TableRowTable>\n                  )),\n                ]);\n              }\n\n              return (\n                <RowValue\n                  name={getStringByOID(extension.asn.extnID)}\n                  value={Convert.ToHex(extension.asn.extnValue)}\n                  monospace\n                />\n              );\n            })\n          }\n        </TableRowTable>,\n      ])),\n      <tr>\n        <td colSpan={2} class=\"divider\">\n          <span />\n        </td>\n      </tr>,\n    ])),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Convert } from 'pvtsutils';\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n, getStringByOID } from '../../utils';\nimport {\n  RowTitle, RowValue, TableRowTable,\n} from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IHolderProps {\n  holder: X509AttributeCertificate['holder'];\n}\n\nexport const Holder: FunctionalComponent<IHolderProps> = (props) => {\n  const { holder } = props;\n\n  if (!holder) {\n    return null;\n  }\n\n  const { baseCertificateID, objectDigestInfo } = holder;\n\n  return [\n    <RowTitle\n      value={l10n.getString('holder')}\n    />,\n    baseCertificateID && ([\n      baseCertificateID.issuer.map((item) => (\n        <GeneralNamePart\n          generalName={item}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      )),\n      <tr>\n        <td />\n        <td />\n      </tr>,\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(baseCertificateID.serial)}\n        monospace\n      />,\n      <tr>\n        <td />\n        <td />\n      </tr>,\n    ]),\n    objectDigestInfo && ([\n      <RowValue\n        name={l10n.getString('digestInfo')}\n        value=\"\"\n      />,\n      <TableRowTable>\n        <RowValue\n          name={l10n.getString('algorithm')}\n          value={getStringByOID(objectDigestInfo.digestAlgorithm.algorithm)}\n        />\n        <RowValue\n          name={l10n.getString('value')}\n          value={Convert.ToHex(objectDigestInfo.objectDigest)}\n          monospace\n        />\n        <RowValue\n          name={l10n.getString('type')}\n          value={objectDigestInfo.digestedObjectType}\n        />\n      </TableRowTable>,\n    ]),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n } from '../../utils';\nimport { RowTitle } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IIssuerProps {\n  issuer: X509AttributeCertificate['issuer'];\n}\n\nexport const Issuer: FunctionalComponent<IIssuerProps> = (props) => {\n  const { issuer } = props;\n\n  if (!issuer) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('issuer')}\n    />,\n    issuer.map((item) => (\n      <GeneralNamePart\n        generalName={item}\n        getDNSNameLink={() => ''}\n        getIPAddressLink={() => ''}\n      />\n    )),\n  ];\n};\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  tr:last-child {\n    .divider {\n      display: none;\n    }\n  }\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\nimport { X509AttributeCertificate } from '../../crypto';\nimport {\n  getDNSNameLink, getIPAddressLink, getLEILink,\n} from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  Attributes,\n  Holder,\n  Issuer,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type TAttributeCertificateProp = string | X509AttributeCertificate;\n\n@Component({\n  tag: 'peculiar-attribute-certificate-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class AttributeCertificateViewer {\n  private certificateDecoded: X509AttributeCertificate;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop() certificate: TAttributeCertificateProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView = false;\n\n  @State() isDecodeInProcess = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: TAttributeCertificateProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509AttributeCertificate) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509AttributeCertificate(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: TAttributeCertificateProp,\n    oldValue: TAttributeCertificateProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509AttributeCertificate\n      && oldValue instanceof X509AttributeCertificate\n    ) {\n      if (newValue.serialNumber !== oldValue.serialNumber) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this attribute certificate.\n        </Typography>\n      </div>\n    );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no attribute certificate available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <Issuer\n            issuer={this.certificateDecoded.issuer}\n          />\n\n          <Holder\n            holder={this.certificateDecoded.holder}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n@import '../certificate-viewer/certificate-viewer.scss';\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n.tabs {\n  white-space: nowrap;\n  overflow-x: auto;\n  border-bottom: 1px solid var(--pv-color-gray-4);\n  padding: 0 var(--pv-size-base-4);\n  margin-bottom: var(--pv-size-base-6);\n}\n\n.tab {\n  font-family: inherit;\n  outline: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 3px solid transparent;\n  min-height: var(--pv-size-base-12);\n  height: 100%;\n  padding: 0 var(--pv-size-base-3);\n  background-color: transparent;\n  transition: background-color 200ms, color 200ms, border-color 200ms;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-weight: var(--pv-text-s2-weight);\n  font-size: var(--pv-text-s2-size);\n  line-height: var(--pv-text-s2-height);\n  letter-spacing: var(--pv-text-s2-spacing);\n  color: var(--pv-color-gray-10);\n\n  &:hover {\n    background-color: var(--pv-color-secondary-tint-5);\n  }\n\n  &[aria-selected=\"true\"] {\n    color: var(--pv-color-black);\n    border-color: var(--pv-color-secondary);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  h,\n  Prop,\n  State,\n  Host,\n} from '@stencil/core';\nimport { X509Certificates } from '../../crypto';\nimport { Typography } from '../typography';\nimport { Miscellaneous } from '../certificate-details-parts';\n\n@Component({\n  tag: 'peculiar-certificate-chain-viewer',\n  styleUrl: 'certificate-chain-viewer.scss',\n  shadow: true,\n})\nexport class CertificateChainViewer {\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificates: X509Certificates;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop({ reflect: true }) download?: boolean;\n\n  @State() selectedCertificateIndex = 0;\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificates available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (!this.certificates) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host>\n        <div\n          role=\"tablist\"\n          class=\"tabs\"\n        >\n          {Array.from(this.certificates).map((certificate, index) => (\n            <button\n              type=\"button\"\n              role=\"tab\"\n              class=\"tab\"\n              aria-selected={index === this.selectedCertificateIndex ? 'true' : 'false'}\n              onClick={() => {\n                this.selectedCertificateIndex = index;\n              }}\n            >\n              {certificate.commonName}\n            </button>\n          ))}\n        </div>\n        {Array.from(this.certificates).map((certificate, index) => {\n          if (index === this.selectedCertificateIndex) {\n            return (\n              <peculiar-certificate-viewer\n                certificate={certificate}\n                download={false}\n              />\n            );\n          }\n\n          return null;\n        })}\n\n        <table>\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificates}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  tr:last-child {\n    .divider {\n      display: none;\n    }\n  }\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\nimport { X509Crl } from '../../crypto';\nimport {\n  getDNSNameLink, getIPAddressLink, getLEILink,\n} from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  IssuerName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  RevokedCertificates,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type TCrlProp = string | X509Crl;\n\n@Component({\n  tag: 'peculiar-crl-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CrlViewer {\n  private certificateDecoded: X509Crl;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: TCrlProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Issuer DN link.\n   * **NOTE**: HTML component attribute must be `issuer-dn-link`.\n   */\n  @Prop({ reflect: true }) issuerDnLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView = false;\n\n  @State() isDecodeInProcess = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: TCrlProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509Crl) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509Crl(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getIssuerDnLink() {\n    return this.issuerDnLink;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: TCrlProp,\n    oldValue: TCrlProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509Crl\n      && oldValue instanceof X509Crl\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate revocation list.\n        </Typography>\n      </div>\n    );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate revocation list available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <IssuerName\n            name={this.certificateDecoded.issuer}\n            issuerDnLink={this.getIssuerDnLink()}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n          />\n\n          <RevokedCertificates\n            revokedCertificates={this.certificateDecoded.revokedCertificates}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  tr:last-child {\n    .divider {\n      display: none;\n    }\n  }\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\nimport { Pkcs10CertificateRequest } from '../../crypto';\nimport {\n  getDNSNameLink, getIPAddressLink, getLEILink,\n} from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  SubjectName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  PublicKey,\n  Attributes,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type TCsrProp = string | Pkcs10CertificateRequest;\n\n@Component({\n  tag: 'peculiar-csr-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CsrViewer {\n  private certificateDecoded: Pkcs10CertificateRequest;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: TCsrProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView = false;\n\n  @State() isDecodeInProcess = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: TCsrProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof Pkcs10CertificateRequest) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new Pkcs10CertificateRequest(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: TCsrProp,\n    oldValue: TCsrProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof Pkcs10CertificateRequest\n      && oldValue instanceof Pkcs10CertificateRequest\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => value;\n\n  private getAuthKeyIdSiblingsLink = (value: string) => value;\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate request.\n        </Typography>\n      </div>\n    );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate request available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <SubjectName\n            name={this.certificateDecoded.subject}\n          />\n\n          <PublicKey\n            publicKey={this.certificateDecoded.publicKey}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            title=\"Extension Request\"\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;GAiBO,MAAMA,EAA4D,CAACC,EAAOC,KAC/E,MAAMC,UAAEA,GAAcF,EAEtB,OACEG,EAACC,EACC,CAAAC,KAAK,OACLC,MAAOC,EAAeL,EAAUM,IAAIC,QAEtCR,EACAE,EAAA,UACEA,EAAA,MAAIO,QAAS,EAAGC,MAAM,WACpBR,EAAA,eAGL;;;;;;;GCbI,MAAMS,EAAiDZ,IAC5D,MAAMK,KAAEA,GAASL,EAEjB,IAAKK,EAAM,CACT,OAAO,I,CAGT,OAAOA,EAAKQ,KAAKC,GACfA,EAA0BD,KAAKE,GAC7BZ,EAACC,EACC,CAAAC,KAAMW,EAAKD,EAAsBN,OAASM,EAAsBN,KAChEH,MAAOS,EAAsBT,MAAMW,gBAGvC;;;;;;;GCdG,MAAMC,EAC+BlB,IAC1C,MAAME,UAAEA,GAAcF,EAEtB,OACEG,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACS,EACC,CAAAP,KAAMH,EAAUI,QAEH;;;;;;;GCTd,MAAMa,EAC8CnB,IACzD,MAAME,UAAEA,GAAcF,EAEtB,OACEG,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAMe,EAAiB,iBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAMkB,cAC7BC,eAAgB,IAAM,GACtBC,iBAAkB,IAAM,MAI5BvB,EAACC,EAAQ,CACPC,KAAMe,EAAiB,UACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAMqB,OAC7BF,eAAgB,IAAM,GACtBC,iBAAkB,IAAM,MAI5BvB,EAACC,EACC,CAAAC,KAAMe,EAAiB,aACvBd,MAAOJ,EAAUI,MAAMsB,YAEzBzB,EAACC,EACC,CAAAC,KAAMe,EAAiB,oBACvBd,MAAOJ,EAAUI,MAAMuB,mBAEV;;;;;;;GCxCd,MAAMC,EACkC9B,IAC7C,MAAME,UAAEA,GAAcF,EAEtB,OACEG,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAMe,EAAiB,uBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAMyB,oBAC7BN,eAAgB,IAAM,GACtBC,iBAAkB,IAAM,MAI5BvB,EAACC,EAAQ,CACPC,KAAMe,EAAiB,sBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAM0B,mBAC7BP,eAAgB,IAAM,GACtBC,iBAAkB,IAAM,MAI5BvB,EAACC,EAAQ,CACPC,KAAMe,EAAiB,iBACvBd,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAarB,EAAUI,MAAM2B,cAC7BR,eAAgB,IAAM,GACtBC,iBAAkB,IAAM,MAI5BvB,EAACC,EACC,CAAAC,KAAMe,EAAiB,wBACvBd,MAAOJ,EAAUI,MAAM4B,uBAEzB/B,EAACC,EACC,CAAAC,KAAMe,EAAiB,eACvBd,MAAOJ,EAAUI,MAAM6B,cAEV;;;;;;;GCtDd,MAAMC,EACyCpC,IACpD,MAAME,UAAEA,GAAcF,EACtB,MAAMM,EAAQ,GAAGJ,EAAUI,MAAM+B,aAAanC,EAAUI,MAAMgC,UAAUpC,EAAUI,MAAMiC,WAExF,OACEpC,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAK,QACLC,MAAOA,IAEM;;;;;;;GCZd,MAAMkC,EAC2CxC,IACtD,MAAME,UAAEA,GAAcF,EAEtB,OACEG,EAACJ,EAAc,CACbG,UAAWA,GAEVuC,OAAOC,KAAKxC,EAAUI,OAAOO,KAAK8B,GACjCxC,EAACC,EAAQ,CACPC,KAAMsC,EACNrC,MAAOJ,EAAUI,MAAMqC,GAASC,WAAaC,EAAKC,UAAU,OAASD,EAAKC,UAAU,UAGzE;;;;;;;GCfrB,MAAMC,EAAgBzC,IACpB,IAAI0C,EAAQ,EAEZ,GAAI1C,EAAQ,IAAM,EAAG,CACnB0C,EAAQ,G,MACH,GAAI1C,EAAQ,GAAK,EAAG,CACzB0C,EAAQ,E,CAGV,MAAO,GAAG1C,KAAS,EAAI0C,GAAO,EAGzB,MAAMC,EAC2CjD,IACtD,MAAME,UAAEA,GAAcF,EACtB,MAAMkD,EAAST,OAAOC,KAAKxC,EAAUI,OAAOO,KAAK8B,GAAO,CACtDI,EAAa7C,EAAUI,MAAMqC,IAC7BxC,EAAM,cAGR,OACEA,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EAAQ,CACPC,KAAK,QACLC,MAAO4C,IAEM;;;;;;;GC7Bd,MAAMC,EACmCnD,IAC9C,MAAME,UAAEA,GAAcF,EAEtB,OACEG,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EACC,CAAAC,KAAK,QACLC,MAAOJ,EAAUI,MACjB8C,UACA,OACa;;;;;;;GCZd,MAAMC,EAC2CrD,IACtD,MAAME,UAAEA,GAAcF,EAEtB,OACEG,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EACC,CAAAC,KAAK,QACLC,MAAOJ,EAAUI,MAAMgD,aAEV;;;;;;;GCZd,MAAMC,EAC4CvD,IACvD,MAAME,UAAEA,GAAcF,EAEtB,OACEG,EAACJ,EACC,CAAAG,UAAWA,GAEXC,EAACC,EACC,CAAAC,KAAK,QACLC,MAAOJ,EAAUI,MAAMW,aAEV;;;;;;;GCYd,MAAMuC,EAAqDxD,IAChE,MAAMyD,WAAEA,GAAezD,EAEvB,IAAKyD,IAAeA,EAAWC,OAAQ,CACrC,OAAO,I,CAGT,OACEvD,EAACwD,EAAQ,CACPrD,MAAM,eAERmD,EAAW5C,KAAKX,IACd,IACE,GAAIA,EAAUI,iBAAiBsD,EAAM,CACnC,OACEzD,EAACe,EAAa,CACZhB,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiBuD,EAAqB,CAClD,OACE1D,EAACgB,EAA4B,CAC3BjB,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiBwD,EAAS,CACtC,OACE3D,EAAC2B,EAAgB,CACf5B,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiByD,EAAgB,CAC7C,OACE5D,EAACiC,EAAuB,CACtBlC,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB0D,EAAkB,CAC/C,OACE7D,EAACqC,EAAyB,CACxBtC,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB2D,EAAkB,CAC/C,OACE9D,EAAC8C,EAAyB,CACxB/C,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB4D,EAAkB,CAC/C,OACE/D,EAACkD,EAAyB,CACxBnD,UAAWA,G,CAKjB,GAAIA,EAAUI,iBAAiB6D,EAAmB,CAChD,OACEhE,EAACoD,EAA0B,CACzBrD,UAAWA,G,CAKjB,UAAWA,EAAUI,QAAU,SAAU,CACvC,OACEH,EAACgD,EAAiB,CAChBjD,UAAWA,G,CAKjB,OACEC,EAACJ,EAAc,CACbG,UAAWA,G,CAGf,MAAAkE,GACAC,QAAQC,MAAM,0BAA2BpE,EAAUM,IAAIC,MAEvD,OAAO,I,KAGZ;;;;;;;GChHI,MAAM8D,EAAuEvE,IAClF,MAAMwE,oBACJA,EAAmB/C,eACnBA,EAAcC,iBACdA,GACE1B,EAEJ,IAAKwE,IAAwBA,EAAoBd,OAAQ,CACvD,OAAO,I,CAGT,MAAO,CACLvD,EAACwD,EACC,CAAArD,MAAOuC,EAAKC,UAAU,yBAExB0B,EAAoB3D,KAAK4D,GAAW,CAClCtE,EAACC,EAAQ,CACPC,KAAMwC,EAAKC,UAAU,gBACrBxC,MAAOoE,UAAQC,MAAMF,EAAYG,iBACjCxB,UACA,OACFjD,EAACC,EAAQ,CACPC,KAAMwC,EAAKC,UAAU,kBACrBxC,MAAOuE,EAAUJ,EAAYK,eAAeC,aAE7CN,EAAYO,oBAAsBP,EAAYO,mBAAmBtB,QAAM,CACtEvD,EAACC,EACC,CAAAC,KAAM,GAAGwC,EAAKC,UAAU,yBACxBxC,MAAM,KAERH,EAACkB,EAEG,KAAAoD,EAAYO,mBAAmBnE,KAAKoE,IAClC,GAAIA,EAAU3E,iBAAiB4E,EAAW,CACxC,OACE/E,EAACC,EAAQ,CACPC,KAAME,EAAe0E,EAAUzE,IAAI2E,QACnC7E,MAAO2E,EAAU3E,MAAM8E,UAAYH,EAAU3E,MAAM+E,Q,CAKzD,GAAIJ,EAAU3E,iBAAiBgF,EAAgB,CAC7C,OACEnF,EAACC,EACC,CAAAC,KAAME,EAAe0E,EAAUzE,IAAI2E,QACnC7E,MAAO2E,EAAU3E,MAAMA,MAAMyE,W,CAKnC,GAAIE,EAAU3E,iBAAiBiF,GAAqBN,EAAU3E,MAAMoD,OAAQ,CAC1E,OACEvD,EAACC,EACC,CAAAC,KAAM,GAAGE,EAAe0E,EAAUzE,IAAI2E,WACtC7E,MAAM,KAER2E,EAAU3E,MAAMO,KAAK2E,GACnBrF,EAACkB,EAAa,KACZlB,EAACmB,EACC,CAAAC,YAAaiE,EACb/D,eAAgBA,EAChBC,iBAAkBA,O,CAO5B,OACEvB,EAACC,EAAQ,CACPC,KAAME,EAAe0E,EAAUzE,IAAI2E,QACnC7E,MAAOoE,UAAQC,MAAMM,EAAUzE,IAAIiF,WACnCrC,UAAS,MACT,MAMZjD,EAAA,UACEA,EAAA,MAAIO,QAAS,EAAGC,MAAM,WACpBR,EAAA,kBAIP;;;;;;;GC3FI,MAAMuF,EAA6C1F,IACxD,MAAM2F,OAAEA,GAAW3F,EAEnB,IAAK2F,EAAQ,CACX,OAAO,I,CAGT,MAAMC,kBAAEA,EAAiBC,iBAAEA,GAAqBF,EAEhD,MAAO,CACLxF,EAACwD,EACC,CAAArD,MAAOuC,EAAKC,UAAU,YAExB8C,GAAiB,CACfA,EAAkBE,OAAOjF,KAAKkF,GAC5B5F,EAACmB,EAAe,CACdC,YAAawE,EACbtE,eAAgB,IAAM,GACtBC,iBAAkB,IAAM,OAG5BvB,EAAA,UACEA,EAAM,WACNA,EAAA,YAEFA,EAACC,EAAQ,CACPC,KAAMwC,EAAKC,UAAU,gBACrBxC,MAAOoE,UAAQC,MAAMiB,EAAkBI,QACvC5C,UACA,OACFjD,EAAA,UACEA,EAAM,WACNA,EAAA,aAGJ0F,GAAgB,CACd1F,EAACC,EAAQ,CACPC,KAAMwC,EAAKC,UAAU,cACrBxC,MAAM,KAERH,EAACkB,EAAa,KACZlB,EAACC,EAAQ,CACPC,KAAMwC,EAAKC,UAAU,aACrBxC,MAAOC,EAAesF,EAAiBI,gBAAgBC,aAEzD/F,EAACC,EAAQ,CACPC,KAAMwC,EAAKC,UAAU,SACrBxC,MAAOoE,UAAQC,MAAMkB,EAAiBM,cACtC/C,UACA,OACFjD,EAACC,EACC,CAAAC,KAAMwC,EAAKC,UAAU,QACrBxC,MAAOuF,EAAiBO,uBAI/B;;;;;;;GC3DI,MAAMC,GAA6CrG,IACxD,MAAM8F,OAAEA,GAAW9F,EAEnB,IAAK8F,EAAQ,CACX,OAAO,I,CAGT,MAAO,CACL3F,EAACwD,EACC,CAAArD,MAAOuC,EAAKC,UAAU,YAExBgD,EAAOjF,KAAKkF,GACV5F,EAACmB,EAAe,CACdC,YAAawE,EACbtE,eAAgB,IAAM,GACtBC,iBAAkB,IAAM,OAG7B,ECpCH,MAAM4E,GAAuB,6jS,MCwChBC,GAA0B,MALvC,WAAAC,CAAAC,G,UAiE4BC,KAAsBC,uBAAY,qBAEnDD,KAAgBE,iBAAG,MAEnBF,KAAiBG,kBAAG,KAuErBH,KAAAI,uBAA0BxG,I,MAAkB,OAAA8D,EAAAsC,KAAKK,uBAAmB,MAAA3C,SAAA,SAAAA,EACxE4C,QAAQ,gBAAiB1G,EAAM,EAE3BoG,KAAAO,yBAA4B3G,I,MAAkB,OAAA8D,EAAAsC,KAAKQ,yBAAqB,MAAA9C,SAAA,SAAAA,EAC5E4C,QAAQ,gBAAiB1G,EAAM,EAE3BoG,KAAAS,4BAA+B7G,I,MAAkB,OAAA8D,EAAAsC,KAAKU,4BAAwB,MAAAhD,SAAA,SAAAA,EAClF4C,QAAQ,mBAAoB1G,EAAM,EAE9BoG,KAAAW,4BAA+B/G,I,MAAkB,OAAA8D,EAAAsC,KAAKY,4BAAwB,MAAAlD,SAAA,SAAAA,EAClF4C,QAAQ,mBAAoB1G,EAAM,CAuFvC,CAtKS,sBAAAiH,CAAuBC,GAC7Bd,KAAKE,iBAAmBY,EAAMC,O,CAGhC,iBAAAC,GACEhB,KAAKiB,kBAAkBjB,KAAKjC,aAEP,CACnBiC,KAAKkB,iBAAmBC,OAAOC,WAAWpB,KAAKC,wBAC/CD,KAAKkB,iBAAiBG,iBAAiB,SAAUrB,KAAKa,uBAAuBS,KAAKtB,OAClFA,KAAKE,iBAAmBF,KAAKkB,iBAAiBH,O,EAIlD,oBAAAQ,GACEvB,KAAKkB,iBAAiBM,oBAAoB,SAAUxB,KAAKa,uBAAuBS,KAAKtB,M,CAG/E,uBAAMiB,CAAkBlD,GAC9BiC,KAAKG,kBAAoB,KAEzB,IACE,GAAIpC,aAAuB0D,EAA0B,CACnDzB,KAAK0B,mBAAqB3D,C,MACrB,UAAWA,IAAgB,SAAU,CAC1CiC,KAAK0B,mBAAqB,IAAID,EAAyB1D,E,KAClD,CACL,M,CAGFiC,KAAK0B,mBAAmBC,kBACxB3B,KAAK0B,mBAAmBE,wBAClB5B,KAAK0B,mBAAmBG,cAAc,eACtC7B,KAAK0B,mBAAmBG,cAAc,U,CAC5C,MAAOjE,GACPoC,KAAK8B,uBAAyBlE,EAE9BD,QAAQC,MAAM,2BAA4BA,E,CAG5CoC,KAAKG,kBAAoB,K,CAO3B,yBAAA4B,CACEC,EACAC,GAEA,UAAWD,IAAa,iBAAmBC,IAAa,SAAU,CAChE,GAAID,IAAaC,EAAU,CACzBjC,KAAKiB,kBAAkBe,E,CAGzB,M,CAGF,GACEA,aAAoBP,GACjBQ,aAAoBR,EACvB,CACA,GAAIO,EAASE,eAAiBD,EAASC,aAAc,CACnDlC,KAAKiB,kBAAkBe,E,GAiBrB,gBAAAG,GACN,OACE1I,EAAA,OAAKQ,MAAM,kBACTR,EAAC2I,EAAU,gE,CAOT,gBAAAC,GACN,OACE5I,EAAA,OAAKQ,MAAM,kBACTR,EAAC2I,EAAU,qD,CAOjB,MAAAE,GACE,GAAItC,KAAK8B,uBAAwB,CAC/B,OAAO9B,KAAKmC,kB,CAGd,IAAKnC,KAAK0B,mBAAoB,CAC5B,OAAO1B,KAAKqC,kB,CAGd,OACE5I,EAAC8I,EAAI,2BACsBC,OAAOxC,KAAKE,mBAErCzG,EAAA,aACEA,EAACgJ,EAAgB1G,OAAA2G,OAAA,GACX1C,KAAK0B,qBAGXjI,EAACkG,GAAM,CACLP,OAAQY,KAAK0B,mBAAmBtC,SAGlC3F,EAACuF,EAAM,CACLC,OAAQe,KAAK0B,mBAAmBzC,SAGlCxF,EAACkJ,EAAS,CACRC,UAAW5C,KAAK0B,mBAAmBkB,YAGrCnJ,EAACoJ,EAAW,CACVC,YAAa9C,KAAK0B,mBAAmBoB,cAGvCrJ,EAACqD,EAAU,CACTC,WAAYiD,KAAK0B,mBAAmB3E,WACpCgG,WAAYA,EACZhI,eAAgBA,EAChBC,iBAAkBA,EAClBoF,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,yBAC/BE,4BAA6BT,KAAKS,4BAClCE,4BAA6BX,KAAKW,8BAGpClH,EAACuJ,EAAU,CACTC,WAAYjD,KAAK0B,mBAAmBuB,WACpCF,WAAYA,EACZhI,eAAgBA,EAChBC,iBAAkBA,EAClBoF,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,yBAC/BE,4BAA6BT,KAAKS,4BAClCE,4BAA6BX,KAAKW,8BAGnCX,KAAKkD,UACJzJ,EAAC0J,EACC,CAAApF,YAAaiC,KAAK0B,sB,uFCzQhC,MAAM0B,GAA4B,q5jB,MCwBrBC,GAAsB,MALnC,WAAAvD,CAAAC,G,UAgBWC,KAAwBsD,yBAAG,CA4DrC,CA1DS,gBAAAjB,GACN,OACE5I,EAAA,OAAKQ,MAAM,kBACTR,EAAC2I,EAAU,4C,CAOjB,MAAAE,GACE,IAAKtC,KAAKuD,aAAc,CACtB,OAAOvD,KAAKqC,kB,CAGd,OACE5I,EAAC8I,EAAI,KACH9I,EACE,OAAA+J,KAAK,UACLvJ,MAAM,QAELwJ,MAAMC,KAAK1D,KAAKuD,cAAcpJ,KAAI,CAAC4D,EAAa4F,IAC/ClK,EAAA,UACEM,KAAK,SACLyJ,KAAK,MACLvJ,MAAM,MACS,gBAAA0J,IAAU3D,KAAKsD,yBAA2B,OAAS,QAClEM,QAAS,KACP5D,KAAKsD,yBAA2BK,CAAK,GAGtC5F,EAAY8F,eAIlBJ,MAAMC,KAAK1D,KAAKuD,cAAcpJ,KAAI,CAAC4D,EAAa4F,KAC/C,GAAIA,IAAU3D,KAAKsD,yBAA0B,CAC3C,OACE7J,EACE,+BAAAsE,YAAaA,EACbmF,SAAU,O,CAKhB,OAAO,IAAI,IAGbzJ,EAAA,aACGuG,KAAKkD,UACJzJ,EAAC0J,EACC,CAAApF,YAAaiC,KAAKuD,gB,eCxFhC,MAAM3D,GAAuB,6jS,MCuChBkE,GAAS,MALtB,WAAAhE,CAAAC,G,UAqD4BC,KAAsBC,uBAAY,qBAEnDD,KAAgBE,iBAAG,MAEnBF,KAAiBG,kBAAG,KA4CrBH,KAAAI,uBAA0BxG,I,MAAkB,OAAA8D,EAAAsC,KAAKK,uBAAmB,MAAA3C,SAAA,SAAAA,EACxE4C,QAAQ,gBAAiB1G,EAAM,EAE3BoG,KAAAO,yBAA4B3G,I,MAAkB,OAAA8D,EAAAsC,KAAKQ,yBAAqB,MAAA9C,SAAA,SAAAA,EAC5E4C,QAAQ,gBAAiB1G,EAAM,CA2GpC,CAzJS,sBAAAiH,CAAuBC,GAC7Bd,KAAKE,iBAAmBY,EAAMC,O,CAGhC,iBAAAC,GACEhB,KAAKiB,kBAAkBjB,KAAKjC,aAEP,CACnBiC,KAAKkB,iBAAmBC,OAAOC,WAAWpB,KAAKC,wBAC/CD,KAAKkB,iBAAiBG,iBAAiB,SAAUrB,KAAKa,uBAAuBS,KAAKtB,OAClFA,KAAKE,iBAAmBF,KAAKkB,iBAAiBH,O,EAIlD,oBAAAQ,GACEvB,KAAKkB,iBAAiBM,oBAAoB,SAAUxB,KAAKa,uBAAuBS,KAAKtB,M,CAG/E,uBAAMiB,CAAkBlD,GAC9BiC,KAAKG,kBAAoB,KAEzB,IACE,GAAIpC,aAAuBgG,EAAS,CAClC/D,KAAK0B,mBAAqB3D,C,MACrB,UAAWA,IAAgB,SAAU,CAC1CiC,KAAK0B,mBAAqB,IAAIqC,EAAQhG,E,KACjC,CACL,M,CAGFiC,KAAK0B,mBAAmBC,wBAClB3B,KAAK0B,mBAAmBG,cAAc,eACtC7B,KAAK0B,mBAAmBG,cAAc,U,CAC5C,MAAOjE,GACPoC,KAAK8B,uBAAyBlE,EAE9BD,QAAQC,MAAM,2BAA4BA,E,CAG5CoC,KAAKG,kBAAoB,K,CASnB,eAAA6D,GACN,OAAOhE,KAAKiE,Y,CAOd,yBAAAlC,CACEC,EACAC,GAEA,UAAWD,IAAa,iBAAmBC,IAAa,SAAU,CAChE,GAAID,IAAaC,EAAU,CACzBjC,KAAKiB,kBAAkBe,E,CAGzB,M,CAGF,GACEA,aAAoB+B,GACjB9B,aAAoB8B,EACvB,CACA,GAAI/B,EAAS6B,aAAe5B,EAAS4B,WAAY,CAC/C7D,KAAKiB,kBAAkBe,E,GAKrB,gBAAAG,GACN,OACE1I,EAAA,OAAKQ,MAAM,kBACTR,EAAC2I,EAAU,sE,CAOT,gBAAAC,GACN,OACE5I,EAAA,OAAKQ,MAAM,kBACTR,EAAC2I,EAAU,2D,CAOjB,MAAAE,GACE,GAAItC,KAAK8B,uBAAwB,CAC/B,OAAO9B,KAAKmC,kB,CAGd,IAAKnC,KAAK0B,mBAAoB,CAC5B,OAAO1B,KAAKqC,kB,CAGd,OACE5I,EAAC8I,EAAI,2BACsBC,OAAOxC,KAAKE,mBAErCzG,EAAA,aACEA,EAACgJ,EAAgB1G,OAAA2G,OAAA,GACX1C,KAAK0B,qBAGXjI,EAACyK,EACC,CAAAvK,KAAMqG,KAAK0B,mBAAmBtC,OAC9B6E,aAAcjE,KAAKgE,oBAGrBvK,EAACkJ,EAAS,CACRC,UAAW5C,KAAK0B,mBAAmBkB,YAGrCnJ,EAACoJ,EAAW,CACVC,YAAa9C,KAAK0B,mBAAmBoB,cAGvCrJ,EAACuJ,EAAU,CACTC,WAAYjD,KAAK0B,mBAAmBuB,WACpCF,WAAYA,EACZhI,eAAgBA,EAChBC,iBAAkBA,EAClBoF,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,2BAGjC9G,EAACoE,EACC,CAAAC,oBAAqBkC,KAAK0B,mBAAmB5D,oBAC7C/C,eAAgBA,EAChBC,iBAAkBA,IAGnBgF,KAAKkD,UACJzJ,EAAC0J,EACC,CAAApF,YAAaiC,KAAK0B,sB,uFC/OhC,MAAM9B,GAAuB,6jS,MCwChBuE,GAAS,MALtB,WAAArE,CAAAC,G,UA+C4BC,KAAsBC,uBAAY,qBAEnDD,KAAgBE,iBAAG,MAEnBF,KAAiBG,kBAAG,KAsErBH,KAAAI,uBAA0BxG,GAAkBA,EAE5CoG,KAAAO,yBAA4B3G,GAAkBA,EAE9CoG,KAAAS,4BAA+B7G,I,MAAkB,OAAA8D,EAAAsC,KAAKU,4BAAwB,MAAAhD,SAAA,SAAAA,EAClF4C,QAAQ,mBAAoB1G,EAAM,EAE9BoG,KAAAW,4BAA+B/G,I,MAAkB,OAAA8D,EAAAsC,KAAKY,4BAAwB,MAAAlD,SAAA,SAAAA,EAClF4C,QAAQ,mBAAoB1G,EAAM,CAwFvC,CApKS,sBAAAiH,CAAuBC,GAC7Bd,KAAKE,iBAAmBY,EAAMC,O,CAGhC,iBAAAC,GACEhB,KAAKiB,kBAAkBjB,KAAKjC,aAEP,CACnBiC,KAAKkB,iBAAmBC,OAAOC,WAAWpB,KAAKC,wBAC/CD,KAAKkB,iBAAiBG,iBAAiB,SAAUrB,KAAKa,uBAAuBS,KAAKtB,OAClFA,KAAKE,iBAAmBF,KAAKkB,iBAAiBH,O,EAIlD,oBAAAQ,GACEvB,KAAKkB,iBAAiBM,oBAAoB,SAAUxB,KAAKa,uBAAuBS,KAAKtB,M,CAG/E,uBAAMiB,CAAkBlD,GAC9BiC,KAAKG,kBAAoB,KAEzB,IACE,GAAIpC,aAAuBqG,EAA0B,CACnDpE,KAAK0B,mBAAqB3D,C,MACrB,UAAWA,IAAgB,SAAU,CAC1CiC,KAAK0B,mBAAqB,IAAI0C,EAAyBrG,E,KAClD,CACL,M,CAGFiC,KAAK0B,mBAAmBE,wBAClB5B,KAAK0B,mBAAmBG,cAAc,eACtC7B,KAAK0B,mBAAmBG,cAAc,U,CAC5C,MAAOjE,GACPoC,KAAK8B,uBAAyBlE,EAE9BD,QAAQC,MAAM,2BAA4BA,E,CAG5CoC,KAAKG,kBAAoB,K,CAO3B,yBAAA4B,CACEC,EACAC,GAEA,UAAWD,IAAa,iBAAmBC,IAAa,SAAU,CAChE,GAAID,IAAaC,EAAU,CACzBjC,KAAKiB,kBAAkBe,E,CAGzB,M,CAGF,GACEA,aAAoBoC,GACjBnC,aAAoBmC,EACvB,CACA,GAAIpC,EAAS6B,aAAe5B,EAAS4B,WAAY,CAC/C7D,KAAKiB,kBAAkBe,E,GAerB,gBAAAG,GACN,OACE1I,EAAA,OAAKQ,MAAM,kBACTR,EAAC2I,EAAU,8D,CAOT,gBAAAC,GACN,OACE5I,EAAA,OAAKQ,MAAM,kBACTR,EAAC2I,EAAU,mD,CAOjB,MAAAE,GACE,GAAItC,KAAK8B,uBAAwB,CAC/B,OAAO9B,KAAKmC,kB,CAGd,IAAKnC,KAAK0B,mBAAoB,CAC5B,OAAO1B,KAAKqC,kB,CAGd,OACE5I,EAAC8I,EAAI,2BACsBC,OAAOxC,KAAKE,mBAErCzG,EAAA,aACEA,EAACgJ,EAAgB1G,OAAA2G,OAAA,GACX1C,KAAK0B,qBAGXjI,EAAC4K,EAAW,CACV1K,KAAMqG,KAAK0B,mBAAmB4C,UAGhC7K,EAAC8K,EAAS,CACRC,UAAWxE,KAAK0B,mBAAmB8C,YAGrC/K,EAACkJ,EAAS,CACRC,UAAW5C,KAAK0B,mBAAmBkB,YAGrCnJ,EAACoJ,EAAW,CACVC,YAAa9C,KAAK0B,mBAAmBoB,cAGvCrJ,EAACqD,EAAU,CACTC,WAAYiD,KAAK0B,mBAAmB3E,WACpCgG,WAAYA,EACZhI,eAAgBA,EAChBC,iBAAkBA,EAClBoF,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,yBAC/BE,4BAA6BT,KAAKS,4BAClCE,4BAA6BX,KAAKW,8BAGpClH,EAACuJ,EAAU,CACTC,WAAYjD,KAAK0B,mBAAmBuB,WACpCwB,MAAM,oBACN1B,WAAYA,EACZhI,eAAgBA,EAChBC,iBAAkBA,EAClBoF,uBAAwBJ,KAAKI,uBAC7BG,yBAA0BP,KAAKO,yBAC/BE,4BAA6BT,KAAKS,4BAClCE,4BAA6BX,KAAKW,8BAGnCX,KAAKkD,UACJzJ,EAAC0J,EACC,CAAApF,YAAaiC,KAAK0B,sB","ignoreList":[]}