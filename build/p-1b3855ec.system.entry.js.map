{"version":3,"names":["BasicAttribute","props","children","attribute","h","RowValue","name","value","getStringByOID","asn","type","colSpan","class","NamePart","map","relativeDistinguishedName","attributeTypeAndValue","OIDs","toString","NameAttribute","ActivityDescriptionAttribute","camelCaseToWords","TableRowTable","GeneralNamePart","generalName","codeAuthority","getDNSNameLink","getIPAddressLink","codeId","shortName","shortDescription","WebGdprAttribute","assessmentAuthority","assessmentLocation","assessmentRef","dataStorageTerritory","description","InsuranceValueAttribute","concat","base","degree","location","TypeRelationshipAttribute","Object","keys","keyName","toNumber","l10n","getString","getValueRank","ratio","ValuationRankingAttribute","values","AsStringAttribute","monospace","UnstructuredNameAttribute","utf8String","ChallengePasswordAttribute","Attributes","attributes","length","RowTitle","Name","ActivityDescription","WebGDPR","InsuranceValue","TypeRelationship","ValuationRanking","UnstructuredName","ChallengePassword","error","console","RevokedCertificates","revokedCertificates","certificate","Convert","ToHex","userCertificate","dateShort","revocationDate","getTime","crlEntryExtensions","extension","CRLReason","extnID","toJSON","reason","InvalidityDate","CertificateIssuer","gn","extnValue","Holder","holder","baseCertificateID","objectDigestInfo","issuer","item","serial","digestAlgorithm","algorithm","objectDigest","digestedObjectType","Issuer","certificateViewerCss","AttributeCertificateViewer","exports","class_1","hostRef","_this","this","mobileMediaQueryString","mobileScreenView","isDecodeInProcess","getAuthKeyIdParentLink","_a","authKeyIdParentLink","replace","getAuthKeyIdSiblingsLink","authKeyIdSiblingsLink","getSubjectKeyIdChildrenLink","subjectKeyIdChildrenLink","getSubjectKeyIdSiblingsLink","subjectKeyIdSiblingsLink","prototype","handleMediaQueryChange","event","matches","componentWillLoad","decodeCertificate","mobileMediaQuery","window","matchMedia","addEventListener","bind","disconnectedCallback","removeEventListener","X509AttributeCertificate","certificateDecoded","parseExtensions","parseAttributes","getThumbprint","_b","sent","certificateDecodeError","error_1","watchCertificateAndDecode","newValue","oldValue","serialNumber","renderErrorState","Typography","renderEmptyState","render","Host","String","BasicInformation","assign","Signature","signature","Thumbprints","thumbprints","getLEILink","Extensions","extensions","download","Miscellaneous","certificateChainViewerCss","CertificateChainViewer","class_2","selectedCertificateIndex","certificates","role","Array","from","index","onClick","commonName","CrlViewer","class_3","X509Crl","error_2","getIssuerDnLink","issuerDnLink","IssuerName","CsrViewer","class_4","Pkcs10CertificateRequest","error_3","SubjectName","subject","PublicKey","publicKey","title"],"sources":["src/components/certificate-details-parts/attributes/basic_attribute.tsx","src/components/certificate-details-parts/attributes/name_part.tsx","src/components/certificate-details-parts/attributes/name_attribute.tsx","src/components/certificate-details-parts/attributes/activity_description_attribute.tsx","src/components/certificate-details-parts/attributes/web_gdpr_attribute.tsx","src/components/certificate-details-parts/attributes/insurance_value_attribute.tsx","src/components/certificate-details-parts/attributes/type_relationship_attribute.tsx","src/components/certificate-details-parts/attributes/valuation_ranking_attribute.tsx","src/components/certificate-details-parts/attributes/as_string_attribute.tsx","src/components/certificate-details-parts/attributes/unstructured_name_attribute.tsx","src/components/certificate-details-parts/attributes/challenge_password_attribute.tsx","src/components/certificate-details-parts/attributes/index.tsx","src/components/certificate-details-parts/revoked_certificates.tsx","src/components/certificate-details-parts/holder.tsx","src/components/certificate-details-parts/issuer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-attribute-certificate-viewer&encapsulation=shadow","src/components/attribute-certificate-viewer/attribute-certificate-viewer.tsx","src/components/certificate-chain-viewer/certificate-chain-viewer.scss?tag=peculiar-certificate-chain-viewer&encapsulation=shadow","src/components/certificate-chain-viewer/certificate-chain-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-crl-viewer&encapsulation=shadow","src/components/crl-viewer/crl-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-csr-viewer&encapsulation=shadow","src/components/csr-viewer/csr-viewer.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { getStringByOID } from '../../../utils';\nimport { RowValue } from '../row';\n\ninterface IBasicAttributeProps {\n  attribute: Attribute<TAttributeValue>;\n}\n\nexport const BasicAttribute: FunctionalComponent<IBasicAttributeProps> = (props, children) => {\n  const { attribute } = props;\n\n  return ([\n    <RowValue\n      name=\"Name\"\n      value={getStringByOID(attribute.asn.type)}\n    />,\n    children,\n    <tr>\n      <td colSpan={2} class=\"divider\">\n        <span />\n      </td>\n    </tr>,\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\n\nimport { OIDs } from '../../../constants/oids';\nimport { RowValue } from '../row';\n\ninterface INamePartProps {\n  name: Name;\n}\n\nexport const NamePart: FunctionalComponent<INamePartProps> = (props): any[] => {\n  const { name } = props;\n\n  if (!name) {\n    return null;\n  }\n\n  return name.map((relativeDistinguishedName) => (\n    relativeDistinguishedName.map((attributeTypeAndValue) => (\n      <RowValue\n        name={OIDs[attributeTypeAndValue.type] || attributeTypeAndValue.type}\n        value={attributeTypeAndValue.value.toString()}\n      />\n    ))\n  ));\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { NamePart } from './name_part';\n\ninterface INameAttributeProps {\n  attribute: Attribute<Name>;\n}\n\nexport const NameAttribute:\nFunctionalComponent<INameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <NamePart\n        name={attribute.value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ActivityDescription } from '@peculiar/asn1-ntqwac';\n\nimport { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IActivityDescriptionAttributeProps {\n  attribute: Attribute<ActivityDescription>;\n}\n\nexport const ActivityDescriptionAttribute:\nFunctionalComponent<IActivityDescriptionAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('codeAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('codeId')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeId}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('shortName')}\n        value={attribute.value.shortName}\n      />\n      <RowValue\n        name={camelCaseToWords('shortDescription')}\n        value={attribute.value.shortDescription}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { WebGDPR } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IWebGdprAttributeProps {\n  attribute: Attribute<WebGDPR>;\n}\n\nexport const WebGdprAttribute:\nFunctionalComponent<IWebGdprAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('assessmentAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentLocation')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentLocation}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentRef')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentRef}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('dataStorageTerritory')}\n        value={attribute.value.dataStorageTerritory}\n      />\n      <RowValue\n        name={camelCaseToWords('description')}\n        value={attribute.value.description}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { InsuranceValue } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IInsuranceValueAttributeProps {\n  attribute: Attribute<InsuranceValue>;\n}\n\nexport const InsuranceValueAttribute:\nFunctionalComponent<IInsuranceValueAttributeProps> = (props) => {\n  const { attribute } = props;\n  const value = `${attribute.value.base} * 10^${attribute.value.degree} ${attribute.value.location}`;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { TypeRelationship } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { l10n } from '../../../utils';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface ITypeRelationshipAttributeProps {\n  attribute: Attribute<TypeRelationship>;\n}\n\nexport const TypeRelationshipAttribute:\nFunctionalComponent<ITypeRelationshipAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      {Object.keys(attribute.value).map((keyName) => (\n        <RowValue\n          name={keyName}\n          value={attribute.value[keyName].toNumber() ? l10n.getString('yes') : l10n.getString('no')}\n        />\n      ))}\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ValuationRanking } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IValuationRankingAttributeProps {\n  attribute: Attribute<ValuationRanking>;\n}\n\nconst getValueRank = (value: number): string => {\n  let ratio = 1;\n\n  if (value / 100 > 1) {\n    ratio = 100;\n  } else if (value / 10 > 1) {\n    ratio = 10;\n  }\n\n  return `${value}/${5 * ratio}`;\n};\n\nexport const ValuationRankingAttribute:\nFunctionalComponent<IValuationRankingAttributeProps> = (props) => {\n  const { attribute } = props;\n  const values = Object.keys(attribute.value).map((keyName) => ([\n    getValueRank(attribute.value[keyName]),\n    <br />,\n  ]));\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={values as any}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IAsStringAttributeProps {\n  attribute: Attribute<string>;\n}\n\nexport const AsStringAttribute:\nFunctionalComponent<IAsStringAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value}\n        monospace\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { UnstructuredName } from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IUnstructuredNameAttributeProps {\n  attribute: Attribute<UnstructuredName>;\n}\n\nexport const UnstructuredNameAttribute:\nFunctionalComponent<IUnstructuredNameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.utf8String}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ChallengePassword } from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IChallengePasswordAttributeProps {\n  attribute: Attribute<ChallengePassword>;\n}\n\nexport const ChallengePasswordAttribute:\nFunctionalComponent<IChallengePasswordAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.toString()}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Name } from '@peculiar/asn1-x509';\nimport {\n  TypeRelationship,\n  ActivityDescription,\n  WebGDPR,\n  InsuranceValue,\n  ValuationRanking,\n} from '@peculiar/asn1-ntqwac';\nimport {\n  UnstructuredName,\n  ChallengePassword,\n} from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { RowTitle } from '../row';\nimport { NameAttribute } from './name_attribute';\nimport { ActivityDescriptionAttribute } from './activity_description_attribute';\nimport { WebGdprAttribute } from './web_gdpr_attribute';\nimport { InsuranceValueAttribute } from './insurance_value_attribute';\nimport { TypeRelationshipAttribute } from './type_relationship_attribute';\nimport { ValuationRankingAttribute } from './valuation_ranking_attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { AsStringAttribute } from './as_string_attribute';\nimport { UnstructuredNameAttribute } from './unstructured_name_attribute';\nimport { ChallengePasswordAttribute } from './challenge_password_attribute';\n\ninterface IAttributesPtops extends\n  IGeneralNameOptions,\n  ILeiOptions,\n  IAuthorityKeyIdentifierOptions,\n  ISubjectKeyIdentifierOptions {\n  attributes: Attribute<TAttributeValue>[];\n}\n\nexport const Attributes: FunctionalComponent<IAttributesPtops> = (props) => {\n  const { attributes } = props;\n\n  if (!attributes || !attributes.length) {\n    return null;\n  }\n\n  return ([\n    <RowTitle\n      value=\"Attributes\"\n    />,\n    attributes.map((attribute) => {\n      try {\n        if (attribute.value instanceof Name) {\n          return (\n            <NameAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ActivityDescription) {\n          return (\n            <ActivityDescriptionAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof WebGDPR) {\n          return (\n            <WebGdprAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof InsuranceValue) {\n          return (\n            <InsuranceValueAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof TypeRelationship) {\n          return (\n            <TypeRelationshipAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ValuationRanking) {\n          return (\n            <ValuationRankingAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof UnstructuredName) {\n          return (\n            <UnstructuredNameAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ChallengePassword) {\n          return (\n            <ChallengePasswordAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (typeof attribute.value === 'string') {\n          return (\n            <AsStringAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        return (\n          <BasicAttribute\n            attribute={attribute}\n          />\n        );\n      } catch (error) {\n        console.error('Error render attribute:', attribute.asn.type);\n\n        return null;\n      }\n    }),\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { CRLReason, InvalidityDate, CertificateIssuer } from '@peculiar/asn1-x509';\nimport { Convert } from 'pvtsutils';\n\nimport { dateShort, l10n, getStringByOID } from '../../utils';\nimport { IRevokedCertificate } from '../../crypto';\nimport { GeneralNamePart } from './extensions/general_name_part';\nimport { RowTitle, RowValue, TableRowTable } from './row';\n\ninterface IRevokedCertificatesProps extends IGeneralNameOptions {\n  revokedCertificates: IRevokedCertificate[];\n}\n\nexport const RevokedCertificates: FunctionalComponent<IRevokedCertificatesProps> = (props) => {\n  const {\n    revokedCertificates,\n    getDNSNameLink,\n    getIPAddressLink,\n  } = props;\n\n  if (!revokedCertificates || !revokedCertificates.length) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('revokedCertificates')}\n    />,\n    revokedCertificates.map((certificate) => ([\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(certificate.userCertificate)}\n        monospace\n      />,\n      <RowValue\n        name={l10n.getString('revocationDate')}\n        value={dateShort(certificate.revocationDate.getTime())}\n      />,\n      (certificate.crlEntryExtensions && certificate.crlEntryExtensions.length && ([\n        <RowValue\n          name={`${l10n.getString('crlEntryExtensions')}:`}\n          value=\"\"\n        />,\n        <TableRowTable>\n          {\n            certificate.crlEntryExtensions.map((extension) => {\n              if (extension.value instanceof CRLReason) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.toJSON() || extension.value.reason}\n                  />\n                );\n              }\n\n              if (extension.value instanceof InvalidityDate) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.value.getTime()}\n                  />\n                );\n              }\n\n              if (extension.value instanceof CertificateIssuer && extension.value.length) {\n                return ([\n                  <RowValue\n                    name={`${getStringByOID(extension.asn.extnID)}:`}\n                    value=\"\"\n                  />,\n                  extension.value.map((gn) => (\n                    <TableRowTable>\n                      <GeneralNamePart\n                        generalName={gn}\n                        getDNSNameLink={getDNSNameLink}\n                        getIPAddressLink={getIPAddressLink}\n                      />\n                    </TableRowTable>\n                  )),\n                ]);\n              }\n\n              return (\n                <RowValue\n                  name={getStringByOID(extension.asn.extnID)}\n                  value={Convert.ToHex(extension.asn.extnValue)}\n                  monospace\n                />\n              );\n            })\n          }\n        </TableRowTable>,\n      ])),\n      <tr>\n        <td colSpan={2} class=\"divider\">\n          <span />\n        </td>\n      </tr>,\n    ])),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Convert } from 'pvtsutils';\n\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n, getStringByOID } from '../../utils';\nimport { RowTitle, RowValue, TableRowTable } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IHolderProps {\n  holder: X509AttributeCertificate['holder'];\n}\n\nexport const Holder: FunctionalComponent<IHolderProps> = (props) => {\n  const { holder } = props;\n\n  if (!holder) {\n    return null;\n  }\n\n  const { baseCertificateID, objectDigestInfo } = holder;\n\n  return [\n    <RowTitle\n      value={l10n.getString('holder')}\n    />,\n    baseCertificateID && ([\n      baseCertificateID.issuer.map((item) => (\n        <GeneralNamePart\n          generalName={item}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      )),\n      <tr>\n        <td />\n        <td />\n      </tr>,\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(baseCertificateID.serial)}\n        monospace\n      />,\n      <tr>\n        <td />\n        <td />\n      </tr>,\n    ]),\n    objectDigestInfo && ([\n      <RowValue\n        name={l10n.getString('digestInfo')}\n        value=\"\"\n      />,\n      <TableRowTable>\n        <RowValue\n          name={l10n.getString('algorithm')}\n          value={getStringByOID(objectDigestInfo.digestAlgorithm.algorithm)}\n        />\n        <RowValue\n          name={l10n.getString('value')}\n          value={Convert.ToHex(objectDigestInfo.objectDigest)}\n          monospace\n        />\n        <RowValue\n          name={l10n.getString('type')}\n          value={objectDigestInfo.digestedObjectType}\n        />\n      </TableRowTable>,\n    ]),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n } from '../../utils';\nimport { RowTitle } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IIssuerProps {\n  issuer: X509AttributeCertificate['issuer'];\n}\n\nexport const Issuer: FunctionalComponent<IIssuerProps> = (props) => {\n  const { issuer } = props;\n\n  if (!issuer) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('issuer')}\n    />,\n    issuer.map((item) => (\n      <GeneralNamePart\n        generalName={item}\n        getDNSNameLink={() => ''}\n        getIPAddressLink={() => ''}\n      />\n    )),\n  ];\n};\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { X509AttributeCertificate } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  Attributes,\n  Holder,\n  Issuer,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type AttributeCertificateProp = string | X509AttributeCertificate;\n\n@Component({\n  tag: 'peculiar-attribute-certificate-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class AttributeCertificateViewer {\n  private certificateDecoded: X509AttributeCertificate;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop() certificate: AttributeCertificateProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: AttributeCertificateProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509AttributeCertificate) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509AttributeCertificate(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: AttributeCertificateProp,\n    oldValue: AttributeCertificateProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509AttributeCertificate\n      && oldValue instanceof X509AttributeCertificate\n    ) {\n      if (newValue.serialNumber !== oldValue.serialNumber) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this attribute certificate.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no attribute certificate available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <Issuer\n            issuer={this.certificateDecoded.issuer}\n          />\n\n          <Holder\n            holder={this.certificateDecoded.holder}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n@import '../certificate-viewer/certificate-viewer.scss';\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n.tabs {\n  white-space: nowrap;\n  overflow-x: auto;\n  border-bottom: 1px solid var(--pv-color-gray-4);\n  padding: 0 var(--pv-size-base-4);\n  margin-bottom: var(--pv-size-base-6);\n}\n\n.tab {\n  font-family: inherit;\n  outline: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 3px solid transparent;\n  min-height: var(--pv-size-base-12);\n  height: 100%;\n  padding: 0 var(--pv-size-base-3);\n  background-color: transparent;\n  transition: background-color 200ms, color 200ms, border-color 200ms;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-weight: var(--pv-text-s2-weight);\n  font-size: var(--pv-text-s2-size);\n  line-height: var(--pv-text-s2-height);\n  letter-spacing: var(--pv-text-s2-spacing);\n  color: var(--pv-color-gray-10);\n\n  &:hover {\n    background-color: var(--pv-color-secondary-tint-5);\n  }\n\n  &[aria-selected=\"true\"] {\n    color: var(--pv-color-black);\n    border-color: var(--pv-color-secondary);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  h,\n  Prop,\n  State,\n  Host,\n} from '@stencil/core';\n\nimport {\n  X509Certificates,\n} from '../../crypto';\nimport { Typography } from '../typography';\nimport {\n  Miscellaneous,\n} from '../certificate-details-parts';\n\n@Component({\n  tag: 'peculiar-certificate-chain-viewer',\n  styleUrl: 'certificate-chain-viewer.scss',\n  shadow: true,\n})\nexport class CertificateChainViewer {\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificates: X509Certificates;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop({ reflect: true }) download?: boolean;\n\n  @State() selectedCertificateIndex: number = 0;\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificates available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (!this.certificates) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host>\n        <div\n          role=\"tablist\"\n          class=\"tabs\"\n        >\n          {Array.from(this.certificates).map((certificate, index) => (\n            <button\n              type=\"button\"\n              role=\"tab\"\n              class=\"tab\"\n              aria-selected={index === this.selectedCertificateIndex ? 'true' : 'false'}\n              onClick={() => {\n                this.selectedCertificateIndex = index;\n              }}\n            >\n              {certificate.commonName}\n            </button>\n          ))}\n        </div>\n        {Array.from(this.certificates).map((certificate, index) => {\n          if (index === this.selectedCertificateIndex) {\n            return (\n              <peculiar-certificate-viewer\n                certificate={certificate}\n                download={false}\n              />\n            );\n          }\n\n          return null;\n        })}\n\n        <table>\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificates}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { X509Crl } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  IssuerName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  RevokedCertificates,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type CrlProp = string | X509Crl;\n\n@Component({\n  tag: 'peculiar-crl-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CrlViewer {\n  private certificateDecoded: X509Crl;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: CrlProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Issuer DN link.\n   * **NOTE**: HTML component attribute must be `issuer-dn-link`.\n   */\n  @Prop({ reflect: true }) issuerDnLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: CrlProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509Crl) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509Crl(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getIssuerDnLink() {\n    return this.issuerDnLink;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: CrlProp,\n    oldValue: CrlProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509Crl\n      && oldValue instanceof X509Crl\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate revocation list.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate revocation list available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <IssuerName\n            name={this.certificateDecoded.issuer}\n            issuerDnLink={this.getIssuerDnLink()}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n          />\n\n          <RevokedCertificates\n            revokedCertificates={this.certificateDecoded.revokedCertificates}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { Pkcs10CertificateRequest } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  SubjectName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  PublicKey,\n  Attributes,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type CsrProp = string | Pkcs10CertificateRequest;\n\n@Component({\n  tag: 'peculiar-csr-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CsrViewer {\n  private certificateDecoded: Pkcs10CertificateRequest;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: CsrProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: CsrProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof Pkcs10CertificateRequest) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new Pkcs10CertificateRequest(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: CsrProp,\n    oldValue: CsrProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof Pkcs10CertificateRequest\n      && oldValue instanceof Pkcs10CertificateRequest\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private getAuthKeyIdParentLink = (value: string) => value;\n\n  // eslint-disable-next-line class-methods-use-this\n  private getAuthKeyIdSiblingsLink = (value: string) => value;\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate request.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate request available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <SubjectName\n            name={this.certificateDecoded.subject}\n          />\n\n          <PublicKey\n            publicKey={this.certificateDecoded.publicKey}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            title=\"Extension Request\"\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}