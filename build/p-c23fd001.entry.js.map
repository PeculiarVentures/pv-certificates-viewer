{"version":3,"names":["BasicAttribute","props","children","attribute","h","RowValue","name","value","getStringByOID","asn","type","colSpan","class","NamePart","map","relativeDistinguishedName","attributeTypeAndValue","OIDs","toString","NameAttribute","ActivityDescriptionAttribute","camelCaseToWords","TableRowTable","GeneralNamePart","generalName","codeAuthority","getDNSNameLink","getIPAddressLink","codeId","shortName","shortDescription","WebGdprAttribute","assessmentAuthority","assessmentLocation","assessmentRef","dataStorageTerritory","description","InsuranceValueAttribute","base","degree","location","TypeRelationshipAttribute","Object","keys","keyName","toNumber","l10n","getString","getValueRank","ratio","ValuationRankingAttribute","values","AsStringAttribute","monospace","UnstructuredNameAttribute","utf8String","ChallengePasswordAttribute","Attributes","attributes","length","RowTitle","Name","ActivityDescription","WebGDPR","InsuranceValue","TypeRelationship","ValuationRanking","UnstructuredName","ChallengePassword","error","console","RevokedCertificates","revokedCertificates","certificate","Convert","ToHex","userCertificate","dateShort","revocationDate","getTime","crlEntryExtensions","extension","CRLReason","extnID","toJSON","reason","InvalidityDate","CertificateIssuer","gn","extnValue","Holder","holder","baseCertificateID","objectDigestInfo","issuer","item","serial","digestAlgorithm","algorithm","objectDigest","digestedObjectType","Issuer","certificateViewerCss","PeculiarAttributeCertificateViewerStyle0","AttributeCertificateViewer","this","getAuthKeyIdParentLink","_a","authKeyIdParentLink","replace","getAuthKeyIdSiblingsLink","authKeyIdSiblingsLink","getSubjectKeyIdChildrenLink","subjectKeyIdChildrenLink","getSubjectKeyIdSiblingsLink","subjectKeyIdSiblingsLink","handleMediaQueryChange","event","mobileScreenView","matches","componentWillLoad","decodeCertificate","mobileMediaQuery","window","matchMedia","mobileMediaQueryString","addEventListener","bind","disconnectedCallback","removeEventListener","isDecodeInProcess","X509AttributeCertificate","certificateDecoded","parseExtensions","parseAttributes","getThumbprint","certificateDecodeError","watchCertificateAndDecode","newValue","oldValue","serialNumber","renderErrorState","Typography","renderEmptyState","render","Host","String","BasicInformation","assign","Signature","signature","Thumbprints","thumbprints","getLEILink","Extensions","extensions","download","Miscellaneous","PeculiarCrlViewerStyle0","CrlViewer","CRL","getIssuerDnLink","issuerDnLink","commonName","IssuerName","PeculiarCsrViewerStyle0","CsrViewer","CSR","SubjectName","subject","PublicKey","publicKey","title"],"sources":["src/components/certificate-details-parts/attributes/basic_attribute.tsx","src/components/certificate-details-parts/attributes/name_part.tsx","src/components/certificate-details-parts/attributes/name_attribute.tsx","src/components/certificate-details-parts/attributes/activity_description_attribute.tsx","src/components/certificate-details-parts/attributes/web_gdpr_attribute.tsx","src/components/certificate-details-parts/attributes/insurance_value_attribute.tsx","src/components/certificate-details-parts/attributes/type_relationship_attribute.tsx","src/components/certificate-details-parts/attributes/valuation_ranking_attribute.tsx","src/components/certificate-details-parts/attributes/as_string_attribute.tsx","src/components/certificate-details-parts/attributes/unstructured_name_attribute.tsx","src/components/certificate-details-parts/attributes/challenge_password_attribute.tsx","src/components/certificate-details-parts/attributes/index.tsx","src/components/certificate-details-parts/revoked_certificates.tsx","src/components/certificate-details-parts/holder.tsx","src/components/certificate-details-parts/issuer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-attribute-certificate-viewer&encapsulation=shadow","src/components/attribute-certificate-viewer/attribute-certificate-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-crl-viewer&encapsulation=shadow","src/components/crl-viewer/crl-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-csr-viewer&encapsulation=shadow","src/components/csr-viewer/csr-viewer.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { getStringByOID } from '../../../utils';\nimport { RowValue } from '../row';\n\ninterface IBasicAttributeProps {\n  attribute: Attribute<TAttributeValue>;\n}\n\nexport const BasicAttribute: FunctionalComponent<IBasicAttributeProps> = (props, children) => {\n  const { attribute } = props;\n\n  return ([\n    <RowValue\n      name=\"Name\"\n      value={getStringByOID(attribute.asn.type)}\n    />,\n    children,\n    <tr>\n      <td colSpan={2} class=\"divider\">\n        <span />\n      </td>\n    </tr>,\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\n\nimport { OIDs } from '../../../constants/oids';\nimport { RowValue } from '../row';\n\ninterface INamePartProps {\n  name: Name;\n}\n\nexport const NamePart: FunctionalComponent<INamePartProps> = (props): any[] => {\n  const { name } = props;\n\n  if (!name) {\n    return null;\n  }\n\n  return name.map((relativeDistinguishedName) => (\n    relativeDistinguishedName.map((attributeTypeAndValue) => (\n      <RowValue\n        name={OIDs[attributeTypeAndValue.type] || attributeTypeAndValue.type}\n        value={attributeTypeAndValue.value.toString()}\n      />\n    ))\n  ));\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { NamePart } from './name_part';\n\ninterface INameAttributeProps {\n  attribute: Attribute<Name>;\n}\n\nexport const NameAttribute:\nFunctionalComponent<INameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <NamePart\n        name={attribute.value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ActivityDescription } from '@peculiar/asn1-ntqwac';\n\nimport { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IActivityDescriptionAttributeProps {\n  attribute: Attribute<ActivityDescription>;\n}\n\nexport const ActivityDescriptionAttribute:\nFunctionalComponent<IActivityDescriptionAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('codeAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('codeId')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeId}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('shortName')}\n        value={attribute.value.shortName}\n      />\n      <RowValue\n        name={camelCaseToWords('shortDescription')}\n        value={attribute.value.shortDescription}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { WebGDPR } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IWebGdprAttributeProps {\n  attribute: Attribute<WebGDPR>;\n}\n\nexport const WebGdprAttribute:\nFunctionalComponent<IWebGdprAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('assessmentAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentLocation')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentLocation}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentRef')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentRef}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('dataStorageTerritory')}\n        value={attribute.value.dataStorageTerritory}\n      />\n      <RowValue\n        name={camelCaseToWords('description')}\n        value={attribute.value.description}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { InsuranceValue } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IInsuranceValueAttributeProps {\n  attribute: Attribute<InsuranceValue>;\n}\n\nexport const InsuranceValueAttribute:\nFunctionalComponent<IInsuranceValueAttributeProps> = (props) => {\n  const { attribute } = props;\n  const value = `${attribute.value.base} * 10^${attribute.value.degree} ${attribute.value.location}`;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { TypeRelationship } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { l10n } from '../../../utils';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface ITypeRelationshipAttributeProps {\n  attribute: Attribute<TypeRelationship>;\n}\n\nexport const TypeRelationshipAttribute:\nFunctionalComponent<ITypeRelationshipAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      {Object.keys(attribute.value).map((keyName) => (\n        <RowValue\n          name={keyName}\n          value={attribute.value[keyName].toNumber() ? l10n.getString('yes') : l10n.getString('no')}\n        />\n      ))}\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ValuationRanking } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IValuationRankingAttributeProps {\n  attribute: Attribute<ValuationRanking>;\n}\n\nconst getValueRank = (value: number): string => {\n  let ratio = 1;\n\n  if (value / 100 > 1) {\n    ratio = 100;\n  } else if (value / 10 > 1) {\n    ratio = 10;\n  }\n\n  return `${value}/${5 * ratio}`;\n};\n\nexport const ValuationRankingAttribute:\nFunctionalComponent<IValuationRankingAttributeProps> = (props) => {\n  const { attribute } = props;\n  const values = Object.keys(attribute.value).map((keyName) => ([\n    getValueRank(attribute.value[keyName]),\n    <br />,\n  ]));\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={values as any}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IAsStringAttributeProps {\n  attribute: Attribute<string>;\n}\n\nexport const AsStringAttribute:\nFunctionalComponent<IAsStringAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value}\n        monospace\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { UnstructuredName } from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IUnstructuredNameAttributeProps {\n  attribute: Attribute<UnstructuredName>;\n}\n\nexport const UnstructuredNameAttribute:\nFunctionalComponent<IUnstructuredNameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.utf8String}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ChallengePassword } from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IChallengePasswordAttributeProps {\n  attribute: Attribute<ChallengePassword>;\n}\n\nexport const ChallengePasswordAttribute:\nFunctionalComponent<IChallengePasswordAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.toString()}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Name } from '@peculiar/asn1-x509';\nimport {\n  TypeRelationship,\n  ActivityDescription,\n  WebGDPR,\n  InsuranceValue,\n  ValuationRanking,\n} from '@peculiar/asn1-ntqwac';\nimport {\n  UnstructuredName,\n  ChallengePassword,\n} from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { RowTitle } from '../row';\nimport { NameAttribute } from './name_attribute';\nimport { ActivityDescriptionAttribute } from './activity_description_attribute';\nimport { WebGdprAttribute } from './web_gdpr_attribute';\nimport { InsuranceValueAttribute } from './insurance_value_attribute';\nimport { TypeRelationshipAttribute } from './type_relationship_attribute';\nimport { ValuationRankingAttribute } from './valuation_ranking_attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { AsStringAttribute } from './as_string_attribute';\nimport { UnstructuredNameAttribute } from './unstructured_name_attribute';\nimport { ChallengePasswordAttribute } from './challenge_password_attribute';\n\ninterface IAttributesPtops extends\n  IGeneralNameOptions,\n  ILeiOptions,\n  IAuthorityKeyIdentifierOptions,\n  ISubjectKeyIdentifierOptions {\n  attributes: Attribute<TAttributeValue>[];\n}\n\nexport const Attributes: FunctionalComponent<IAttributesPtops> = (props) => {\n  const { attributes } = props;\n\n  if (!attributes || !attributes.length) {\n    return null;\n  }\n\n  return ([\n    <RowTitle\n      value=\"Attributes\"\n    />,\n    attributes.map((attribute) => {\n      try {\n        if (attribute.value instanceof Name) {\n          return (\n            <NameAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ActivityDescription) {\n          return (\n            <ActivityDescriptionAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof WebGDPR) {\n          return (\n            <WebGdprAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof InsuranceValue) {\n          return (\n            <InsuranceValueAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof TypeRelationship) {\n          return (\n            <TypeRelationshipAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ValuationRanking) {\n          return (\n            <ValuationRankingAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof UnstructuredName) {\n          return (\n            <UnstructuredNameAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ChallengePassword) {\n          return (\n            <ChallengePasswordAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (typeof attribute.value === 'string') {\n          return (\n            <AsStringAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        return (\n          <BasicAttribute\n            attribute={attribute}\n          />\n        );\n      } catch (error) {\n        console.error('Error render attribute:', attribute.asn.type);\n\n        return null;\n      }\n    }),\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { CRLReason, InvalidityDate, CertificateIssuer } from '@peculiar/asn1-x509';\nimport { Convert } from 'pvtsutils';\n\nimport { dateShort, l10n, getStringByOID } from '../../utils';\nimport { IRevokedCertificate } from '../../crypto';\nimport { GeneralNamePart } from './extensions/general_name_part';\nimport { RowTitle, RowValue, TableRowTable } from './row';\n\ninterface IRevokedCertificatesProps extends IGeneralNameOptions {\n  revokedCertificates: IRevokedCertificate[];\n}\n\nexport const RevokedCertificates: FunctionalComponent<IRevokedCertificatesProps> = (props) => {\n  const {\n    revokedCertificates,\n    getDNSNameLink,\n    getIPAddressLink,\n  } = props;\n\n  if (!revokedCertificates || !revokedCertificates.length) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('revokedCertificates')}\n    />,\n    revokedCertificates.map((certificate) => ([\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(certificate.userCertificate)}\n        monospace\n      />,\n      <RowValue\n        name={l10n.getString('revocationDate')}\n        value={dateShort(certificate.revocationDate.getTime())}\n      />,\n      (certificate.crlEntryExtensions && certificate.crlEntryExtensions.length && ([\n        <RowValue\n          name={`${l10n.getString('crlEntryExtensions')}:`}\n          value=\"\"\n        />,\n        <TableRowTable>\n          {\n            certificate.crlEntryExtensions.map((extension) => {\n              if (extension.value instanceof CRLReason) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.toJSON() || extension.value.reason}\n                  />\n                );\n              }\n\n              if (extension.value instanceof InvalidityDate) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.value.getTime()}\n                  />\n                );\n              }\n\n              if (extension.value instanceof CertificateIssuer && extension.value.length) {\n                return ([\n                  <RowValue\n                    name={`${getStringByOID(extension.asn.extnID)}:`}\n                    value=\"\"\n                  />,\n                  extension.value.map((gn) => (\n                    <TableRowTable>\n                      <GeneralNamePart\n                        generalName={gn}\n                        getDNSNameLink={getDNSNameLink}\n                        getIPAddressLink={getIPAddressLink}\n                      />\n                    </TableRowTable>\n                  )),\n                ]);\n              }\n\n              return (\n                <RowValue\n                  name={getStringByOID(extension.asn.extnID)}\n                  value={Convert.ToHex(extension.asn.extnValue)}\n                  monospace\n                />\n              );\n            })\n          }\n        </TableRowTable>,\n      ])),\n      <tr>\n        <td colSpan={2} class=\"divider\">\n          <span />\n        </td>\n      </tr>,\n    ])),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Convert } from 'pvtsutils';\n\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n, getStringByOID } from '../../utils';\nimport { RowTitle, RowValue, TableRowTable } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IHolderProps {\n  holder: X509AttributeCertificate['holder'];\n}\n\nexport const Holder: FunctionalComponent<IHolderProps> = (props) => {\n  const { holder } = props;\n\n  if (!holder) {\n    return null;\n  }\n\n  const { baseCertificateID, objectDigestInfo } = holder;\n\n  return [\n    <RowTitle\n      value={l10n.getString('holder')}\n    />,\n    baseCertificateID && ([\n      baseCertificateID.issuer.map((item) => (\n        <GeneralNamePart\n          generalName={item}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      )),\n      <tr>\n        <td />\n        <td />\n      </tr>,\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(baseCertificateID.serial)}\n        monospace\n      />,\n      <tr>\n        <td />\n        <td />\n      </tr>,\n    ]),\n    objectDigestInfo && ([\n      <RowValue\n        name={l10n.getString('digestInfo')}\n        value=\"\"\n      />,\n      <TableRowTable>\n        <RowValue\n          name={l10n.getString('algorithm')}\n          value={getStringByOID(objectDigestInfo.digestAlgorithm.algorithm)}\n        />\n        <RowValue\n          name={l10n.getString('value')}\n          value={Convert.ToHex(objectDigestInfo.objectDigest)}\n          monospace\n        />\n        <RowValue\n          name={l10n.getString('type')}\n          value={objectDigestInfo.digestedObjectType}\n        />\n      </TableRowTable>,\n    ]),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n } from '../../utils';\nimport { RowTitle } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IIssuerProps {\n  issuer: X509AttributeCertificate['issuer'];\n}\n\nexport const Issuer: FunctionalComponent<IIssuerProps> = (props) => {\n  const { issuer } = props;\n\n  if (!issuer) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('issuer')}\n    />,\n    issuer.map((item) => (\n      <GeneralNamePart\n        generalName={item}\n        getDNSNameLink={() => ''}\n        getIPAddressLink={() => ''}\n      />\n    )),\n  ];\n};\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { X509AttributeCertificate } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  Attributes,\n  Holder,\n  Issuer,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type AttributeCertificateProp = string | X509AttributeCertificate;\n\n@Component({\n  tag: 'peculiar-attribute-certificate-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class AttributeCertificateViewer {\n  private certificateDecoded: X509AttributeCertificate;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop() certificate: AttributeCertificateProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: AttributeCertificateProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509AttributeCertificate) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509AttributeCertificate(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: AttributeCertificateProp,\n    oldValue: AttributeCertificateProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509AttributeCertificate\n      && oldValue instanceof X509AttributeCertificate\n    ) {\n      if (newValue.serialNumber !== oldValue.serialNumber) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this attribute certificate.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no attribute certificate available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <Issuer\n            issuer={this.certificateDecoded.issuer}\n          />\n\n          <Holder\n            holder={this.certificateDecoded.holder}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { CRL } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  IssuerName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  RevokedCertificates,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type CrlProp = string | CRL;\n\n@Component({\n  tag: 'peculiar-crl-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CrlViewer {\n  private certificateDecoded: CRL;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: CrlProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Issuer DN link.\n   * **NOTE**: HTML component attribute must be `issuer-dn-link`.\n   */\n  @Prop({ reflect: true }) issuerDnLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: CrlProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof CRL) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new CRL(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getIssuerDnLink() {\n    return this.issuerDnLink;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: CrlProp,\n    oldValue: CrlProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof CRL\n      && oldValue instanceof CRL\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate revocation list.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate revocation list available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <IssuerName\n            name={this.certificateDecoded.issuer}\n            issuerDnLink={this.getIssuerDnLink()}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n          />\n\n          <RevokedCertificates\n            revokedCertificates={this.certificateDecoded.revokedCertificates}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { CSR } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  SubjectName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  PublicKey,\n  Attributes,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type CsrProp = string | CSR;\n\n@Component({\n  tag: 'peculiar-csr-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CsrViewer {\n  private certificateDecoded: CSR;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: CsrProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: CsrProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof CSR) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new CSR(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: CsrProp,\n    oldValue: CsrProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof CSR\n      && oldValue instanceof CSR\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private getAuthKeyIdParentLink = (value: string) => value;\n\n  // eslint-disable-next-line class-methods-use-this\n  private getAuthKeyIdSiblingsLink = (value: string) => value;\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate request.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate request available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <SubjectName\n            name={this.certificateDecoded.subject}\n          />\n\n          <PublicKey\n            publicKey={this.certificateDecoded.publicKey}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            title=\"Extension Request\"\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}