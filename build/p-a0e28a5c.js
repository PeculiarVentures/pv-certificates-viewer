/*!
 * Â© Peculiar Ventures https://peculiarventures.com/ - MIT License
 */
import{A as t,e as s,C as r,N as e,E as i,f as n,g as o,h as a,j as h,R as u,k as c,l as m,m as f}from"./p-22bcf2bb.js";import{b as g,D as l}from"./p-cff9655c.js";import{d as p}from"./p-35e7a514.js";
/**
 * @license
 * Copyright (c) Peculiar Ventures, LLC.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */class E extends t{constructor(t){super(s(t),r),this.thumbprints={},this.type="X.509 Certificate";const{tbsCertificate:i}=this.asn;this.serialNumber=g.Convert.ToHex(i.serialNumber),this.subject=new e(i.subject).toJSON(),this.issuer=new e(i.issuer).toJSON(),this.version=i.version+1;const n=i.validity.notBefore.utcTime||i.validity.notBefore.generalTime;if(!n)throw new Error("Cannot get 'notBefore' value");this.notBefore=n;const o=i.validity.notAfter.utcTime||i.validity.notAfter.generalTime;if(!o)throw new Error("Cannot get 'notAfter' value");this.notAfter=o,this.validity=p(this.notBefore,this.notAfter)}parseExtensions(){const{tbsCertificate:t}=this.asn;t.extensions&&(this.extensions=t.extensions.map((t=>new i(n.serialize(t)))))}get publicKey(){const{subjectPublicKey:t,algorithm:s}=this.asn.tbsCertificate.subjectPublicKeyInfo;let r;return s.algorithm===o&&s.parameters&&(r=n.parse(s.parameters,a)),s.algorithm===h&&(r=n.parse(t,u)),{params:r,value:n.serialize(this.asn.tbsCertificate.subjectPublicKeyInfo),algorithm:s.algorithm}}get signature(){const{signatureValue:t,signatureAlgorithm:s}=this.asn;return{value:t,algorithm:s.algorithm}}exportAsBase64(){return g.Convert.ToBase64(this.raw)}exportAsHexFormatted(){return c(g.Convert.ToHex(this.raw))}exportAsPemFormatted(){return`-----BEGIN CERTIFICATE-----\n${m(this.exportAsBase64())}\n-----END CERTIFICATE-----`}async getThumbprint(t="SHA-1"){try{const s=await f(t,this.raw);s&&(this.thumbprints[t.name||t]=g.Convert.ToHex(s))}catch(t){console.error("Error thumbprint get:",t)}}get commonName(){if(!this.subject)return"";for(let t=0;t<this.subject.length;t+=1){const s=this.subject[t];if("CN"===s.shortName||"E"===s.shortName||"O"===s.shortName)return s.value}return""}get issuerCommonName(){if(!this.issuer)return"";for(let t=0;t<this.issuer.length;t+=1){const s=this.issuer[t];if("CN"===s.shortName)return s.value;if("E"===s.shortName)return s.value}return""}get isRoot(){return JSON.stringify(this.issuer)===JSON.stringify(this.subject)}subjectToString(){return this.subject?this.subject.map((t=>`${t.shortName}=${t.value}`)).join(", "):""}issuerToString(){return this.issuer?this.issuer.map((t=>`${t.shortName}=${t.value}`)).join(", "):""}downloadAsPEM(t){l.cert.asPEM(this.exportAsPemFormatted(),t||this.commonName)}downloadAsDER(t){l.cert.asDER(this.exportAsHexFormatted(),t||this.commonName)}}export{E as X}