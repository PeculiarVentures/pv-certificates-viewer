{"version":3,"file":"p-DlOQApOu.system.js","sources":["src/components/certificate-details-parts/attributes/basic_attribute.tsx","src/components/certificate-details-parts/attributes/name_part.tsx","src/components/certificate-details-parts/attributes/name_attribute.tsx","src/components/certificate-details-parts/attributes/activity_description_attribute.tsx","src/components/certificate-details-parts/attributes/web_gdpr_attribute.tsx","src/components/certificate-details-parts/attributes/insurance_value_attribute.tsx","src/components/certificate-details-parts/attributes/type_relationship_attribute.tsx","src/components/certificate-details-parts/attributes/valuation_ranking_attribute.tsx","src/components/certificate-details-parts/attributes/as_string_attribute.tsx","src/components/certificate-details-parts/attributes/unstructured_name_attribute.tsx","src/components/certificate-details-parts/attributes/challenge_password_attribute.tsx","src/components/certificate-details-parts/attributes/index.tsx","src/components/certificate-details-parts/revoked_certificates.tsx","src/components/certificate-details-parts/holder.tsx","src/components/certificate-details-parts/issuer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-attribute-certificate-viewer&encapsulation=shadow","src/components/attribute-certificate-viewer/attribute-certificate-viewer.tsx","src/components/certificate-chain-viewer/certificate-chain-viewer.scss?tag=peculiar-certificate-chain-viewer&encapsulation=shadow","src/components/certificate-chain-viewer/certificate-chain-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-crl-viewer&encapsulation=shadow","src/components/crl-viewer/crl-viewer.tsx","src/components/certificate-viewer/certificate-viewer.scss?tag=peculiar-csr-viewer&encapsulation=shadow","src/components/csr-viewer/csr-viewer.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { getStringByOID } from '../../../utils';\nimport { RowValue } from '../row';\n\ninterface IBasicAttributeProps {\n  attribute: Attribute<TAttributeValue>;\n}\n\nexport const BasicAttribute: FunctionalComponent<IBasicAttributeProps> = (props, children) => {\n  const { attribute } = props;\n\n  return ([\n    <RowValue\n      name=\"Name\"\n      value={getStringByOID(attribute.asn.type)}\n    />,\n    children,\n    <tr>\n      <td colSpan={2} class=\"divider\">\n        <span />\n      </td>\n    </tr>,\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\n\nimport { OIDs } from '../../../constants/oids';\nimport { RowValue } from '../row';\n\ninterface INamePartProps {\n  name: Name;\n}\n\nexport const NamePart: FunctionalComponent<INamePartProps> = (props): any[] => {\n  const { name } = props;\n\n  if (!name) {\n    return null;\n  }\n\n  return name.map((relativeDistinguishedName) => (\n    relativeDistinguishedName.map((attributeTypeAndValue) => (\n      <RowValue\n        name={OIDs[attributeTypeAndValue.type] || attributeTypeAndValue.type}\n        value={attributeTypeAndValue.value.toString()}\n      />\n    ))\n  ));\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { Name } from '@peculiar/asn1-x509';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { NamePart } from './name_part';\n\ninterface INameAttributeProps {\n  attribute: Attribute<Name>;\n}\n\nexport const NameAttribute:\nFunctionalComponent<INameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <NamePart\n        name={attribute.value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ActivityDescription } from '@peculiar/asn1-ntqwac';\n\nimport { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IActivityDescriptionAttributeProps {\n  attribute: Attribute<ActivityDescription>;\n}\n\nexport const ActivityDescriptionAttribute:\nFunctionalComponent<IActivityDescriptionAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('codeAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('codeId')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.codeId}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('shortName')}\n        value={attribute.value.shortName}\n      />\n      <RowValue\n        name={camelCaseToWords('shortDescription')}\n        value={attribute.value.shortDescription}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { WebGDPR } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { camelCaseToWords } from '../../../utils';\nimport { GeneralNamePart } from '../extensions/general_name_part';\nimport { RowValue, TableRowTable } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IWebGdprAttributeProps {\n  attribute: Attribute<WebGDPR>;\n}\n\nexport const WebGdprAttribute:\nFunctionalComponent<IWebGdprAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name={camelCaseToWords('assessmentAuthority')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentAuthority}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentLocation')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentLocation}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('assessmentRef')}\n        value=\"\"\n      />\n      <TableRowTable>\n        <GeneralNamePart\n          generalName={attribute.value.assessmentRef}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      </TableRowTable>\n\n      <RowValue\n        name={camelCaseToWords('dataStorageTerritory')}\n        value={attribute.value.dataStorageTerritory}\n      />\n      <RowValue\n        name={camelCaseToWords('description')}\n        value={attribute.value.description}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { InsuranceValue } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IInsuranceValueAttributeProps {\n  attribute: Attribute<InsuranceValue>;\n}\n\nexport const InsuranceValueAttribute:\nFunctionalComponent<IInsuranceValueAttributeProps> = (props) => {\n  const { attribute } = props;\n  const value = `${attribute.value.base} * 10^${attribute.value.degree} ${attribute.value.location}`;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={value}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { TypeRelationship } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { l10n } from '../../../utils';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface ITypeRelationshipAttributeProps {\n  attribute: Attribute<TypeRelationship>;\n}\n\nexport const TypeRelationshipAttribute:\nFunctionalComponent<ITypeRelationshipAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      {Object.keys(attribute.value).map((keyName) => (\n        <RowValue\n          name={keyName}\n          value={attribute.value[keyName].toNumber() ? l10n.getString('yes') : l10n.getString('no')}\n        />\n      ))}\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ValuationRanking } from '@peculiar/asn1-ntqwac';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IValuationRankingAttributeProps {\n  attribute: Attribute<ValuationRanking>;\n}\n\nconst getValueRank = (value: number): string => {\n  let ratio = 1;\n\n  if (value / 100 > 1) {\n    ratio = 100;\n  } else if (value / 10 > 1) {\n    ratio = 10;\n  }\n\n  return `${value}/${5 * ratio}`;\n};\n\nexport const ValuationRankingAttribute:\nFunctionalComponent<IValuationRankingAttributeProps> = (props) => {\n  const { attribute } = props;\n  const values = Object.keys(attribute.value).map((keyName) => ([\n    getValueRank(attribute.value[keyName]),\n    <br />,\n  ]));\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={values as any}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IAsStringAttributeProps {\n  attribute: Attribute<string>;\n}\n\nexport const AsStringAttribute:\nFunctionalComponent<IAsStringAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value}\n        monospace\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { UnstructuredName } from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IUnstructuredNameAttributeProps {\n  attribute: Attribute<UnstructuredName>;\n}\n\nexport const UnstructuredNameAttribute:\nFunctionalComponent<IUnstructuredNameAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.utf8String}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport type { ChallengePassword } from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute } from '../../../crypto/attribute';\nimport { RowValue } from '../row';\nimport { BasicAttribute } from './basic_attribute';\n\ninterface IChallengePasswordAttributeProps {\n  attribute: Attribute<ChallengePassword>;\n}\n\nexport const ChallengePasswordAttribute:\nFunctionalComponent<IChallengePasswordAttributeProps> = (props) => {\n  const { attribute } = props;\n\n  return (\n    <BasicAttribute\n      attribute={attribute}\n    >\n      <RowValue\n        name=\"Value\"\n        value={attribute.value.toString()}\n      />\n    </BasicAttribute>\n  );\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Name } from '@peculiar/asn1-x509';\nimport {\n  TypeRelationship,\n  ActivityDescription,\n  WebGDPR,\n  InsuranceValue,\n  ValuationRanking,\n} from '@peculiar/asn1-ntqwac';\nimport {\n  UnstructuredName,\n  ChallengePassword,\n} from '@peculiar/asn1-pkcs9';\n\nimport type { Attribute, TAttributeValue } from '../../../crypto/attribute';\nimport { RowTitle } from '../row';\nimport { NameAttribute } from './name_attribute';\nimport { ActivityDescriptionAttribute } from './activity_description_attribute';\nimport { WebGdprAttribute } from './web_gdpr_attribute';\nimport { InsuranceValueAttribute } from './insurance_value_attribute';\nimport { TypeRelationshipAttribute } from './type_relationship_attribute';\nimport { ValuationRankingAttribute } from './valuation_ranking_attribute';\nimport { BasicAttribute } from './basic_attribute';\nimport { AsStringAttribute } from './as_string_attribute';\nimport { UnstructuredNameAttribute } from './unstructured_name_attribute';\nimport { ChallengePasswordAttribute } from './challenge_password_attribute';\n\ninterface IAttributesPtops extends\n  IGeneralNameOptions,\n  ILeiOptions,\n  IAuthorityKeyIdentifierOptions,\n  ISubjectKeyIdentifierOptions {\n  attributes: Attribute<TAttributeValue>[];\n}\n\nexport const Attributes: FunctionalComponent<IAttributesPtops> = (props) => {\n  const { attributes } = props;\n\n  if (!attributes || !attributes.length) {\n    return null;\n  }\n\n  return ([\n    <RowTitle\n      value=\"Attributes\"\n    />,\n    attributes.map((attribute) => {\n      try {\n        if (attribute.value instanceof Name) {\n          return (\n            <NameAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ActivityDescription) {\n          return (\n            <ActivityDescriptionAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof WebGDPR) {\n          return (\n            <WebGdprAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof InsuranceValue) {\n          return (\n            <InsuranceValueAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof TypeRelationship) {\n          return (\n            <TypeRelationshipAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ValuationRanking) {\n          return (\n            <ValuationRankingAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof UnstructuredName) {\n          return (\n            <UnstructuredNameAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (attribute.value instanceof ChallengePassword) {\n          return (\n            <ChallengePasswordAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        if (typeof attribute.value === 'string') {\n          return (\n            <AsStringAttribute\n              attribute={attribute as any}\n            />\n          );\n        }\n\n        return (\n          <BasicAttribute\n            attribute={attribute}\n          />\n        );\n      } catch (error) {\n        console.error('Error render attribute:', attribute.asn.type);\n\n        return null;\n      }\n    }),\n  ]);\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { CRLReason, InvalidityDate, CertificateIssuer } from '@peculiar/asn1-x509';\nimport { Convert } from 'pvtsutils';\n\nimport { dateShort, l10n, getStringByOID } from '../../utils';\nimport { IRevokedCertificate } from '../../crypto';\nimport { GeneralNamePart } from './extensions/general_name_part';\nimport { RowTitle, RowValue, TableRowTable } from './row';\n\ninterface IRevokedCertificatesProps extends IGeneralNameOptions {\n  revokedCertificates: IRevokedCertificate[];\n}\n\nexport const RevokedCertificates: FunctionalComponent<IRevokedCertificatesProps> = (props) => {\n  const {\n    revokedCertificates,\n    getDNSNameLink,\n    getIPAddressLink,\n  } = props;\n\n  if (!revokedCertificates || !revokedCertificates.length) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('revokedCertificates')}\n    />,\n    revokedCertificates.map((certificate) => ([\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(certificate.userCertificate)}\n        monospace\n      />,\n      <RowValue\n        name={l10n.getString('revocationDate')}\n        value={dateShort(certificate.revocationDate.getTime())}\n      />,\n      (certificate.crlEntryExtensions && certificate.crlEntryExtensions.length && ([\n        <RowValue\n          name={`${l10n.getString('crlEntryExtensions')}:`}\n          value=\"\"\n        />,\n        <TableRowTable>\n          {\n            certificate.crlEntryExtensions.map((extension) => {\n              if (extension.value instanceof CRLReason) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.toJSON() || extension.value.reason}\n                  />\n                );\n              }\n\n              if (extension.value instanceof InvalidityDate) {\n                return (\n                  <RowValue\n                    name={getStringByOID(extension.asn.extnID)}\n                    value={extension.value.value.getTime()}\n                  />\n                );\n              }\n\n              if (extension.value instanceof CertificateIssuer && extension.value.length) {\n                return ([\n                  <RowValue\n                    name={`${getStringByOID(extension.asn.extnID)}:`}\n                    value=\"\"\n                  />,\n                  extension.value.map((gn) => (\n                    <TableRowTable>\n                      <GeneralNamePart\n                        generalName={gn}\n                        getDNSNameLink={getDNSNameLink}\n                        getIPAddressLink={getIPAddressLink}\n                      />\n                    </TableRowTable>\n                  )),\n                ]);\n              }\n\n              return (\n                <RowValue\n                  name={getStringByOID(extension.asn.extnID)}\n                  value={Convert.ToHex(extension.asn.extnValue)}\n                  monospace\n                />\n              );\n            })\n          }\n        </TableRowTable>,\n      ])),\n      <tr>\n        <td colSpan={2} class=\"divider\">\n          <span />\n        </td>\n      </tr>,\n    ])),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { Convert } from 'pvtsutils';\n\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n, getStringByOID } from '../../utils';\nimport { RowTitle, RowValue, TableRowTable } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IHolderProps {\n  holder: X509AttributeCertificate['holder'];\n}\n\nexport const Holder: FunctionalComponent<IHolderProps> = (props) => {\n  const { holder } = props;\n\n  if (!holder) {\n    return null;\n  }\n\n  const { baseCertificateID, objectDigestInfo } = holder;\n\n  return [\n    <RowTitle\n      value={l10n.getString('holder')}\n    />,\n    baseCertificateID && ([\n      baseCertificateID.issuer.map((item) => (\n        <GeneralNamePart\n          generalName={item}\n          getDNSNameLink={() => ''}\n          getIPAddressLink={() => ''}\n        />\n      )),\n      <tr>\n        <td />\n        <td />\n      </tr>,\n      <RowValue\n        name={l10n.getString('serialNumber')}\n        value={Convert.ToHex(baseCertificateID.serial)}\n        monospace\n      />,\n      <tr>\n        <td />\n        <td />\n      </tr>,\n    ]),\n    objectDigestInfo && ([\n      <RowValue\n        name={l10n.getString('digestInfo')}\n        value=\"\"\n      />,\n      <TableRowTable>\n        <RowValue\n          name={l10n.getString('algorithm')}\n          value={getStringByOID(objectDigestInfo.digestAlgorithm.algorithm)}\n        />\n        <RowValue\n          name={l10n.getString('value')}\n          value={Convert.ToHex(objectDigestInfo.objectDigest)}\n          monospace\n        />\n        <RowValue\n          name={l10n.getString('type')}\n          value={objectDigestInfo.digestedObjectType}\n        />\n      </TableRowTable>,\n    ]),\n  ];\n};\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h, FunctionalComponent } from '@stencil/core';\n\nimport type { X509AttributeCertificate } from '../../crypto';\nimport { l10n } from '../../utils';\nimport { RowTitle } from './row';\nimport { GeneralNamePart } from './extensions/general_name_part';\n\ninterface IIssuerProps {\n  issuer: X509AttributeCertificate['issuer'];\n}\n\nexport const Issuer: FunctionalComponent<IIssuerProps> = (props) => {\n  const { issuer } = props;\n\n  if (!issuer) {\n    return null;\n  }\n\n  return [\n    <RowTitle\n      value={l10n.getString('issuer')}\n    />,\n    issuer.map((item) => (\n      <GeneralNamePart\n        generalName={item}\n        getDNSNameLink={() => ''}\n        getIPAddressLink={() => ''}\n      />\n    )),\n  ];\n};\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { X509AttributeCertificate } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  Attributes,\n  Holder,\n  Issuer,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type AttributeCertificateProp = string | X509AttributeCertificate;\n\n@Component({\n  tag: 'peculiar-attribute-certificate-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class AttributeCertificateViewer {\n  private certificateDecoded: X509AttributeCertificate;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop() certificate: AttributeCertificateProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: AttributeCertificateProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509AttributeCertificate) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509AttributeCertificate(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: AttributeCertificateProp,\n    oldValue: AttributeCertificateProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509AttributeCertificate\n      && oldValue instanceof X509AttributeCertificate\n    ) {\n      if (newValue.serialNumber !== oldValue.serialNumber) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this attribute certificate.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no attribute certificate available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <Issuer\n            issuer={this.certificateDecoded.issuer}\n          />\n\n          <Holder\n            holder={this.certificateDecoded.holder}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n@import '../certificate-viewer/certificate-viewer.scss';\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n.tabs {\n  white-space: nowrap;\n  overflow-x: auto;\n  border-bottom: 1px solid var(--pv-color-gray-4);\n  padding: 0 var(--pv-size-base-4);\n  margin-bottom: var(--pv-size-base-6);\n}\n\n.tab {\n  font-family: inherit;\n  outline: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 3px solid transparent;\n  min-height: var(--pv-size-base-12);\n  height: 100%;\n  padding: 0 var(--pv-size-base-3);\n  background-color: transparent;\n  transition: background-color 200ms, color 200ms, border-color 200ms;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-weight: var(--pv-text-s2-weight);\n  font-size: var(--pv-text-s2-size);\n  line-height: var(--pv-text-s2-height);\n  letter-spacing: var(--pv-text-s2-spacing);\n  color: var(--pv-color-gray-10);\n\n  &:hover {\n    background-color: var(--pv-color-secondary-tint-5);\n  }\n\n  &[aria-selected=\"true\"] {\n    color: var(--pv-color-black);\n    border-color: var(--pv-color-secondary);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  h,\n  Prop,\n  State,\n  Host,\n} from '@stencil/core';\n\nimport {\n  X509Certificates,\n} from '../../crypto';\nimport { Typography } from '../typography';\nimport {\n  Miscellaneous,\n} from '../certificate-details-parts';\n\n@Component({\n  tag: 'peculiar-certificate-chain-viewer',\n  styleUrl: 'certificate-chain-viewer.scss',\n  shadow: true,\n})\nexport class CertificateChainViewer {\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificates: X509Certificates;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop({ reflect: true }) download?: boolean;\n\n  @State() selectedCertificateIndex: number = 0;\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificates available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (!this.certificates) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host>\n        <div\n          role=\"tablist\"\n          class=\"tabs\"\n        >\n          {Array.from(this.certificates).map((certificate, index) => (\n            <button\n              type=\"button\"\n              role=\"tab\"\n              class=\"tab\"\n              aria-selected={index === this.selectedCertificateIndex ? 'true' : 'false'}\n              onClick={() => {\n                this.selectedCertificateIndex = index;\n              }}\n            >\n              {certificate.commonName}\n            </button>\n          ))}\n        </div>\n        {Array.from(this.certificates).map((certificate, index) => {\n          if (index === this.selectedCertificateIndex) {\n            return (\n              <peculiar-certificate-viewer\n                certificate={certificate}\n                download={false}\n              />\n            );\n          }\n\n          return null;\n        })}\n\n        <table>\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificates}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { X509Crl } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  IssuerName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  RevokedCertificates,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type CrlProp = string | X509Crl;\n\n@Component({\n  tag: 'peculiar-crl-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CrlViewer {\n  private certificateDecoded: X509Crl;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: CrlProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Authority Key Identifier extension parent link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.subject_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdParentLink?: string;\n\n  /**\n   * Authority Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{authKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{authKeyId}}\n   */\n  @Prop({ reflect: true }) authKeyIdSiblingsLink?: string;\n\n  /**\n   * Issuer DN link.\n   * **NOTE**: HTML component attribute must be `issuer-dn-link`.\n   */\n  @Prop({ reflect: true }) issuerDnLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: CrlProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof X509Crl) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new X509Crl(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseExtensions();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  private getAuthKeyIdParentLink = (value: string) => this.authKeyIdParentLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getAuthKeyIdSiblingsLink = (value: string) => this.authKeyIdSiblingsLink\n    ?.replace('{{authKeyId}}', value);\n\n  private getIssuerDnLink() {\n    return this.issuerDnLink;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: CrlProp,\n    oldValue: CrlProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof X509Crl\n      && oldValue instanceof X509Crl\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate revocation list.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate revocation list available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <IssuerName\n            name={this.certificateDecoded.issuer}\n            issuerDnLink={this.getIssuerDnLink()}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n          />\n\n          <RevokedCertificates\n            revokedCertificates={this.certificateDecoded.revokedCertificates}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n","@import '../../css/base.scss';\n\n:host {\n  display: block;\n  width: 100%;\n  position: relative;\n  min-width: 280px;\n  min-height: 300px;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\nth, td {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  td {\n    padding: var(--pv-size-base-2) var(--pv-size-base-4);\n    vertical-align: top;\n\n    &:first-child {\n      width: 220px;\n    }\n\n    &:last-child {\n      width: calc(100% - 220px)\n    }\n\n    &.monospace {\n      max-width: 0;\n    }\n\n    &.divider {\n      padding: var(--pv-size-base-2) 0;\n\n      span {\n        height: 1px;\n        display: block;\n        background-color: var(--pv-color-gray-4);\n      }\n    }\n  }\n\n  .title td {\n    padding-top: var(--pv-size-base-6);\n    padding-bottom: var(--pv-size-base-2);\n  }\n\n  table {\n    border-left: 1px solid var(--pv-color-gray-5);\n  }\n}\n\n.status_wrapper {\n  min-height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([data-mobile-screen-view=\"true\"]) {\n  table, tr, td {\n    display: block;\n  }\n\n  table {\n    tr {\n      padding: var(--pv-size-base-2) 0;\n\n      &.title {\n        padding-top: var(--pv-size-base-6);\n\n        td {\n          padding: 0 var(--pv-size-base-4);\n        }\n      }\n    }\n\n    td {\n      padding: 0 var(--pv-size-base-4);\n      width: 100% !important;\n      max-width: 100% !important;\n\n      &.divider {\n        padding: 0;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) Peculiar Ventures, LLC.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Watch,\n  Build,\n} from '@stencil/core';\n\nimport { Pkcs10CertificateRequest } from '../../crypto';\nimport { getDNSNameLink, getIPAddressLink, getLEILink } from '../../utils/third_party_links';\nimport {\n  BasicInformation,\n  SubjectName,\n  Signature,\n  Thumbprints,\n  Extensions,\n  Miscellaneous,\n  PublicKey,\n  Attributes,\n} from '../certificate-details-parts';\nimport { Typography } from '../typography';\n\nexport type CsrProp = string | Pkcs10CertificateRequest;\n\n@Component({\n  tag: 'peculiar-csr-viewer',\n  styleUrl: '../certificate-viewer/certificate-viewer.scss',\n  shadow: true,\n})\nexport class CsrViewer {\n  private certificateDecoded: Pkcs10CertificateRequest;\n\n  private certificateDecodeError: Error;\n\n  private mobileMediaQuery: MediaQueryList;\n\n  /**\n   * The certificate value for decode and show details. Use PEM or DER.\n   */\n  @Prop({ reflect: true }) certificate: CsrProp;\n\n  /**\n   * If `true` - component will show split-button to download certificate as PEM or DER.\n   */\n  @Prop() download?: boolean;\n\n  /**\n   * Subject Key Identifier extension children link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://censys.io/certificates?q=parsed.extensions.authority_key_id:%20{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdChildrenLink?: string;\n\n  /**\n   * Subject Key Identifier extension siblings link.\n   * <br />\n   * **NOTE**: `{{subjectKeyId}}` will be replaced to value from the extension.\n   * @example\n   *  https://some.com/{{subjectKeyId}}\n   */\n  @Prop({ reflect: true }) subjectKeyIdSiblingsLink?: string;\n\n  /**\n   * Mobile media query string to control screen view change.\n   * <br />\n   * **NOTE**: Based on https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia.\n   * @example\n   *  (max-width: 900px)\n   */\n  @Prop({ reflect: false }) mobileMediaQueryString?: string = '(max-width: 900px)';\n\n  @State() mobileScreenView: boolean = false;\n\n  @State() isDecodeInProcess: boolean = true;\n\n  private handleMediaQueryChange(event: MediaQueryListEvent) {\n    this.mobileScreenView = event.matches;\n  }\n\n  componentWillLoad() {\n    this.decodeCertificate(this.certificate);\n\n    if (Build.isBrowser) {\n      this.mobileMediaQuery = window.matchMedia(this.mobileMediaQueryString);\n      this.mobileMediaQuery.addEventListener('change', this.handleMediaQueryChange.bind(this));\n      this.mobileScreenView = this.mobileMediaQuery.matches;\n    }\n  }\n\n  disconnectedCallback() {\n    this.mobileMediaQuery.removeEventListener('change', this.handleMediaQueryChange.bind(this));\n  }\n\n  private async decodeCertificate(certificate: CsrProp) {\n    this.isDecodeInProcess = true;\n\n    try {\n      if (certificate instanceof Pkcs10CertificateRequest) {\n        this.certificateDecoded = certificate;\n      } else if (typeof certificate === 'string') {\n        this.certificateDecoded = new Pkcs10CertificateRequest(certificate);\n      } else {\n        return;\n      }\n\n      this.certificateDecoded.parseAttributes();\n      await this.certificateDecoded.getThumbprint('SHA-1');\n      await this.certificateDecoded.getThumbprint('SHA-256');\n    } catch (error) {\n      this.certificateDecodeError = error;\n\n      console.error('Error certificate parse:', error);\n    }\n\n    this.isDecodeInProcess = false;\n  }\n\n  /**\n   * Rerun decodeCertificate if previuos value not equal current value\n   */\n  @Watch('certificate')\n  watchCertificateAndDecode(\n    newValue: CsrProp,\n    oldValue: CsrProp,\n  ) {\n    if (typeof newValue === 'string' && typeof oldValue === 'string') {\n      if (newValue !== oldValue) {\n        this.decodeCertificate(newValue);\n      }\n\n      return;\n    }\n\n    if (\n      newValue instanceof Pkcs10CertificateRequest\n      && oldValue instanceof Pkcs10CertificateRequest\n    ) {\n      if (newValue.commonName !== oldValue.commonName) {\n        this.decodeCertificate(newValue);\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private getAuthKeyIdParentLink = (value: string) => value;\n\n  // eslint-disable-next-line class-methods-use-this\n  private getAuthKeyIdSiblingsLink = (value: string) => value;\n\n  private getSubjectKeyIdChildrenLink = (value: string) => this.subjectKeyIdChildrenLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  private getSubjectKeyIdSiblingsLink = (value: string) => this.subjectKeyIdSiblingsLink\n    ?.replace('{{subjectKeyId}}', value);\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderErrorState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There was an error decoding this certificate request.\n        </Typography>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderEmptyState() {\n    return (\n      <div class=\"status_wrapper\">\n        <Typography>\n          There is no certificate request available.\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.certificateDecodeError) {\n      return this.renderErrorState();\n    }\n\n    if (!this.certificateDecoded) {\n      return this.renderEmptyState();\n    }\n\n    return (\n      <Host\n        data-mobile-screen-view={String(this.mobileScreenView)}\n      >\n        <table>\n          <BasicInformation\n            {...this.certificateDecoded}\n          />\n\n          <SubjectName\n            name={this.certificateDecoded.subject}\n          />\n\n          <PublicKey\n            publicKey={this.certificateDecoded.publicKey}\n          />\n\n          <Signature\n            signature={this.certificateDecoded.signature}\n          />\n\n          <Thumbprints\n            thumbprints={this.certificateDecoded.thumbprints}\n          />\n\n          <Attributes\n            attributes={this.certificateDecoded.attributes}\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          <Extensions\n            extensions={this.certificateDecoded.extensions}\n            title=\"Extension Request\"\n            getLEILink={getLEILink}\n            getDNSNameLink={getDNSNameLink}\n            getIPAddressLink={getIPAddressLink}\n            getAuthKeyIdParentLink={this.getAuthKeyIdParentLink}\n            getAuthKeyIdSiblingsLink={this.getAuthKeyIdSiblingsLink}\n            getSubjectKeyIdChildrenLink={this.getSubjectKeyIdChildrenLink}\n            getSubjectKeyIdSiblingsLink={this.getSubjectKeyIdSiblingsLink}\n          />\n\n          {this.download && (\n            <Miscellaneous\n              certificate={this.certificateDecoded}\n            />\n          )}\n        </table>\n      </Host>\n    );\n  }\n}\n"],"names":["Name","Convert","certificateViewerCss"],"mappings":"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"}