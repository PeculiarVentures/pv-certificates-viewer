/*!
 * Â© Peculiar Ventures https://peculiarventures.com/ - MIT License
 */
import{A as t,e as s,C as e,N as r,f as i,E as n,g as a,h as o,j as h,k as u,R as c,l as f,m as l,n as m,o as g,p,q as E,r as C,s as b}from"./p-4a6ceeda.js";import{C as A,D as w}from"./p-59e5ac12.js";
/**
 * @license
 * Copyright (c) Peculiar Ventures, LLC.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */class N extends t{constructor(t){super(s(t),e);this.thumbprints={};this.type="X.509 Certificate";const{tbsCertificate:n}=this.asn;this.serialNumber=A.ToHex(n.serialNumber);this.subject=new r(n.subject).toJSON();this.issuer=new r(n.issuer).toJSON();this.version=n.version+1;const a=n.validity.notBefore.utcTime||n.validity.notBefore.generalTime;if(!a){throw new Error("Cannot get 'notBefore' value")}this.notBefore=a;const o=n.validity.notAfter.utcTime||n.validity.notAfter.generalTime;if(!o){throw new Error("Cannot get 'notAfter' value")}this.notAfter=o;this.validity=i(this.notBefore,this.notAfter)}parseExtensions(){const{tbsCertificate:t}=this.asn;if(t.extensions){this.extensions=t.extensions.map((t=>new n(a.serialize(t))))}}getPublicKeyInfo(t){const{subjectPublicKey:s,algorithm:e}=t;let r;if(e.algorithm===o&&e.parameters){r=a.parse(e.parameters,h)}if(e.algorithm===u){r=a.parse(s,c)}if(e.algorithm===f){r=a.parse(s,l);r=r.map((t=>this.getPublicKeyInfo(t)))}const i=a.serialize(t);return{params:r,value:i,algorithm:e.algorithm}}get publicKey(){return this.getPublicKeyInfo(this.asn.tbsCertificate.subjectPublicKeyInfo)}get signature(){const{signatureValue:t,signatureAlgorithm:s}=this.asn;let e;if(s.algorithm===m){const r=a.parse(t,g);const i=a.parse(s.parameters,p);e=i.map(((t,s)=>Object.assign(Object.assign({},t),{value:r[s]})))}return{params:e,value:t,algorithm:s.algorithm}}exportAsBase64(){return A.ToBase64(this.raw)}exportAsHexFormatted(){return E(A.ToHex(this.raw))}exportAsPemFormatted(){return`-----BEGIN CERTIFICATE-----\n${C(this.exportAsBase64())}\n-----END CERTIFICATE-----`}async getThumbprint(t="SHA-1"){try{const s=await b(t,this.raw);if(s){this.thumbprints[t]=A.ToHex(s)}}catch(t){console.error("Error thumbprint get:",t)}}get commonName(){if(!this.subject){return""}for(let t=0;t<this.subject.length;t+=1){const s=this.subject[t];if(s.shortName==="CN"||s.shortName==="E"||s.shortName==="O"){return s.value}}return""}get issuerCommonName(){if(!this.issuer){return""}for(let t=0;t<this.issuer.length;t+=1){const s=this.issuer[t];if(s.shortName==="CN"){return s.value}if(s.shortName==="E"){return s.value}}return""}get isRoot(){return JSON.stringify(this.issuer)===JSON.stringify(this.subject)}subjectToString(){if(!this.subject){return""}return this.subject.map((t=>`${t.shortName}=${t.value}`)).join(", ")}issuerToString(){if(!this.issuer){return""}return this.issuer.map((t=>`${t.shortName}=${t.value}`)).join(", ")}downloadAsPEM(t){w.cert.asPEM(this.exportAsPemFormatted(),t||this.commonName)}downloadAsDER(t){w.cert.asDER(this.exportAsHexFormatted(),t||this.commonName)}}export{N as X};
//# sourceMappingURL=p-48474b8d.js.map